tool_name,api_name,api_description,query_string,required_parameters,scenario,response_example,json_schema,endpoint_name,response_summary,calling_dependency,example_calling_code
"Seeking Alpha

",market/get-realtime-quotes,Get real time quotes,https://rapidapi.com/apidojo/api/seeking-alpha/playground/apiendpoint_f27b5f58-5c6b-4eba-9854-521a2f5a4935,"{""sa_ids"": ""String - The value of 'id' field returned in .../v2/auto-complete endpoint. This endpoint helps to query for real time quotes.  Separating  by comma to query multiple IDs at once. Ex : 612888,16123(required)""}",,,,,,,"import requests

url = ""https://seeking-alpha.p.rapidapi.com/market/get-realtime-quotes""

querystring = {""sa_ids"":""612888,16123""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""seeking-alpha.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Seeking Alpha

",market/get-dividend-investing,Get dividend investing,https://rapidapi.com/apidojo/api/seeking-alpha/playground/apiendpoint_2af50476-a786-49f6-9994-863894b8f705,No additional params,,,,,,,"import requests

url = ""https://seeking-alpha.p.rapidapi.com/market/get-dividend-investing""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""seeking-alpha.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Seeking Alpha

",market/get-day-watch,Get market day watch,https://rapidapi.com/apidojo/api/seeking-alpha/playground/apiendpoint_3026956f-14af-41f7-9958-e0a84f16b0e0,No additional params,,,,,,,"import requests

url = ""https://seeking-alpha.p.rapidapi.com/market/get-day-watch""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""seeking-alpha.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Seeking Alpha

",market/get-equity,Get different market equities,https://rapidapi.com/apidojo/api/seeking-alpha/playground/apiendpoint_5b05c51a-a2b4-43f3-ab59-9a84e3bfeb2b,"{""filterCategory"": ""String - One of the following : us-equity-markets|us-equity-sectors|us-equity-factors|global-equity|countries-equity(required)""}",,,,,,,"import requests

url = ""https://seeking-alpha.p.rapidapi.com/market/get-equity""

querystring = {""filterCategory"":""global-equity""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""seeking-alpha.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Seeking Alpha

",market/get-market-open,Get market open,https://rapidapi.com/apidojo/api/seeking-alpha/playground/apiendpoint_a6a01158-48be-4ad7-aeef-e9a9138efeaf,No additional params,,,,,,,"import requests

url = ""https://seeking-alpha.p.rapidapi.com/market/get-market-open""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""seeking-alpha.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"YAHOO FINANCE API DATA

",/news/detail,/news/detail,https://rapidapi.com/nusantaracodedotcom/api/yahoo-finance-api-data/playground/apiendpoint_b452e1ca-26e7-4dd8-952a-768c0c9b6295,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://yahoo-finance-api-data.p.rapidapi.com/news/detail""

querystring = {""id"":""4cd7395e-588c-4a64-a33b-64371b30dc95""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yahoo-finance-api-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"YAHOO FINANCE API DATA

",/news/hot-news,/news/hot-news,https://rapidapi.com/nusantaracodedotcom/api/yahoo-finance-api-data/playground/apiendpoint_6cbb6212-86f1-4f3f-af3e-92ca94704bee,"{""limit"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://yahoo-finance-api-data.p.rapidapi.com/news/hot-news""

querystring = {""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yahoo-finance-api-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"YAHOO FINANCE API DATA

",/news/list,/news/list from symbol,https://rapidapi.com/nusantaracodedotcom/api/yahoo-finance-api-data/playground/apiendpoint_d25b331d-03ed-43b9-843c-52ede1ba1f36,"{""symbol"": ""String - ...(required)"", ""limit"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://yahoo-finance-api-data.p.rapidapi.com/news/list""

querystring = {""symbol"":""AAPL"",""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yahoo-finance-api-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"YAHOO FINANCE API DATA

",/search/list-detail,get list detail from /search/list,https://rapidapi.com/nusantaracodedotcom/api/yahoo-finance-api-data/playground/apiendpoint_4fc90cf9-351b-46d4-968d-731336642c95,"{""id"": ""String - use(required)"", ""limit"": ""String - ...(required)"", ""offset"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://yahoo-finance-api-data.p.rapidapi.com/search/list-detail""

querystring = {""id"":""a4f8a58b-e458-44fe-b304-04af382a364e"",""limit"":""10"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yahoo-finance-api-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"YAHOO FINANCE API DATA

",/search/list,/search/list,https://rapidapi.com/nusantaracodedotcom/api/yahoo-finance-api-data/playground/apiendpoint_9bf420dd-b93e-480e-b1e0-af0cab4609ee,"{""keyword"": ""String - ...(required)"", ""limit"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://yahoo-finance-api-data.p.rapidapi.com/search/list""

querystring = {""keyword"":""materia"",""limit"":""20""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yahoo-finance-api-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"YAHOO FINANCE API DATA

",/search/symbol,/search/symbol,https://rapidapi.com/nusantaracodedotcom/api/yahoo-finance-api-data/playground/apiendpoint_9f466cfe-455e-43fb-8a16-f18d44ed509b,"{""keyword"": ""String - ...(required)"", ""limit"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://yahoo-finance-api-data.p.rapidapi.com/search/symbol""

querystring = {""keyword"":""trump"",""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yahoo-finance-api-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"YAHOO FINANCE API DATA

",/search/news,/search/news,https://rapidapi.com/nusantaracodedotcom/api/yahoo-finance-api-data/playground/apiendpoint_2d39e60c-2531-4c15-b83c-1cce450aa02a,"{""keyword"": ""String - ...(required)"", ""limit"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://yahoo-finance-api-data.p.rapidapi.com/search/news""

querystring = {""keyword"":""trump"",""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yahoo-finance-api-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Wall Street Journal,Get Sections,-,https://rapidapi.com/apiheya/api/wall-street-journal/playground/apiendpoint_bb753b4f-110e-40d0-a984-42b364726e98,No additional params,,,,,,,"import requests

url = ""https://wall-street-journal.p.rapidapi.com/api/v1/getSections""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""wall-street-journal.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Wall Street Journal,Search Keyword,-,https://rapidapi.com/apiheya/api/wall-street-journal/playground/apiendpoint_95c5674a-d2b8-47c8-94e9-eb4ae3e286a4,"{""query"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://wall-street-journal.p.rapidapi.com/api/v1/searchKeyword""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""wall-street-journal.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Wall Street Journal,Search Article By Keyword,-,https://rapidapi.com/apiheya/api/wall-street-journal/playground/apiendpoint_05ddc507-375c-4289-a5e5-10347ec99ba7,"{""keyword"": ""String - ...(required)"", ""pageNo"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://wall-street-journal.p.rapidapi.com/api/v1/searchArticleByKeyword""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""wall-street-journal.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Wall Street Journal,Get Article List,-,https://rapidapi.com/apiheya/api/wall-street-journal/playground/apiendpoint_a54a07a0-1493-4f9c-a838-d209f3566fbb,"{""key"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://wall-street-journal.p.rapidapi.com/api/v1/getArticleList""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""wall-street-journal.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Wall Street Journal,Get Article Details,-,https://rapidapi.com/apiheya/api/wall-street-journal/playground/apiendpoint_5cf082cd-4068-44b2-a31e-bff2a75b869b,"{""articleId"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://wall-street-journal.p.rapidapi.com/api/v1/getArticleDetails""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""wall-street-journal.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Wall Street Journal,Search Company By Keyword,-,https://rapidapi.com/apiheya/api/wall-street-journal/playground/apiendpoint_3a4b2cb7-b218-408d-a700-86c0e638210d,"{""keyword"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://wall-street-journal.p.rapidapi.com/api/v1/searchCompanyByKeyword""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""wall-street-journal.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Wall Street Journal,Get Stock Details,-,https://rapidapi.com/apiheya/api/wall-street-journal/playground/apiendpoint_6b48b1f9-2821-4455-9c45-965cc16ba2a7,"{""chartingSymbol"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://wall-street-journal.p.rapidapi.com/api/v1/getStockDetails""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""wall-street-journal.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Wall Street Journal,Get Time Series,-,https://rapidapi.com/apiheya/api/wall-street-journal/playground/apiendpoint_3fd0d9b1-f553-45a7-b105-1b87665f2446,"{""chartingSymbol"": ""String - ...(required)"", ""timeFrame"": ""Enum - ...(optional)""}",,,,,,,"import requests

url = ""https://wall-street-journal.p.rapidapi.com/api/v1/getTimeSeries""

querystring = {""timeFrame"":""1d""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""wall-street-journal.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"BB Finance

",market/auto-complete,Query suggestion by term and phrase,https://rapidapi.com/apidojo/api/bb-finance/playground/apiendpoint_9325cfa1-e0c0-43f9-95e9-4bd9f21a7eef,"{""query"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://bb-finance.p.rapidapi.com/market/auto-complete""

querystring = {""query"":""apple""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bb-finance.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"BB Finance

",news/list-by-region,List latest news from different categories and grouped by region,https://rapidapi.com/apidojo/api/bb-finance/playground/apiendpoint_f5d7006c-aa56-4ecc-ba3d-cfcda73ca548,"{""id"": ""String - One of the following is allowed home-v3|asia-home-v3|europe-home-v3|middle-east-home-v3|africa-home-v3|canada-home-v3(required)""}",,,,,,,"import requests

url = ""https://bb-finance.p.rapidapi.com/news/list-by-region""

querystring = {""id"":""europe-home-v3""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bb-finance.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"BB Finance

",stories/list,Get a list of stories related to a sticker,https://rapidapi.com/apidojo/api/bb-finance/playground/apiendpoint_6f07fb85-be40-4c23-9b1e-4a77c61d1eb6,"{""id"": ""String - The value of id field returned in .../market/auto-complete endpoint(required)"", ""template"": ""String - One of the followings : COMMODITY|CURRENCY|INDEX|INDEXFUTURE|RATE|STOCK(required)""}",,,,,,,"import requests

url = ""https://bb-finance.p.rapidapi.com/stories/list""

querystring = {""id"":""usdjpy"",""template"":""CURRENCY""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bb-finance.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"BB Finance

",stories/detail,Get full story information,https://rapidapi.com/apidojo/api/bb-finance/playground/apiendpoint_e19fa22b-cee3-456c-a16e-ef3c1e442d41,"{""internalID"": ""String - Get suitable value from .../stories/list or .../news/list or .../news/list-by-region endpoints(required)""}",,,,,,,"import requests

url = ""https://bb-finance.p.rapidapi.com/stories/detail""

querystring = {""internalID"":""QFY0Y6T0AFB501""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bb-finance.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Latest Stock Price,equities-search,"Search based on name|isin|symbol.
Requires at least 2 character.",https://rapidapi.com/suneetk92/api/latest-stock-price/playground/apiendpoint_f538eddb-9b1f-4945-9b19-2c2a16c474b7,"{""Search"": ""String - Define Search text.\nSearch based on name|isin|symbol.\nRequires at least 2 character.(required)""}",,,,,,,"import requests

url = ""https://latest-stock-price.p.rapidapi.com/equities-search""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""latest-stock-price.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Latest Stock Price,equities-enhanced,Latest stock data,https://rapidapi.com/suneetk92/api/latest-stock-price/playground/apiendpoint_04557478-70eb-49e9-ae64-de0d9a75047c,"{""Symbols"": ""String - Define Symbols\nSupports multiple comma separated Symbols(required)""}",,,,,,,"import requests

url = ""https://latest-stock-price.p.rapidapi.com/equities-enhanced""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""latest-stock-price.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Latest Stock Price,equities,Latest stock data,https://rapidapi.com/suneetk92/api/latest-stock-price/playground/apiendpoint_bfd7b183-67e6-4ecf-afd9-a42175b471aa,"{""ISIN"": ""String - Define ISIN\nSupports multiple comma separated ISIN(optional)"", ""OnlyIndex"": ""Boolean - Show only indices value(optional)"", ""Indicies"": ""String - Define Index Code\nSupports multiple comma separated Index CodePossible values:BANKNIFTYCNX100CNX200CNX500CNXALPHACNXAUTOCNXCOMMOCNXCONSMCNXDEFTYCNXDIVOPTCNXENERCNXFINCNXFMCGCNXHIGHCNXINFRACNXITCNXLOWCNXLOWV30CNXMCAPCNXMEDIACNXMETALCNXMNCCNXNFTYJUNCNXPHARCNXPSECNXPSUCNXREALTYCNXSCAPCNXSERVCPSEINDIAVIXLIX15LIX15MCAPLRGMID250NI15NIFADIBIRNIFESGNIFFINEXNIFFINSENIFINDNIFMAHINIFMICNIFMIDSNIFMIDSENIFMOMNIFMULNIFREINNIFSMQUANIFTALPFNIFTATGRONIFTATGRO25PCNIFTCOHOUSNIFTDEFENIFTHOUSNIFTMANUNIFTMFINNIFTMHEANIFTMITNIFTMOBINIFTMOMENIFTNONNIFTPR1XNIFTPR2XNIFTRANIFTTOTANIFTTR1XNIFTTR2XNIFTYNIFTY100EQWNIFTY100ESGNIFTY200QUANIFTY500VALNIFTYALPNIFTYALPHQUALNIFTYALPHVOLT30NIFTYCONNIFTYDIVNIFTYEQUWEINIFTYM150NIFTYM50NIFTYMIDQUANIFTYMSC400NIFTYOILNIFTYPVTBANKNIFTYQUALVOLT30NIFTYSCAP250NIFTYSCAP50NIFTYSMENIFTYVALUEVOLT30NSEHCARENSEQ30NV20(optional)""}",,,,,,,"import requests

url = ""https://latest-stock-price.p.rapidapi.com/equities""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""latest-stock-price.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Latest Stock Price,timeseries,Get timeseries data for given symbol,https://rapidapi.com/suneetk92/api/latest-stock-price/playground/apiendpoint_e980c96c-b919-4f3d-add3-2d2a85182e9a,"{""Symbol"": ""String - ...(required)"", ""Timescale"": ""Number - Define Timescale for timeseries dataUnit: minutesPossible values: >0 (for MEGA), >1 (for ULTRA and PRO)Default: 1(required)"", ""Period"": ""String - Define Period for timeseries dataDefault: 1DAYPossible values:DAY (1DAY, 5DAY....)WEEK (1WEEK , 4WEEK ....)MONTH (1MONTH , 3MONTH ....)YEAR (1YEAR , 3YEAR ....)(required)""}",,,,,,,"import requests

url = ""https://latest-stock-price.p.rapidapi.com/timeseries""

querystring = {""Symbol"":""INFO.NS"",""Timescale"":""1"",""Period"":""1DAY""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""latest-stock-price.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
YT-API,Home Feed,"Get home feeds, region-wise & niche-wise.
Quota cost is 1 unit.",https://rapidapi.com/ytjar/api/yt-api/playground/apiendpoint_cba26732-c359-470f-b461-622364e16b18,"{""token"": ""String - Pagination token\nAlternatively, use X-TOKEN in header(optional)"", ""geo"": ""String - ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc.(optional)"", ""lang"": ""String - Locale/language for request. Like en, gb, hi, etc(optional)"", ""X-CACHEBYPASS"": ""String - Cache bypass, the value must be 1\nQuota Cost +1(optional)"", ""X-TOKEN"": ""String - Alternative way to pass Pagination token via headers.\nThis will solve 414, URI too long issue.(optional)""}",,,,,,,"import requests

url = ""https://yt-api.p.rapidapi.com/home""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yt-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
YT-API,Trending,,https://rapidapi.com/ytjar/api/yt-api/playground/endpoint_0c6af70b-87c1-4859-91d1-f9bdcf0acc8b,"{""geo"": ""String - ISO 3166-2 country code of the region for which you want the trending data. Like US (default), UK, CA, IN, etc.(required)"", ""type"": ""Enum - Trending type:nowmusicgamesmoviesDefault isnow(optional)"", ""lang"": ""String - Locale/language for request. Like en, gb, hi, etc(optional)"", ""X-CACHEBYPASS"": ""String - Cache bypass, the value must be 1\nQuota Cost +1(optional)""}",,,,,,,"import requests

url = ""https://yt-api.p.rapidapi.com/trending""

querystring = {""geo"":""US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yt-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
YT-API,Search,,https://rapidapi.com/ytjar/api/yt-api/playground/endpoint_26005fe3-24b1-418e-9723-45b6d81e70b9,"{""query"": ""String - Search term(required)"", ""token"": ""String - Pagination token\nAlternatively, use X-TOKEN in header(optional)"", ""geo"": ""String - ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc.(optional)"", ""lang"": ""String - Locale/language for request. Like en, gb, hi, etc(optional)"", ""type"": ""Enum - Search type filter options:videochannelplaylistmovieshowshortsSorting is not available inshorts(optional)"", ""duration"": ""Enum - Duration filter options:short- less than 4 minmedium- 4 to 20 minlong- more than 20 min(optional)"", ""features"": ""String - Video Features options:HDsubtitlesCCommons3DLivePurchased4K360LocationHDRVR180Multiple features could be joined by ','\nFor example: HD,subtitles(optional)"", ""upload_date"": ""Enum - Upload Date filter options:hourtodayweekmonthyear(optional)"", ""sort_by"": ""Enum - Results Sort options:relevance[default]ratingdateviews(optional)"", ""X-CACHEBYPASS"": ""String - Cache bypass, the value must be 1\nQuota Cost +1(optional)"", ""X-TOKEN"": ""String - Alternative way to pass Pagination token via headers.\nThis will solve 414, URI too long issue.(optional)""}",,,,,,,"import requests

url = ""https://yt-api.p.rapidapi.com/search""

querystring = {""query"":""cat""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yt-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
YT-API,Playlist,,https://rapidapi.com/ytjar/api/yt-api/playground/endpoint_59e48c6e-efd1-4fad-9130-ff8192c9f4bd,"{""id"": ""String - Playlist Id(required)"", ""token"": ""String - Pagination token\nAlternatively, use X-TOKEN in header(optional)"", ""geo"": ""String - ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc.(optional)"", ""lang"": ""String - Locale/language for request. Like en, gb, hi, etc(optional)"", ""X-CACHEBYPASS"": ""String - Cache bypass, the value must be 1\nQuota Cost +1(optional)"", ""X-TOKEN"": ""String - Alternative way to pass Pagination token via headers.\nThis will solve 414, URI too long issue.(optional)""}",,,,,,,"import requests

url = ""https://yt-api.p.rapidapi.com/playlist""

querystring = {""id"":""PLMC9KNkIncKseYxDN2niH6glGRWKsLtde""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yt-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
YT-API,Hashtag,,https://rapidapi.com/ytjar/api/yt-api/playground/endpoint_09f7bcb0-1db6-4964-b064-46e3a0ab054c,"{""tag"": ""String - ...(required)"", ""type"": ""Enum - Available options areallfor videos and shortsshortsfor only shorts(optional)"", ""params"": ""String - Hashtag params(optional)"", ""token"": ""String - Pagination token\nAlternatively, use X-TOKEN in header(optional)"", ""geo"": ""String - ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc.(optional)"", ""lang"": ""String - Language code for localized results. Like en, gb, hi, etc(optional)"", ""X-CACHEBYPASS"": ""String - Cache bypass, the value must be 1\nQuota Cost +1(optional)"", ""X-TOKEN"": ""String - Alternative way to pass Pagination token via headers.\nThis will solve 414, URI too long issue.(optional)""}",,,,,,,"import requests

url = ""https://yt-api.p.rapidapi.com/hashtag""

querystring = {""tag"":""viral""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yt-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
YT-API,Comments,,https://rapidapi.com/ytjar/api/yt-api/playground/endpoint_25a925a1-a6bd-4074-83da-1dd4e7bdc59e,"{""id"": ""String - Video Id or Shorts Video Id(required)"", ""token"": ""String - Pagination token\nAlternatively, use X-TOKEN in header(optional)"", ""sort_by"": ""Enum - Available options:newesttop[default](optional)"", ""geo"": ""String - ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc.(optional)"", ""lang"": ""String - Locale/language for request. Like en, gb, hi, etc(optional)"", ""X-CACHEBYPASS"": ""String - Cache bypass, the value must be 1\nQuota Cost +1(optional)"", ""X-TOKEN"": ""String - Alternative way to pass Pagination token via headers.\nThis will solve 414, URI too long issue.(optional)""}",,,,,,,"import requests

url = ""https://yt-api.p.rapidapi.com/comments""

querystring = {""id"":""1gxf6flnvNA""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yt-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
YT-API,Resolve URL,,https://rapidapi.com/ytjar/api/yt-api/playground/endpoint_7e22cf41-1db4-476c-9516-fe32f723a44c,"{""url"": ""String - ...(required)"", ""X-CACHEBYPASS"": ""String - Cache bypass, the value must be 1\nQuota Cost +1(optional)""}",,,,,,,"import requests

url = ""https://yt-api.p.rapidapi.com/resolve""

querystring = {""url"":""https://www.youtube.com/@TED""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yt-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
YT-API,Download/Stream,,https://rapidapi.com/ytjar/api/yt-api/playground/endpoint_facba415-c341-4af1-b542-6f17c9fc464a,"{""id"": ""String - Youtube Video Id or Shorts Id.(required)"", ""cgeo"": ""String - Country code inISO 3166format of the end user.\nNot providingcgeoparam may cost +1 quota.It is important to provide geo of the end user to get the best speed and direct links.If links are used in the server, thencgeowill be the geo of the server.\nNot providingcgeoparam may lead to403 issue(required)""}",,,,,,,"import requests

url = ""https://yt-api.p.rapidapi.com/dl""

querystring = {""id"":""arj7oStGLkU"",""cgeo"":""DE""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yt-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Job Search,Job Search,Search for jobs posted on any public job site across the web on the largest job aggregate in the world (Google for Jobs). Extensive filtering support and most options available on Google for Jobs.,https://rapidapi.com/letscrape-6bRBa3QguO5/api/jsearch/playground/apiendpoint_23823c0b-cab1-4b42-8b13-1ccae3496c07,"{""query"": ""String - Free-form jobs search query. It is highly recommended to include job title and location as part of the query, see query examples below.Examples:web development in chicagomarketing manager in new york via linkedindeveloper in germany 60306(required)"", ""page"": ""Number - Page to return (each page includes up to 10 results).Default:1Allowed values:1-100(optional)"", ""num_pages"": ""Number - Number of pages to return, starting frompage.Default:1Allowed values:1-20Note: requests for more than one page and up to 10 pages are charged x2 and requests for more than 10 pages are charged 3x.(optional)"", ""date_posted"": ""Enum - Find jobs posted within the time you specify.Default:allAllowed values:all, today, 3days, week, month(optional)"", ""remote_jobs_only"": ""Boolean - Find remote jobs only (work from home).Default:false(optional)"", ""employment_types"": ""String - Find jobs of particular employment types, specified as a comma delimited list of the following values:FULLTIME, CONTRACTOR, PARTTIME, INTERN.(optional)"", ""job_requirements"": ""String - Find jobs with specific requirements, specified as a comma delimited list of the following values:under_3_years_experience, more_than_3_years_experience, no_experience, no_degree.(optional)"", ""job_titles"": ""String - Find jobs with specific job titles - specified as a comma (,) separated list ofjob_titlesfilter values (i.e. filtervaluefield) as returned by theSearch Filtersendpoint.Example:c2VuaW9y,YXNzb2NpYXRl(optional)"", ""company_types"": ""String - Find jobs posted by companies of certain types - specified as a comma (,) separated list ofcompany_typesfilter values (i.e. filtervaluefield) as returned by theSearch Filtersendpoint.Example:L2J1c2luZXNzL25haWNzMjAwNy81MjpGaW5hbmNl,L2J1c2luZXNzL25haWNzMjAwNy81MTpJbmZvcm1hdGlvbg==(optional)"", ""employer"": ""String - Find jobs posted by specific employers - specified as a comma (,) separated list ofemployerfilter values (i.e. filtervaluefield) as returned by theSearch Filtersendpoint.Example:L2cvMTFoMTV4eHhydDpJbmZpbml0eSBDb25zdWx0aW5n,L2cvMTFmMDEzOXIxbjpDeWJlckNvZGVycw==(optional)"", ""actively_hiring"": ""Boolean - Find jobs at employers that are hiring a lot right now.Default:false(optional)"", ""radius"": ""Number - Return jobs within a certain distance from location as specified as part of the query (in km).(optional)"", ""categories"": ""String - [Deprecated]Find jobs in specific categories/industries - specified as a comma (,) separated list ofcategoriesfilter values (i.e. filtervaluefield) as returned by theSearch Filtersendpoint.Example:R0MxODpNYW5hZ2VtZW50,R0MwNTpBcnRGYXNoaW9uRGVzaWdu(optional)"", ""exclude_job_publishers"": ""String - Exclude jobs published by specific publishers, specified as a comma (,) separated list of publishers to exclude.Example:BeeBe,Dice(optional)"", ""markup_job_description"": ""Boolean - Return job_description field as markup.Default:false(optional)"", ""fields"": ""String - A comma separated list of job fields to include in the response (field projection). By default all fields are returned.Example:employer_name,job_publisher,job_title,job_country(optional)""}",,,,,,,"import requests

url = ""https://jsearch.p.rapidapi.com/search""

querystring = {""query"":""Node.js developer in New-York, USA"",""page"":""1"",""num_pages"":""1"",""date_posted"":""all""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""jsearch.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Job Search,Job Details,"Get all job details, including additional information such as: application options / links, employer reviews and estimated salaries for similar jobs.",https://rapidapi.com/letscrape-6bRBa3QguO5/api/jsearch/playground/apiendpoint_05e9e971-5b7f-4c4f-afd5-08571c6706c4,"{""job_id"": ""String - Job Id of the job for which to get details.Batching of up to 20 Job Ids is supported by separating multiple Job Ids by comma (,). Note that each Job Id in a batch request is counted as a request for quota calculation.(required)"", ""extended_publisher_details"": ""Boolean - Return additional publisher details such as website url and favicon.(optional)"", ""fields"": ""String - A comma separated list of job fields to include in the response (field projection). By default all fields are returned.Example:employer_name,job_publisher,job_title,job_country(optional)"", ""markup_job_description"": ""Boolean - Return job_description field as markup.Default:false(optional)""}",,,,,,,"import requests

url = ""https://jsearch.p.rapidapi.com/job-details""

querystring = {""job_id"":""7oKm_SkxjLxpFtVuAAAAAA=="",""extended_publisher_details"":""false""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""jsearch.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Job Search,Estimated Job Salary,"Get estimated salaries / pay for a jobs around a location by job title and location. The salary estimations are returned for several periods, depending on data availability / relevance, and includes: hourly, daily, weekly, monthly, or yearly.",https://rapidapi.com/letscrape-6bRBa3QguO5/api/jsearch/playground/apiendpoint_02c97a05-373f-4c24-8ddc-73a713136ca1,"{""job_title"": ""String - Job title for which to get salary estimation.(required)"", ""location"": ""String - Location in which to get salary estimation.(required)"", ""radius"": ""Number - Search radius in km (measured from location).Default:200(optional)"", ""fields"": ""String - A comma separated list of job salary fields to include in the response (field projection). By default all fields are returned.Example:job_title,median_salary,location(optional)""}",,,,,,,"import requests

url = ""https://jsearch.p.rapidapi.com/estimated-salary""

querystring = {""job_title"":""NodeJS Developer"",""location"":""New-York, NY, USA"",""radius"":""100""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""jsearch.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Job Search,Job Search Filters,"Get filter values for use with the **Search** endpoint.
Accepts all **Search** endpoint parameters (except for `page` and `num_pages`) and returns the relevant filters and their estimated result counts for later use in search or for analytics.",https://rapidapi.com/letscrape-6bRBa3QguO5/api/jsearch/playground/apiendpoint_3a540530-966e-4a3a-8177-03652919fe9b,"{""query"": ""String - Free-form jobs search query. It is highly recommended to include job title and location as part of the query, see query examples below.Examples:web development in chicagomarketing manager in new york via linkedindeveloper in germany 60306(required)"", ""date_posted"": ""Enum - Find jobs posted within the time you specify.Default:allAllowed values:all, today, 3days, week, month(optional)"", ""remote_jobs_only"": ""Boolean - Find remote jobs only (work from home).Default:false(optional)"", ""employment_types"": ""String - Find jobs of particular employment types, specified as a comma delimited list of the following values:FULLTIME, CONTRACTOR, PARTTIME, INTERN.(optional)"", ""job_requirements"": ""String - Find jobs with specific requirements, specified as a comma delimited list of the following values:under_3_years_experience, more_than_3_years_experience, no_experience, no_degree.(optional)"", ""radius"": ""Number - Return jobs within a certain distance from location as specified as part of the query (in km).(optional)"", ""job_titles"": ""String - Find jobs with specific job titles - specified as a comma (,) separated list ofjob_titlesfilter values (i.e. filtervaluefield) as returned by a previous call to this endpoint.Example:c2VuaW9y,YXNzb2NpYXRl(optional)"", ""company_types"": ""String - Company types filter - specified as a comma (,) separated list ofcompany_typesfilter values (i.e. filtervaluefield) as returned by a previous call to this endpoint.Example:L2J1c2luZXNzL25haWNzMjAwNy81MjpGaW5hbmNl,L2J1c2luZXNzL25haWNzMjAwNy81MTpJbmZvcm1hdGlvbg==(optional)"", ""employers"": ""String - Employers filter - specified as a comma (,) separated list ofemployersfilter values (i.e. filtervaluefield) as returned by a previous call to this endpoint.Example:L2cvMTFoMTV4eHhydDpJbmZpbml0eSBDb25zdWx0aW5n,L2cvMTFmMDEzOXIxbjpDeWJlckNvZGVycw==(optional)"", ""actively_hiring"": ""Boolean - Find jobs at employers that are hiring a lot right now.Default:false(optional)"", ""categories"": ""String - [Deprecated]Categories/industries filter - specified as a comma (,) separated list ofcategoriesfilter values (i.e. filtervaluefield) as returned by a previous call to this endpoint.Example:R0MxODpNYW5hZ2VtZW50,R0MwNTpBcnRGYXNoaW9uRGVzaWdu(optional)""}",,,,,,,"import requests

url = ""https://jsearch.p.rapidapi.com/search-filters""

querystring = {""query"":""Node.js developer in New-York,USA"",""date_posted"":""all""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""jsearch.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Maps Data,Search,Search Google maps for local business information.,https://rapidapi.com/alexanderxbx/api/maps-data/playground/apiendpoint_dca27467-bba9-4fa7-8879-43cc900bb8db,"{""query"": ""String - ...(required)"", ""limit"": ""Number - maximum 500(optional)"", ""country"": ""String - ...(optional)"", ""lang"": ""String - ...(optional)"", ""lat"": ""Number - Latitude for the search point.(optional)"", ""lng"": ""Number - Longtitude for the search point.(optional)"", ""offset"": ""Number - ...(optional)"", ""zoom"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://maps-data.p.rapidapi.com/searchmaps.php""

querystring = {""query"":""restaurant"",""limit"":""20"",""country"":""us"",""lang"":""en"",""lat"":""51.5072"",""lng"":""0.12"",""offset"":""0"",""zoom"":""13""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""maps-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Maps Data,Search Nearby,Search Google maps for local business information.,https://rapidapi.com/alexanderxbx/api/maps-data/playground/apiendpoint_79e81b01-e299-4c8f-98ae-0899cb502ef4,"{""query"": ""String - ...(required)"", ""lat"": ""Number - Latitude for the search point.(required)"", ""lng"": ""Number - Longtitude for the search point.(required)"", ""limit"": ""Number - maximum 500(optional)"", ""country"": ""String - ...(optional)"", ""lang"": ""String - ...(optional)"", ""offset"": ""Number - ...(optional)"", ""zoom"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://maps-data.p.rapidapi.com/nearby.php""

querystring = {""query"":""cafe"",""lat"":""48.8577848"",""lng"":""2.2888379"",""limit"":""20"",""country"":""us"",""lang"":""en"",""offset"":""0"",""zoom"":""12""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""maps-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Maps Data,Place info,Gets the data of place info by it's business id.,https://rapidapi.com/alexanderxbx/api/maps-data/playground/apiendpoint_ceabe953-caa2-43f4-a63f-330cb1e55a89,"{""business_id"": ""String - ...(required)"", ""country"": ""String - ...(optional)"", ""lang"": ""String - ...(optional)"", ""place_id"": ""String - Google Place ID, has higher priority than business id and overwrites it.(optional)""}",,,,,,,"import requests

url = ""https://maps-data.p.rapidapi.com/place.php""

querystring = {""business_id"":""0x47f4eb87e91f866d:0x9629fabb993eb66"",""country"":""fr"",""lang"":""en"",""place_id"":""ChIJk_grnPDq9EcRE7gOH9gAPZA""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""maps-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Maps Data,Geocoding,Get the coordinates of the place by the address query.,https://rapidapi.com/alexanderxbx/api/maps-data/playground/apiendpoint_be19d93e-6c79-40c5-ad8d-ea11b32b8e09,"{""query"": ""String - ...(required)"", ""lang"": ""String - ...(optional)"", ""country"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://maps-data.p.rapidapi.com/geocoding.php""

querystring = {""query"":""Place de la Navigation"",""lang"":""en"",""country"":""fr""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""maps-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Maps Data,Place reviews,Gets the reviews of specific business.,https://rapidapi.com/alexanderxbx/api/maps-data/playground/apiendpoint_2f487f1c-3516-49b6-87e4-b45a5d05e2e4,"{""business_id"": ""String - ...(required)"", ""country"": ""String - ...(optional)"", ""lang"": ""String - ...(optional)"", ""limit"": ""Number - Maximum 20(optional)"", ""cursor"": ""String - The cursor value from the latest review you've got from previous response.\nExample: CAESBkVnSUlDdw==(optional)"", ""sort"": ""Enum - ...(optional)"", ""place_id"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://maps-data.p.rapidapi.com/reviews.php""

querystring = {""business_id"":""0x47f4ea8ed352d3c5:0x7bb3bc00dfc039a9"",""country"":""us"",""lang"":""en"",""limit"":""20"",""sort"":""Relevant""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""maps-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Maps Data,What is here?,Get information about address or local businesses by the geocode.,https://rapidapi.com/alexanderxbx/api/maps-data/playground/apiendpoint_782738ee-3d13-4e70-9cf8-d39a83803fd3,"{""lat"": ""Number - ...(required)"", ""lng"": ""Number - ...(required)"", ""lang"": ""String - ...(optional)"", ""country"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://maps-data.p.rapidapi.com/whatishere.php""

querystring = {""lat"":""48.8719556"",""lng"":""2.3415407"",""lang"":""en"",""country"":""us""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""maps-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Maps Data,Place photos,Get photos from google maps.,https://rapidapi.com/alexanderxbx/api/maps-data/playground/apiendpoint_e8a12ab5-350e-42d6-8f68-90e7579805d8,"{""business_id"": ""String - ...(required)"", ""lang"": ""String - ...(optional)"", ""country"": ""String - ...(optional)"", ""cursor"": ""String - ...(optional)"", ""place_id"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://maps-data.p.rapidapi.com/photos.php""

querystring = {""business_id"":""0x47e66e2964e34e2d:0x8ddca9ee380ef7e0"",""lang"":""en"",""country"":""us""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""maps-data.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
House Plants,GetByCategory,Get all item based on a category,https://rapidapi.com/mnai01/api/house-plants2/playground/apiendpoint_c9fa93e0-a036-4285-8220-4b94be8c6243,"{""category"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://house-plants2.p.rapidapi.com/category/Fern""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""house-plants2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
House Plants,GetAllCategories,Get all available categories for all plants,https://rapidapi.com/mnai01/api/house-plants2/playground/apiendpoint_c85da91c-ff2e-4411-b7f7-1fba09abc6b4,No additional params,,,,,,,"import requests

url = ""https://house-plants2.p.rapidapi.com/categories""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""house-plants2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
House Plants,GetAllLite,"Gets all items but only identifying data. All additional data can be grabbed from the GetById route or the GetAll route which return all item with all its keys, no restriction",https://rapidapi.com/mnai01/api/house-plants2/playground/apiendpoint_5c65c5a1-d433-4a13-a316-585b7fada0b7,No additional params,,,,,,,"import requests

url = ""https://house-plants2.p.rapidapi.com/all-lite""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""house-plants2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
House Plants,GetById,"Returns a single plants data within an object. Information for each plant returned contains (but not limited to) the list below

- Latin name 
- Img 
- Id
- Family 
- Other names 
- Common name 
- Common name (fr.) 
- Description 
- Categories 
- Origin 
- Climat 
- Temperature max
- Temperature min
- Zone 
- Growth 
- Light ideal 
- Light tolered 
- Watering 
- Insects 
- Disease 
- Appeal 
- Color of leaf 
- Color of blooms 
- Blooming season 
- Perfume 
- Avaibility 
- Pot diameter
- Height at purchase
- Width at purchase
- Height potential
- Width potential
- Available sizes
- Bearing 
- Clump
- Pruning 
- Style 
- Use",https://rapidapi.com/mnai01/api/house-plants2/playground/apiendpoint_831cf0ee-64aa-4588-8282-5657082f69af,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://house-plants2.p.rapidapi.com/id/53417c12-4824-5995-bce0-b81984ebbd1d""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""house-plants2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Reddit,v1/search,"Search specific topics on Reddit and filter results based on posts, comments, users, and communities. This endpoint also allows you to sort the results based on relevant, hot, new, rising, and time frame.",https://rapidapi.com/sparior/api/reddit3/playground/apiendpoint_f2cffbcc-80d3-4c7f-93cf-3526f9824346,"{""search"": ""String - The search term. Example: Investing(required)"", ""subreddit"": ""String - A subreddit to search within. Leave blank to search sitewide. Example: wallstreetbets(optional)"", ""filter"": ""String - The type of content to filter ('posts', 'comments', 'media', 'users', or 'communities'). Users and communities are available sitewide only. Default: post(optional)"", ""timeFilter"": ""String - The time period to filter by ('all', 'year', 'month', 'week', 'day', or 'hour'). Only applicable when sortType is relevance or comments. Default: all(optional)"", ""sortType"": ""String - The sorting type ('relevance', 'hot','top', 'new', or 'comments'). Default: relevance(optional)""}",,,,,,,"import requests

url = ""https://reddit3.p.rapidapi.com/v1/reddit/search""

querystring = {""search"":""investing"",""subreddit"":""wallstreetbets"",""filter"":""posts"",""timeFilter"":""year"",""sortType"":""relevance""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""reddit3.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Reddit,v1/posts,"Get Reddit hot, new, and top posts from a post URL.",https://rapidapi.com/sparior/api/reddit3/playground/apiendpoint_75313d3c-6c98-4f0b-9ca5-ad059dd6c088,"{""url"": ""String - Enter a valid subreddit url(required)"", ""filter"": ""String - Enter:hotornewortop(default: hot)(optional)""}",,,,,,,"import requests

url = ""https://reddit3.p.rapidapi.com/v1/reddit/posts""

querystring = {""url"":""https://www.reddit.com/r/wallstreetbets"",""filter"":""hot""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""reddit3.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Reddit,v1/post-details,"Get post content such as thread content, upvotes, comments, etc...",https://rapidapi.com/sparior/api/reddit3/playground/apiendpoint_50eb7977-22f2-4d96-b3b7-64b2d0b08ebb,"{""url"": ""String - Enter a single post URL(required)""}",,,,,,,"import requests

url = ""https://reddit3.p.rapidapi.com/v1/reddit/post""

querystring = {""url"":""https://www.reddit.com/r/wallstreetbets/comments/p0esdp/do_hedge_funds_beat_the_market_i_analyzed_the""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""reddit3.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Reddit,v1/user-data,"Get posts and comments from a given user. This endpoint also allows you to sort the results based on hot, top, and new.",https://rapidapi.com/sparior/api/reddit3/playground/apiendpoint_da06a1ab-d594-40b0-88a2-4589b36cfaa1,"{""username"": ""String - Provide a valid username. Example: Real_Grapefruit_5570(required)"", ""filter"": ""String - The type of content to filter ('posts', 'comments', 'media', 'users', or 'communities'). Users and communities are available sitewide only. Default: post(optional)"", ""sortType"": ""String - The sorting type ('relevance', 'hot','top', 'new', or 'comments'). Default: relevance(optional)""}",,,,,,,"import requests

url = ""https://reddit3.p.rapidapi.com/v1/reddit/user-data""

querystring = {""username"":""Real_Grapefruit_5570"",""filter"":""comments"",""sortType"":""new""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""reddit3.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TikTok All in One,Discover,"Get list of trending videos with specific hashtag for region(country).
This is ""Discover"" screen in the mobile app.",https://rapidapi.com/h0p3rwe/api/tiktok-all-in-one/playground/apiendpoint_ea39bca4-2d1e-4cd9-8421-be0631eadd96,"{""region"": ""String - Specify a region(default US).\nSupported any region like: RU, US, GB, DE, FR, ES, AU, BR, CA, GR, IL, IT, MX, NL, PE, PL, SE, UA, VE, etc...(optional)"", ""offset"": ""Number - Offset to get more results if \\\\\\\""has_more\\\\\\\"" field equal 1\nIt can be any positive integer or you can get it from \\\\\\\""cursor\\\\\\\"" field(optional)""}",,,,,,,"import requests

url = ""https://tiktok-all-in-one.p.rapidapi.com/discover""

querystring = {""region"":""US"",""offset"":""20""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tiktok-all-in-one.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TikTok All in One,Hashtag(challenge) search,"Get hashtags(challenges) by query string.
This is ""Hashtags"" tab in the mobile app search page",https://rapidapi.com/h0p3rwe/api/tiktok-all-in-one/playground/apiendpoint_c0a1572a-a895-49b2-800d-654398405972,"{""query"": ""String - Keyword you want to find in hashtags(challenges)(required)"", ""offset"": ""Number - Offset to get more results if \""has_more\"" field equal 1\nIt can be any positive integer or you can get it from \""cursor\"" field(optional)""}",,,,,,,"import requests

url = ""https://tiktok-all-in-one.p.rapidapi.com/search/hashtag""

querystring = {""query"":""hello"",""offset"":""20""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tiktok-all-in-one.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TikTok All in One,User info,Get general info about user by id,https://rapidapi.com/h0p3rwe/api/tiktok-all-in-one/playground/apiendpoint_2bf9c1fe-c64f-40e4-b0ca-60c66a83b618,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://tiktok-all-in-one.p.rapidapi.com/user""

querystring = {""id"":""6774419827379389445""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tiktok-all-in-one.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TikTok All in One,User recommendation,List of popular users in your region/country.,https://rapidapi.com/h0p3rwe/api/tiktok-all-in-one/playground/apiendpoint_d0ca8fc2-d877-4f94-beec-462b5752d76f,"{""region"": ""String - Specify a region to get list of relevant users from.\nSupported any region like: RU, US, GB, DE, FR, ES, AU, BR, CA, GR, IL, IT, MX, NL, PE, PL, SE, UA, VE, etc...\nDefault is US(optional)""}",,,,,,,"import requests

url = ""https://tiktok-all-in-one.p.rapidapi.com/user/recommend""

querystring = {""region"":""US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tiktok-all-in-one.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TikTok All in One,User followers,"Get users followers list.
This is ""Followers"" button in user profile.",https://rapidapi.com/h0p3rwe/api/tiktok-all-in-one/playground/apiendpoint_dd07bf10-17a9-491e-a676-f9e6a11aa5b1,"{""id"": ""Number - User id for what you want get followers(required)"", ""min_time"": ""Number - \\\""min_time\\\"" field from previous request response, is used to get next list of users(pagination)(optional)""}",,,,,,,"import requests

url = ""https://tiktok-all-in-one.p.rapidapi.com/user/follower""

querystring = {""id"":""6774419827379389445"",""min_time"":""1640026682""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tiktok-all-in-one.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TikTok All in One,User following,"Get user following list.
This is ""Following"" button in user profile.",https://rapidapi.com/h0p3rwe/api/tiktok-all-in-one/playground/apiendpoint_4f939d0b-519a-41c8-88d0-c6a600742b1a,"{""id"": ""Number - User id of the user you want get following list(required)"", ""min_time"": ""Number - \""min_time\"" field from previous request response, is used to get next list of users(pagination)(optional)""}",,,,,,,"import requests

url = ""https://tiktok-all-in-one.p.rapidapi.com/user/following""

querystring = {""id"":""6774419827379389445"",""min_time"":""1640026682""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tiktok-all-in-one.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TikTok All in One,Users videos,Get all videos that specific user uploaded.,https://rapidapi.com/h0p3rwe/api/tiktok-all-in-one/playground/apiendpoint_ea51e5fd-e5f8-4234-9747-f426e43b397e,"{""id"": ""Number - User id you can find in \\\""uid\\\"" field(required)"", ""max_cursor"": ""Number - Offset to get more results if in a response you get field \\\""has_more\\\"" equal to 1 then you can use \\\""max_cursor\\\"" field for this parameter(optional)""}",,,,,,,"import requests

url = ""https://tiktok-all-in-one.p.rapidapi.com/user/videos""

querystring = {""id"":""6774419827379389445"",""max_cursor"":""1632138733000""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tiktok-all-in-one.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Steam,Search,Search in steam shop,https://rapidapi.com/psimavel/api/steam2/playground/apiendpoint_0e12eaea-d68d-4caf-abd6-45080d186042,"{""term"": ""String - ...(required)"", ""page"": ""Number - Default 1(optional)""}",,,,,,,"import requests

url = ""https://steam2.p.rapidapi.com/search/Counter/page/1""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""steam2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Steam,App Detail,Get detailed info of the app,https://rapidapi.com/psimavel/api/steam2/playground/apiendpoint_e180b9f3-fc07-4ad5-8e4a-d3fd9fa9d54b,"{""appId"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://steam2.p.rapidapi.com/appDetail/730""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""steam2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Steam,App News,Get last n news for App,https://rapidapi.com/psimavel/api/steam2/playground/apiendpoint_0f0b566d-63ee-4d24-ac7e-f95800699157,"{""appId"": ""Number - ...(required)"", ""limit"": ""Number - ...(required)"", ""contentLength"": ""Number - Default 300(optional)""}",,,,,,,"import requests

url = ""https://steam2.p.rapidapi.com/newsForApp/730/limit/10/300""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""steam2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Steam,App Reviews,Get last n reviews of an app,https://rapidapi.com/psimavel/api/steam2/playground/apiendpoint_8cc73710-5913-46c5-a4fa-422115cdfa1c,"{""appId"": ""String - ...(required)"", ""limit"": ""Number - Max limit 200(required)"", ""cursor"": ""String - Reviews are returned in batches max 200 (instead of 20 as in original API), so pass \""\"" for the first set, then the value of \""cursor\"" that was returned in the response for the next set, etc. Note that cursor values may contain characters that need to be URLEncoded for use in the query string. As default is \""\""(optional)""}",,,,,,,"import requests

url = ""https://steam2.p.rapidapi.com/appReviews/730/limit/40/*""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""steam2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Steam,Global Achievement Percentages For App,Get the list of all achievements and their percentages success rate,https://rapidapi.com/psimavel/api/steam2/playground/apiendpoint_ee7d7e92-8606-4509-96b4-e324ad68b7a2,"{""appId"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://steam2.p.rapidapi.com/globalAchievementPercentagesForApp/730""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""steam2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Anime manga and Novels Api,Novels,Get novels information,https://rapidapi.com/hefesto-technologies-hefesto-technologies-default/api/anime-manga-and-novels-api/playground/apiendpoint_d4b66747-7191-4cb9-853f-62e7e0ffe980,"{""pageSize"": ""String - ...(optional)"", ""page"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://anime-manga-and-novels-api.p.rapidapi.com/novels""

querystring = {""pageSize"":""2"",""page"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-manga-and-novels-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Anime manga and Novels Api,Get Novel By Id,Get Novel By Id.,https://rapidapi.com/hefesto-technologies-hefesto-technologies-default/api/anime-manga-and-novels-api/playground/apiendpoint_a872d57b-1e42-44ae-9e8c-c025a29583c3,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://anime-manga-and-novels-api.p.rapidapi.com/novels/3""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-manga-and-novels-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Anime manga and Novels Api,Get Anime By Id,Get Anime By Id,https://rapidapi.com/hefesto-technologies-hefesto-technologies-default/api/anime-manga-and-novels-api/playground/apiendpoint_32761c2a-48c0-45f7-8b14-8a34ce23534a,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://anime-manga-and-novels-api.p.rapidapi.com/anime/19""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-manga-and-novels-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Anime manga and Novels Api,Anime,Get a list of all anime,https://rapidapi.com/hefesto-technologies-hefesto-technologies-default/api/anime-manga-and-novels-api/playground/apiendpoint_ec053374-c36c-44c2-94de-4ea34b9618fd,"{""page"": ""String - ...(optional)"", ""pageSize"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://anime-manga-and-novels-api.p.rapidapi.com/anime""

querystring = {""page"":""1"",""pageSize"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-manga-and-novels-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Anime manga and Novels Api,Get Manga By Id,Get Manga Information by id,https://rapidapi.com/hefesto-technologies-hefesto-technologies-default/api/anime-manga-and-novels-api/playground/apiendpoint_40802214-ebe8-4187-9d65-384154e610e2,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://anime-manga-and-novels-api.p.rapidapi.com/manga/1""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-manga-and-novels-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Anime manga and Novels Api,Manga,Get Manga Information,https://rapidapi.com/hefesto-technologies-hefesto-technologies-default/api/anime-manga-and-novels-api/playground/apiendpoint_8ee60b67-18ac-4e52-bc82-7354ff32eb01,"{""pageSize"": ""Number - ...(optional)"", ""page"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://anime-manga-and-novels-api.p.rapidapi.com/manga""

querystring = {""pageSize"":""2"",""page"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-manga-and-novels-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Anime Quotes,Anime List,Get anime list with characters and quotes count,https://rapidapi.com/wucarderapproved/api/anime-quotes5/playground/apiendpoint_84a3f138-62a7-445d-b22f-2a2d9455197e,"{""anime"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://anime-quotes5.p.rapidapi.com/api.php""

querystring = {""anime"":""list""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-quotes5.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Anime Quotes,Quotes Anime Name,"Retrieve information such as quotes, ratings, biography, and characters for the searched anime.",https://rapidapi.com/wucarderapproved/api/anime-quotes5/playground/apiendpoint_1406c6be-6229-46a1-9222-978899b956b4,"{""anime"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://anime-quotes5.p.rapidapi.com/api.php""

querystring = {""anime"":""naruto""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-quotes5.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Anime Quotes,Anime Character Quotes,"Retrieve information such as quotes, ratings, biography, and anime for the searched characters quotes.",https://rapidapi.com/wucarderapproved/api/anime-quotes5/playground/apiendpoint_dcf7a87a-aa7b-45fd-87b2-f278baaa8c35,"{""character"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://anime-quotes5.p.rapidapi.com/api.php""

querystring = {""character"":""Itachi Uchiha""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-quotes5.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Anime Quotes,Random Anime Quotes,"Unlock the world of anime quotes with our API. Get character quotes, random quotes, and more, accompanied by anime and character thumbnails. Each entry includes a rating and a concise synopsis for a quick dive into the anime universe.",https://rapidapi.com/wucarderapproved/api/anime-quotes5/playground/apiendpoint_134fb1b0-9a14-4b0a-b9e8-7ad1a1c0a7ed,"{""random"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://anime-quotes5.p.rapidapi.com/api.php""

querystring = {""random"":""random""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""anime-quotes5.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Cheap Flights,get-config,Get config.,https://rapidapi.com/datastore/api/skyscanner80/playground/apiendpoint_694e54be-c691-424b-a7ee-bfb930df7619,No additional params,,,,,,,"import requests

url = ""https://skyscanner80.p.rapidapi.com/api/v1/get-config""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""skyscanner80.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Cheap Flights,hotel-auto-complete,This API endpoint is responsible for providing a list of location.,https://rapidapi.com/datastore/api/skyscanner80/playground/apiendpoint_c7f7e885-3c80-4645-bdc2-5b73e11a6f09,"{""query"": ""String - Names of locations, cities, districts, places, countries, counties etc.\nRequired: true\nEx:New York(required)"", ""market"": ""String - marketcan be retrieved fromapi/v1/get-config(data->market)\nDefault value:USEx:US(optional)"", ""locale"": ""String - localecan be retrieved fromv1/get-config(data->locale)\nDefault value:en-USEx:en-US(optional)""}",,,,,,,"import requests

url = ""https://skyscanner80.p.rapidapi.com/api/v1/hotels/auto-complete""

querystring = {""query"":""new"",""market"":""US"",""locale"":""en-US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""skyscanner80.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Cheap Flights,search-location,search-location,https://rapidapi.com/datastore/api/skyscanner80/playground/apiendpoint_386c1349-a769-4c0f-9af7-3f6eb8a877bc,"{""query"": ""String - Names of locations, cities, districts, places, countries, counties etc.(required)"", ""market"": ""String - marketcan be retrieved fromapi/v1/get-config(data->market)\nDefault value:USEx:US(optional)"", ""locale"": ""String - localecan be retrieved fromv1/get-config(data->locale)\nDefault value:en-USEx:en-US(optional)""}",,,,,,,"import requests

url = ""https://skyscanner80.p.rapidapi.com/api/v1/cars/search-location""

querystring = {""query"":""New York"",""market"":""US"",""locale"":""en-US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""skyscanner80.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Cheap Flights,search-cars,search-cars,https://rapidapi.com/datastore/api/skyscanner80/playground/apiendpoint_fce6b80c-8adb-4ab4-a2b0-6e8b6d4ffc54,"{""pickUpEntityId"": ""String - pickUpEntityIdcan be retrieved fromapi/v1/cars/search-locationendpoint(data-> entity_id)(required)"", ""pickUpDate"": ""Date (yyyy-mm-dd) - Pick Up Date\nRequired: true\nFormat:YYYY-MM-DDEx:2024-06-01(required)"", ""pickUpTime"": ""Time (24-Hour Hh:Mm) - Pick Up Time\nRequired: true\nFormat:HH:MMEx:10:00(required)"", ""dropOffEntityId"": ""String - dropOffEntityIdcan be retrieved fromapi/v1/cars/search-locationendpoint(data-> entity_id)(optional)"", ""dropOffDate"": ""Date (yyyy-mm-dd) - Drop Off Date\nRequired: true\nFormat:YYYY-MM-DDEx:2024-06-01(optional)"", ""dropOffTime"": ""Time (24-Hour Hh:Mm) - Drop Off Time\nRequired: true\nFormat:HH:MMEx:20:00(optional)"", ""driverAge"": ""Number - Driver's age (21 years and over)(optional)"", ""currency"": ""String - currencycan be retrieved fromapi/v1/get-config(data->currency)\nDefault value:USDEx:USD(optional)"", ""market"": ""String - marketcan be retrieved fromapi/v1/get-config(data->market)\nDefault value:USEx:US(optional)"", ""locale"": ""String - localecan be retrieved fromv1/get-config(data->locale)\nDefault value:en-USEx:en-US(optional)""}",,,,,,,"import requests

url = ""https://skyscanner80.p.rapidapi.com/api/v1/cars/search-cars""

querystring = {""pickUpEntityId"":""95565058"",""pickUpDate"":""2024-03-12"",""pickUpTime"":""10:00"",""currency"":""USD"",""market"":""US"",""locale"":""en-US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""skyscanner80.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"NicaraguaWallpaper

",/api/getdemorandomphoto,Retrieves a random demo photo from the server.,https://rapidapi.com/chriisduran/api/nicaraguawallpaper/playground/apiendpoint_da1ec365-bf2f-4cb6-9688-9474ad77e911,No additional params,,,,,,,"import requests

url = ""https://nicaraguawallpaper.p.rapidapi.com/api/getdemorandomphoto""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""nicaraguawallpaper.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"NicaraguaWallpaper

",/api/getdemoallphotos,Retrieves all demo photos from the server.,https://rapidapi.com/chriisduran/api/nicaraguawallpaper/playground/apiendpoint_f19a3630-b060-4fdd-803c-040fe384e606,No additional params,,,,,,,"import requests

url = ""https://nicaraguawallpaper.p.rapidapi.com/api/getdemoallphotos""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""nicaraguawallpaper.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Zip Code Distance Radius,Zipcodes within Radius (miles),"Returns a list of zip codes within the radius of another zip code, ordered by distance.",https://rapidapi.com/truvian-softworks-llc-truvian-softworks-llc-default/api/zip-code-distance-radius/playground/apiendpoint_bb623c08-aa10-471c-9796-7cea48d34c00,"{""zipCode"": ""String - ...(required)"", ""radius"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://zip-code-distance-radius.p.rapidapi.com/api/zipCodesWithinRadius""

querystring = {""zipCode"":""48195"",""radius"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""zip-code-distance-radius.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Zip Code Distance Radius,"Distance between two zip codes (in miles, straight line distance)",Gets the straight line distance between two zip codes,https://rapidapi.com/truvian-softworks-llc-truvian-softworks-llc-default/api/zip-code-distance-radius/playground/apiendpoint_de1a7359-14c2-425e-a078-4db17c7644fd,"{""fromZipCode"": ""String - ...(required)"", ""toZipCode"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://zip-code-distance-radius.p.rapidapi.com/api/distanceBetweenZips""

querystring = {""fromZipCode"":""48195"",""toZipCode"":""48209""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""zip-code-distance-radius.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"NAVITIME Geocoding

",address,Return address information such as a postal code or latitude/longitude from free keyword of request parameters.,https://rapidapi.com/navitimejapan-navitimejapan/api/navitime-geocoding/playground/apiendpoint_124aecf5-1c66-4117-89e7-00d150c5d1b6,"{""coord_unit"": ""String - The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds)(optional)"", ""datum"": ""String - Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)(optional)"", ""kana_row"": ""String - Output result filter (consonants).\nOnly addresses in the response that begin with the letter on the specified line will be returned.Available only when 'code' is specified.(optional)"", ""limit"": ""Number - Limits the number of response data. (Minimum value: 1, Maximum value: 100, Default value: 10)(optional)"", ""level_from"": ""Number - Minimum address level.\n(Minimum value: 1, Maximum value: 7)\nNarrow down to only addresses up to a specified address level\n\u30001: Prefecture\n\u30002: City, ward, town or village\n\u30003: Large sections\n\u30004: Small sections\n\u30005: Block\n\u30006: Land number\n\u30007: Branch number(optional)"", ""level_to"": ""Number - Maximum address level.\n(Minimum value: 1, Maximum value: 7)\nNarrow down to only addresses up to a specified address level\n\u30001: Prefecture\n\u30002: City, ward, town or village\n\u30003: Large sections\n\u30004: Small sections\n\u30005: Block\n\u30006: Land number\n\u30007: Branch number(optional)"", ""word"": ""String - Search word.You cannot be used in combination with 'code'.\nPlease be sure to specify either 'word' or 'code'.(optional)"", ""code"": ""String - Address code.You cannot be used in combination with 'word'.\nPlease be sure to specify either 'word' or 'code'.(optional)"", ""sort"": ""String - Sorting order of addresses.\n(lexical: lexical order, level_asc: address level ascending order, code_asc: address code ascending order (default))(optional)"", ""offset"": ""Number - Skips a given number of first data.\n(Minimum value: 0, Maximum value: 2000, Default value: 0)(optional)"", ""address_filter"": ""String - Address filter.You can use this when you want to get a specific address code.\nIf you prefix the address code with a '-', you can exclude the relevant address from the response.Available only when 'word' is specified.(optional)""}",,,,,,,"import requests

url = ""https://navitime-geocoding.p.rapidapi.com/address""

querystring = {""coord_unit"":""degree"",""datum"":""wgs84"",""limit"":""10"",""word"":""代々木"",""sort"":""code_asc"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""navitime-geocoding.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"NAVITIME Geocoding

",address_code,Return address information from address code of request parameters.,https://rapidapi.com/navitimejapan-navitimejapan/api/navitime-geocoding/playground/apiendpoint_1a9473ef-85c5-4df0-a362-3fd0538457b0,"{""coord_unit"": ""String - The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds)(optional)"", ""code"": ""String - Address Code.\nCan be specified multiple times, separated by a period.(required)"", ""datum"": ""String - Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)(optional)""}",,,,,,,"import requests

url = ""https://navitime-geocoding.p.rapidapi.com/address/code""

querystring = {""coord_unit"":""degree"",""code"":""13101001"",""datum"":""wgs84""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""navitime-geocoding.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"NAVITIME Geocoding

",address_postal_code,Return address information from postal code of request parameters.,https://rapidapi.com/navitimejapan-navitimejapan/api/navitime-geocoding/playground/apiendpoint_48fb560c-fdc0-48d8-b077-a818e1310e54,"{""datum"": ""String - Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)(optional)"", ""offset"": ""Number - Skips a given number of first data.\n(Minimum value: 0, Maximum value: 2000, Default value: 0)(optional)"", ""coord_unit"": ""String - The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds)(optional)"", ""limit"": ""Number - Limits the number of response data. (Minimum value: 1, Maximum value: 100, Default value: 10)(optional)"", ""postal_code"": ""String - Postal code string (Minimum: 3 digits, Maximum: 7 digits)(required)""}",,,,,,,"import requests

url = ""https://navitime-geocoding.p.rapidapi.com/address/postal_code""

querystring = {""datum"":""wgs84"",""offset"":""0"",""coord_unit"":""degree"",""limit"":""10"",""postal_code"":""1510053""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""navitime-geocoding.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"NAVITIME Geocoding

",address_autocomplete,Return address predictions from the specified keyword of request parameters.,https://rapidapi.com/navitimejapan-navitimejapan/api/navitime-geocoding/playground/apiendpoint_df27f9c4-92ac-4f42-8aae-ccdf38a36f26,"{""datum"": ""String - Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)(optional)"", ""word"": ""String - Address string (Minimum: 2 characters, Maximum: 50 characters).If a string of 51 or more characters is entered, the 51st and subsequent characters will be deleted and searched.\nArabic and Chinese numerals are searched as they are.(required)"", ""coord_unit"": ""String - The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds)(optional)""}",,,,,,,"import requests

url = ""https://navitime-geocoding.p.rapidapi.com/address/autocomplete""

querystring = {""datum"":""wgs84"",""word"":""とうk"",""coord_unit"":""degree""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""navitime-geocoding.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Country State City Search REST API,All Countries,"This endpoint responds with all the countries in the world. The countries are returned as objects from the server. These objects, in addition to the country names and ISO codes, also contain some other important information.",https://rapidapi.com/rapihub-rapihub-default/api/country-state-city-search-rest-api/playground/apiendpoint_e60caf0f-111f-4d05-a79c-119bf196b174,No additional params,,,,,,,"import requests

url = ""https://country-state-city-search-rest-api.p.rapidapi.com/allcountries""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""country-state-city-search-rest-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Country State City Search REST API,Country Data By Country Code,"This endpoint responds with an object containing the information for the country corresponding to the country code provided in the ""countrycode"" query parameter. This object contains the same information as the object for that country in the ""all countries"" endpoint.",https://rapidapi.com/rapihub-rapihub-default/api/country-state-city-search-rest-api/playground/apiendpoint_73e2a414-a218-4fb4-8d01-b4781265cbb7,"{""countrycode"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://country-state-city-search-rest-api.p.rapidapi.com/country-data-by-countrycode""

querystring = {""countrycode"":""us""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""country-state-city-search-rest-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Country State City Search REST API,States By Country Code,"This endpoint responds with the names and codes of all states or provinces belonging to the country specified by the ""countrycode"" query parameter.",https://rapidapi.com/rapihub-rapihub-default/api/country-state-city-search-rest-api/playground/apiendpoint_48698bf5-f88e-42e3-8895-5a490af05d7e,"{""countrycode"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://country-state-city-search-rest-api.p.rapidapi.com/states-by-countrycode""

querystring = {""countrycode"":""us""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""country-state-city-search-rest-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Country State City Search REST API,Cities By Country Code and State Code,"This endpoint responds with the names and codes of all cities belonging to the state corresponding to the ""statecode"" query parameter. It is important to note that both the ""countrycode"" and ""statecode"" query parameters are required for a successful API request.",https://rapidapi.com/rapihub-rapihub-default/api/country-state-city-search-rest-api/playground/apiendpoint_e62807e3-64b0-446c-84e8-17f37896fde6,"{""countrycode"": ""String - ...(required)"", ""statecode"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://country-state-city-search-rest-api.p.rapidapi.com/cities-by-countrycode-and-statecode""

querystring = {""countrycode"":""us"",""statecode"":""fl""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""country-state-city-search-rest-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Country State City Search REST API,Cities By Country Code,"This endpoint responds with the names and codes of all cities belonging to the country specified by the ""countrycode"" query parameter. We recommend using the ""Cities By Country Code and State Code"" endpoint for listing cities as it is faster and more accurate than this one.",https://rapidapi.com/rapihub-rapihub-default/api/country-state-city-search-rest-api/playground/apiendpoint_302013e2-ed54-4c4e-8841-c72979b9ce79,"{""countrycode"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://country-state-city-search-rest-api.p.rapidapi.com/cities-by-countrycode""

querystring = {""countrycode"":""cr""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""country-state-city-search-rest-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"rwanda

",All locations,"All provinces, districts, sectors,cells and villages from Rwanda",https://rapidapi.com/victorkarangwa4/api/rwanda/playground/apiendpoint_aa80bf62-1ee5-4287-9e2f-9670bfb9faff,No additional params,,,,,,,"import requests

url = ""https://rwanda.p.rapidapi.com/""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rwanda.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"rwanda

",Provinces,This endpoint retrieves all provinces found in Rwanda,https://rapidapi.com/victorkarangwa4/api/rwanda/playground/apiendpoint_cc661b5e-592d-4df6-b8ba-028f71ef59de,No additional params,,,,,,,"import requests

url = ""https://rwanda.p.rapidapi.com/provinces""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rwanda.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"rwanda

",Districts,This endpoint retrieves all districts found in a specific province in Rwanda.  If no province provided it will return all districts in Rwanda.,https://rapidapi.com/victorkarangwa4/api/rwanda/playground/apiendpoint_0671451a-5461-47d7-bb65-f0eaa4f742e6,"{""p"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://rwanda.p.rapidapi.com/districts""

querystring = {""p"":""east""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rwanda.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"rwanda

",Cells,"This endpoint retrieves all cells found in a specific province, district, and sector. If no province, district, and sector provided it will return all cells in Rwanda.",https://rapidapi.com/victorkarangwa4/api/rwanda/playground/apiendpoint_06b10ebc-c363-43c3-8329-5126678bce8e,"{""p"": ""String - ...(optional)"", ""d"": ""String - ...(optional)"", ""s"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://rwanda.p.rapidapi.com/cells""

querystring = {""p"":""east"",""d"":""ngoma"",""s"":""kibungo""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rwanda.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"rwanda

",Sectors,"This endpoint retrieves all sectors found in specific district and province. If no province, and district provided it will return all sectors in Rwanda.",https://rapidapi.com/victorkarangwa4/api/rwanda/playground/apiendpoint_d813d4c1-1240-4c17-add6-6a8cc548dbc1,"{""p"": ""String - ...(optional)"", ""d"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://rwanda.p.rapidapi.com/sectors""

querystring = {""p"":""east"",""d"":""ngoma""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rwanda.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"rwanda

",Villages,"This endpoint retrieves all villages found in a specific province, district, sector, and cells. If no province, district, sector, and cell provided it will return all villages in Rwanda.",https://rapidapi.com/victorkarangwa4/api/rwanda/playground/apiendpoint_4bbc092a-19fb-4b1f-aede-54f23e0924bd,"{""p"": ""String - ...(required)"", ""d"": ""String - ...(required)"", ""s"": ""String - ...(required)"", ""c"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://rwanda.p.rapidapi.com/villages""

querystring = {""p"":""east"",""d"":""ngoma"",""s"":""kibungo"",""c"":""cyasemakamba""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rwanda.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"UK Postcode

",/search,Find an street or post code using one of more key words,https://rapidapi.com/tomwimmenhove/api/uk-postcode/playground/apiendpoint_5b0f3261-1332-4d71-8925-163345480b68,"{""q"": ""String - The query string(required)"", ""limit"": ""Number - The maximum number of results of the query (May be artificially limited)(optional)""}",,,,,,,"import requests

url = ""https://uk-postcode.p.rapidapi.com/search""

querystring = {""q"":""Downing Street London"",""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""uk-postcode.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"UK Postcode

",/getpostcode,Find an exact match for a given post code.,https://rapidapi.com/tomwimmenhove/api/uk-postcode/playground/apiendpoint_de7930e6-39e7-4768-ac25-69072a86f20e,"{""postcode"": ""String - An exact match for the post code to be queried(required)""}",,,,,,,"import requests

url = ""https://uk-postcode.p.rapidapi.com/getpostcode""

querystring = {""postcode"":""SW1A2AA""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""uk-postcode.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
EveryEarthquake,Earthquakes,Get the 100 most recent earthquakes from all over in the world. No parameters required.,https://rapidapi.com/dbarkman/api/everyearthquake/playground/apiendpoint_3daf5e58-fafd-43a8-8474-035f0d791f73,"{""start"": ""String - Use the 'start' parameter to retrieve more than 1000 earthquakes, up to 1000 at a time. 'Start' is the offset to start at within the overall results.\n100 earthquakes are returned by default, up to 1000 earthquakes can be returned using the 'count' parameter.(optional)"", ""count"": ""String - Add to any call to limit the number of earthquakes returned.\n100 earthquakes are returned by default, up to 1000 earthquakes can be returned using the 'count' parameter.(optional)"", ""type"": ""String - Type can be added to limit results to only those types specified, e.g.: earthquakes, quarry blasts, explosions. Use the 'types' endpoints to see all available types.(optional)"", ""latitude"": ""String - The latitude portion of the point at the center of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""longitude"": ""String - The longitude portion of the point at the center of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""radius"": ""String - The length across half a circle of the search area. The latitude and longitude together make up the center of the circle, while the radius is the distance from the center to the outside of the circle. A 10 mile radius will be a circle 20 miles across with its center at the latitude/longitude point.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""units"": ""String - Either miles or kilometers for the radius of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""magnitude"": ""String - Magnitude can be added to limit results to only those earthquakes with at least the specified magnitude or greater.(optional)"", ""intensity"": ""String - Intensity can be added to limit results to only those earthquakes with at least the specified intensity or greater.(optional)""}",,,,,,,"import requests

url = ""https://everyearthquake.p.rapidapi.com/earthquakes""

querystring = {""start"":""1"",""count"":""100"",""type"":""earthquake"",""latitude"":""33.962523"",""longitude"":""-118.3706975"",""radius"":""1000"",""units"":""miles"",""magnitude"":""3"",""intensity"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""everyearthquake.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
EveryEarthquake,Recent Earthquakes,"Get the 100 most recent earthquakes from all over in the world, from now to the date and time determined by the 'interval' property.",https://rapidapi.com/dbarkman/api/everyearthquake/playground/apiendpoint_a597312d-8ef5-4d07-b953-755834c635f5,"{""interval"": ""String - Get recent earthquakes from current time, back to a time based on the interval provided. Interval is an ISO8601 Duration, examples: P5D for the last 5 days, PT12H for the last 12 hours.https://en.wikipedia.org/wiki/ISO_8601#Durations(required)"", ""start"": ""String - Use the 'start' parameter to retrieve more than 1000 earthquakes, up to 1000 at a time. 'Start' is the offset to start at within the overall results.\n100 earthquakes are returned by default, up to 1000 earthquakes can be returned using the 'count' parameter.(optional)"", ""count"": ""String - Add to any call to limit the number of earthquakes returned.\n100 earthquakes are returned by default, up to 1000 earthquakes can be returned using the 'count' parameter.(optional)"", ""type"": ""String - Type can be added to limit results to only those types specified, e.g.: earthquakes, quarry blasts, explosions. Use the 'types' endpoints to see all available types.(optional)"", ""latitude"": ""String - The latitude portion of the point at the center of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""longitude"": ""String - The longitude portion of the point at the center of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""radius"": ""String - The length across half a circle of the search area. The latitude and longitude together make up the center of the circle, while the radius is the distance from the center to the outside of the circle. A 10 mile radius will be a circle 20 miles across with its center at the latitude/longitude point.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""units"": ""String - Either miles or kilometers for the radius of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""magnitude"": ""String - Magnitude can be added to limit results to only those earthquakes with at least the specified magnitude or greater.(optional)"", ""intensity"": ""String - Intensity can be added to limit results to only those earthquakes with at least the specified intensity or greater.(optional)""}",,,,,,,"import requests

url = ""https://everyearthquake.p.rapidapi.com/recentEarthquakes""

querystring = {""interval"":""P1Y2M3W4DT1H2M3S"",""start"":""1"",""count"":""100"",""type"":""earthquake"",""latitude"":""33.962523"",""longitude"":""-118.3706975"",""radius"":""1000"",""units"":""miles"",""magnitude"":""3"",""intensity"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""everyearthquake.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
EveryEarthquake,Earthquakes By Date,"Get the 100 most recent earthquakes from all over in the world, within a specified date range.",https://rapidapi.com/dbarkman/api/everyearthquake/playground/apiendpoint_75556960-2203-40e4-8b18-f8414bf1cbd4,"{""startDate"": ""String - The start date for the search period in YYYY-MM-DD format. All dates start and end at midnight UTC.(required)"", ""endDate"": ""String - The end date for the search period in YYYY-MM-DD format. All dates start and end at midnight UTC.(required)"", ""start"": ""String - Use the 'start' parameter to retrieve more than 1000 earthquakes, up to 1000 at a time. 'Start' is the offset to start at within the overall results.\n100 earthquakes are returned by default, up to 1000 earthquakes can be returned using the 'count' parameter.(optional)"", ""count"": ""String - Add to any call to limit the number of earthquakes returned.\n100 earthquakes are returned by default, up to 1000 earthquakes can be returned using the 'count' parameter.(optional)"", ""type"": ""String - Type can be added to limit results to only those types specified, e.g.: earthquakes, quarry blasts, explosions. Use the 'types' endpoints to see all available types.(optional)"", ""latitude"": ""String - The latitude portion of the point at the center of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""longitude"": ""String - The longitude portion of the point at the center of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""radius"": ""String - The length across half a circle of the search area. The latitude and longitude together make up the center of the circle, while the radius is the distance from the center to the outside of the circle. A 10 mile radius will be a circle 20 miles across with its center at the latitude/longitude point.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""units"": ""String - Either miles or kilometers for the radius of the search circle.\nSearch for earthquakes near a certain location using latitude, longitude, radius and units. All four properties must be included when retrieving earthquakes near a certain location.(optional)"", ""magnitude"": ""String - Magnitude can be added to limit results to only those earthquakes with at least the specified magnitude or greater.(optional)"", ""intensity"": ""String - Intensity can be added to limit results to only those earthquakes with at least the specified intensity or greater.(optional)""}",,,,,,,"import requests

url = ""https://everyearthquake.p.rapidapi.com/earthquakesByDate""

querystring = {""startDate"":""2021-01-27"",""endDate"":""2022-01-27"",""start"":""1"",""count"":""100"",""type"":""earthquake"",""latitude"":""33.962523"",""longitude"":""-118.3706975"",""radius"":""1000"",""units"":""miles"",""magnitude"":""3"",""intensity"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""everyearthquake.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Al Quran

",Get range of verses,"Responds with a collection of *Ayahs/Verses* in a specific *Chapter/Surah* along with original Arabic text, translation, transliteration and verse ID in JSON",https://rapidapi.com/raz0229/api/al-quran1/playground/apiendpoint_e3c7d819-d7da-47f1-a31f-9738eebae020,"{""chapterId"": ""Number - ...(required)"", ""range"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://al-quran1.p.rapidapi.com/63/1-4""

headers = {""x-rapidapi-host"": ""al-quran1.p.rapidapi.com""}

response = requests.get(url, headers=headers)

print(response.json())"
"Al Quran

",Get base information,,https://rapidapi.com/raz0229/api/al-quran1/playground/endpoint_bb2980cb-4c76-4a91-b0ae-b5ddba49276d,No additional params,,,,,,,"import requests

url = ""https://al-quran1.p.rapidapi.com/""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""al-quran1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Al Quran

",Get entire Surah/Chapter,,https://rapidapi.com/raz0229/api/al-quran1/playground/endpoint_bcf2b405-0c86-48c5-a5dc-4b7fc4126a15,"{""chapterId"": ""Number - Represents a unique Surah/Chapter in the Koran.Min Value:1Max Value:114(required)""}",,,,,,,"import requests

url = ""https://al-quran1.p.rapidapi.com/114""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""al-quran1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Al Quran

",Get specific Ayah/Verse,,https://rapidapi.com/raz0229/api/al-quran1/playground/endpoint_10fb927b-dda7-4abb-a76a-27b414b409bb,"{""chapterId"": ""Number - Refers to aSurah/Chapterin the KoranMin Value:1Max Value:114(required)"", ""verseId"": ""Number - A validAyah/versenumber from a specific chapter from the Quran(required)""}",,,,,,,"import requests

url = ""https://al-quran1.p.rapidapi.com/38/29""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""al-quran1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Al Quran

",Search for a word in Quran,,https://rapidapi.com/raz0229/api/al-quran1/playground/endpoint_33a3af71-c973-4104-84c1-6f2ea07e2e32,"{""searchTerm"": ""String - Any given keyword or phrase you like to search for in the Koran(required)""}",,,,,,,"import requests

url = ""https://al-quran1.p.rapidapi.com/corpus/muhammad""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""al-quran1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Planets Info by NewbAPI,All planet,Get list Planet,https://rapidapi.com/newbAPIOfficial/api/planets-info-by-newbapi/playground/apiendpoint_e87dd707-47a8-489a-a247-c68099e2f64e,No additional params,,,,,,,"import requests

url = ""https://planets-info-by-newbapi.p.rapidapi.com/api/v1/planets/""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""planets-info-by-newbapi.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Planets Info by NewbAPI,Single Planet,"Get single planet.
**Example**
id: `1` Mercury
id: `2` Venus",https://rapidapi.com/newbAPIOfficial/api/planets-info-by-newbapi/playground/apiendpoint_56c7cefe-ee73-43a9-91b6-877e52247d53,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://planets-info-by-newbapi.p.rapidapi.com/api/v1/planets/1""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""planets-info-by-newbapi.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Knowledge,/chemical-elements-en.json,Periodic table of elements.,https://rapidapi.com/a0m0rajab/api/daily-knowledge/playground/apiendpoint_b4e1cf44-c91b-42cf-bf43-f575e3cc93dc,No additional params,,,,,,,"import requests

url = ""https://daily-knowledge.p.rapidapi.com/chemical-elements-en.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-knowledge.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Knowledge,/countries-en.json,"Capitals, currencies, flags and more.",https://rapidapi.com/a0m0rajab/api/daily-knowledge/playground/apiendpoint_f61cfb35-493c-42be-af6d-30bbb0fda9a9,No additional params,,,,,,,"import requests

url = ""https://daily-knowledge.p.rapidapi.com/countries-en.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-knowledge.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Knowledge,/untools-en.json,"Thinking tools to help you solve problems, make decisions and understand systems.",https://rapidapi.com/a0m0rajab/api/daily-knowledge/playground/apiendpoint_3dcdcb50-6c99-4576-a66c-76e6e47fd44a,No additional params,,,,,,,"import requests

url = ""https://daily-knowledge.p.rapidapi.com/untools-en.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-knowledge.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Knowledge,/wcag-en.json,Success criteria to fulfill WCAG.,https://rapidapi.com/a0m0rajab/api/daily-knowledge/playground/apiendpoint_6f6dc9e7-95c8-41c7-9e5a-151beb35575f,No additional params,,,,,,,"import requests

url = ""https://daily-knowledge.p.rapidapi.com/wcag-en.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-knowledge.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Knowledge,/sustainable-development-goals-en.json,The UN global goals for sustainable development.,https://rapidapi.com/a0m0rajab/api/daily-knowledge/playground/apiendpoint_3174fb38-8f3a-4d81-ab5f-013dcf2b6926,No additional params,,,,,,,"import requests

url = ""https://daily-knowledge.p.rapidapi.com/sustainable-development-goals-en.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-knowledge.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Knowledge,/plants-de.json,Häufige Pflanzenarten in Europa.,https://rapidapi.com/a0m0rajab/api/daily-knowledge/playground/apiendpoint_815b67e4-ca72-46ad-b184-540118a03e36,No additional params,,,,,,,"import requests

url = ""https://daily-knowledge.p.rapidapi.com/plants-de.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-knowledge.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Knowledge,/logical-fallacies-en.json,Learn to identify flaws in reasoning.,https://rapidapi.com/a0m0rajab/api/daily-knowledge/playground/apiendpoint_0f3dba3e-2442-4376-ae55-6ee4e3572e2c,No additional params,,,,,,,"import requests

url = ""https://daily-knowledge.p.rapidapi.com/logical-fallacies-en.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-knowledge.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Convert single phase power to current,Convert single phase power (watts) to current (ampheres),"This endpoint takes an input of the following:

- Power in watts - float - required
- Power factor - float - defaults to 0.95
- Voltage in volts - float - defaults to 230

The output is in ampheres.

For example an input of the following:
`?power=3000&voltage=240 `

Would result in:
`{""current"":13.16}`",https://rapidapi.com/loriq-loriq-default/api/electrical-units/playground/apiendpoint_c5dacc7c-491d-4022-b5ca-7df507ec6ee9,"{""power"": ""Number - ...(required)"", ""voltage"": ""Number - ...(optional)"", ""powerfactor"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://electrical-units.p.rapidapi.com/power_to_current/single_phase""

querystring = {""power"":""3000"",""voltage"":""230"",""powerfactor"":""0.95""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""electrical-units.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Convert single phase power to current,Convert three phase power (watts) to current (ampheres),"This endpoint takes an input of the following:

- Power in watts - float - required
- Power factor - float - defaults to 0.95
- Voltage in volts - float - defaults to 400

The output is in ampheres.",https://rapidapi.com/loriq-loriq-default/api/electrical-units/playground/apiendpoint_45f74e2b-9e55-4776-8cb3-dd8714d25581,"{""power"": ""Number - ...(required)"", ""voltage"": ""Number - ...(optional)"", ""powerfactor"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://electrical-units.p.rapidapi.com/power_to_current/three_phase""

querystring = {""power"":""8000"",""voltage"":""400"",""powerfactor"":""0.95""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""electrical-units.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Convert single phase power to current,Convert single phase current (ampheres) to power (watts),"This endpoint takes an input of the following:

- Current in ampheres - float - required
- Power factor - float - defaults to 0.95
- Voltage in volts - float - defaults to 230

The output is in watts.",https://rapidapi.com/loriq-loriq-default/api/electrical-units/playground/apiendpoint_adab6701-c610-43fb-81cc-5b1b574ce3ed,"{""current"": ""Number - ...(required)"", ""voltage"": ""Number - ...(optional)"", ""powerfactor"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://electrical-units.p.rapidapi.com/current_to_power/single_phase""

querystring = {""current"":""13"",""voltage"":""230"",""powerfactor"":""0.95""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""electrical-units.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Convert single phase power to current,Convert three phase current (ampheres) to power (watts),"This endpoint takes an input of the following:

- Current in ampheres - float - required
- Power factor - float - defaults to 0.95
- Voltage in volts - float - defaults to 230

The output is in watts.",https://rapidapi.com/loriq-loriq-default/api/electrical-units/playground/apiendpoint_cc422cd0-80e8-4991-a2d2-6e4146a812ad,"{""current"": ""Number - ...(required)"", ""voltage"": ""Number - ...(optional)"", ""powerfactor"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://electrical-units.p.rapidapi.com/current_to_power/three_phase""

querystring = {""current"":""13"",""voltage"":""400"",""powerfactor"":""0.95""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""electrical-units.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"manatee jokes

",random,retrieves a random manatee joke,https://rapidapi.com/Rufasa85/api/manatee-jokes/playground/apiendpoint_c4b20cb7-4e31-41a3-8eb4-9ac4522484cc,No additional params,,,,,,,"import requests

url = ""https://manatee-jokes.p.rapidapi.com/manatees/random""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""manatee-jokes.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"manatee jokes

",get by id,gets a specific joke by id,https://rapidapi.com/Rufasa85/api/manatee-jokes/playground/apiendpoint_815839ef-e79d-4cef-95b6-d6b14b1e4e46,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://manatee-jokes.p.rapidapi.com/manatees/%7Bid%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""manatee-jokes.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"manatee jokes

",find all,retrieves all available jokes,https://rapidapi.com/Rufasa85/api/manatee-jokes/playground/apiendpoint_c8b67ce6-844e-4dc8-9b69-960b47ccd5f8,No additional params,,,,,,,"import requests

url = ""https://manatee-jokes.p.rapidapi.com/manatees""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""manatee-jokes.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
crossref,Search,Let’s look at some of the results,https://rapidapi.com/apidevsci/api/crossref/playground/apiendpoint_707a9159-3b79-4ade-b020-d579d09961c0,"{""query"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://crossref.p.rapidapi.com/""

querystring = {""query"":""blood""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""crossref.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
crossref,RecordCount,How many records do we have?,https://rapidapi.com/apidevsci/api/crossref/playground/apiendpoint_986bb977-23fc-4c16-af98-a0d6941b9c0a,"{""rows"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://crossref.p.rapidapi.com/""

querystring = {""rows"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""crossref.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Halal Food Checker,Check Halal Animal,Endpoint to check if an animal is halal using a string.,https://rapidapi.com/nvoltron/api/halal-food-checker/playground/apiendpoint_4b670fcc-ab2d-42cd-a894-cf81f2aaf136,"{""animal"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://halal-food-checker.p.rapidapi.com/check-halal-animal/Dog""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""halal-food-checker.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Halal Food Checker,Check Halal E Number,Endpoint to check if an E number is halal using a number.,https://rapidapi.com/nvoltron/api/halal-food-checker/playground/apiendpoint_8d143668-b100-4fa3-a07a-b5ec2e847718,"{""number"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://halal-food-checker.p.rapidapi.com/check-halal-number/E101""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""halal-food-checker.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Car API

",VIN Decoder,"Decodes Vehicle Identification Numbers. The result will include a list of specifications in the specs property and a list of all possible trims matching the VIN in the trims property.

For non-paying users, all VINs for 2015-2020 models (e.g. 1GTG6CEN0L1139305) will be returned, otherwise data is hidden. Paying users have full data access.",https://rapidapi.com/carapi/api/car-api2/playground/apiendpoint_6d9f0c8b-19af-4abe-bf27-412a6bbf4e87,"{""vin"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://car-api2.p.rapidapi.com/api/vin/1GTG6CEN0L1139305""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""car-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Car API

",Years,"For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:

`[{""field"": ""make"", ""op"": ""in"", ""val"": [""Scion"", ""Tesla""]}]`

Allowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.

Allowed search fields are: `year`, `make`, `model`, `trim`, `make_id`, and `make_model_id`.",https://rapidapi.com/carapi/api/car-api2/playground/apiendpoint_2a66b1d2-aef6-4e14-9edd-8b381b6f219c,"{""model"": ""String - ...(optional)"", ""make_id"": ""String - ...(optional)"", ""trim"": ""String - ...(optional)"", ""year"": ""String - ...(optional)"", ""make"": ""String - ...(optional)"", ""make_model_id"": ""String - ...(optional)"", ""json"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://car-api2.p.rapidapi.com/api/years""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""car-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Car API

",Makes,Search makes by name and year.,https://rapidapi.com/carapi/api/car-api2/playground/apiendpoint_ace0f73e-bf49-4138-893a-15a71a7f67eb,"{""limit"": ""Number - ...(optional)"", ""page"": ""Number - ...(optional)"", ""direction"": ""String - ...(optional)"", ""sort"": ""String - ...(optional)"", ""make"": ""String - ...(optional)"", ""year"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://car-api2.p.rapidapi.com/api/makes""

querystring = {""direction"":""asc"",""sort"":""id""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""car-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Car API

",Models,"Search models by year, make, model, trim or make_id.

To include the models make in the description request with the query parameter as `verbose=yes`.

For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:

`[{""field"": ""make"", ""op"": ""in"", ""val"": [""Ford"", ""Acura""]}, {""field"": ""year"", ""op"": "">="", ""val"": 2010}]

Allowed json operators are: =, !=, >, <, >=, <=, in, not in, like, not like, not null, and is null.

Allowed json search fields are: year, make, model, make_id, created, and modified.",https://rapidapi.com/carapi/api/car-api2/playground/apiendpoint_bea6826f-bae0-43d7-a42c-abda11aa0b2e,"{""make"": ""String - ...(optional)"", ""limit"": ""Number - ...(optional)"", ""model"": ""String - ...(optional)"", ""sort"": ""String - ...(optional)"", ""page"": ""Number - ...(optional)"", ""direction"": ""String - ...(optional)"", ""year"": ""String - ...(optional)"", ""verbose"": ""String - Includes make, model and trim(optional)"", ""make_id"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://car-api2.p.rapidapi.com/api/models""

querystring = {""sort"":""id"",""direction"":""asc"",""year"":""2020"",""verbose"":""yes""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""car-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Car API

",Trims,"To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.

For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:

`[{""field"": ""year"", ""op"": "">="", ""val"": 2010}, {""field"": ""year"", ""op"": ""<="", ""val"": 2020}]`

Allowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.

Allowed json search fields are: year, make, model, trim, bodies.type, engines.cam_type, engines.cylinders, engines.drive_type, engines.engine_type, engines.fuel_type, engines.transmission, engines.valve_timing, engines.valves, make_id, make_model_id, make_model_trim_id, created, and modified.",https://rapidapi.com/carapi/api/car-api2/playground/apiendpoint_c6e8efc8-9fdf-4c2b-9708-3e1396e045ba,"{""limit"": ""Number - ...(optional)"", ""direction"": ""String - ...(optional)"", ""sort"": ""String - ...(optional)"", ""year"": ""String - ...(optional)"", ""model"": ""String - ...(optional)"", ""page"": ""Number - ...(optional)"", ""trim"": ""String - ...(optional)"", ""make_model_id"": ""String - ...(optional)"", ""verbose"": ""String - Includes make, model and trim(optional)"", ""make_id"": ""String - ...(optional)"", ""make"": ""String - ...(optional)"", ""json"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://car-api2.p.rapidapi.com/api/trims""

querystring = {""direction"":""asc"",""sort"":""id"",""year"":""2020"",""verbose"":""yes""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""car-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Car API

",Trim View,Returns all data associated with the vehicle trim.,https://rapidapi.com/carapi/api/car-api2/playground/apiendpoint_09ff6146-9d48-4de1-aded-002a57f5a8a0,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://car-api2.p.rapidapi.com/api/trims/%7Bid%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""car-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
"Car API

",Bodies,"To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.

For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:

`[{""field"": ""doors"", ""op"": "">="", ""val"": 4}, {""field"": ""type"", ""op"": ""in"", ""val"": [""SUV"",""Van""]}]`

See /api/vehicle-attributes for a complete list of vehicle attributes.

Allowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.

Allowed json search fields are: year, make, model, trim, type, doors, make_id, make_model_id, and make_model_trim_id.",https://rapidapi.com/carapi/api/car-api2/playground/apiendpoint_411cbed9-f7ad-4e49-9104-7aa5c93e054e,"{""make_id"": ""String - ...(optional)"", ""trim"": ""String - ...(optional)"", ""json"": ""String - ...(optional)"", ""sort"": ""String - ...(optional)"", ""make_model_trim_id"": ""String - ...(optional)"", ""make_model_id"": ""String - ...(optional)"", ""model"": ""String - ...(optional)"", ""verbose"": ""String - Includes make, model and trim(optional)"", ""direction"": ""String - ...(optional)"", ""make"": ""String - ...(optional)"", ""year"": ""String - ...(optional)"", ""type"": ""String - ...(optional)"", ""limit"": ""Number - ...(optional)"", ""page"": ""Number - ...(optional)"", ""doors"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://car-api2.p.rapidapi.com/api/bodies""

querystring = {""sort"":""id"",""verbose"":""yes"",""direction"":""asc""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""car-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Car API

",Engines,"To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.

For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:

`[{""field"": ""horsepower_hp"", ""op"": "">="", ""val"": 100}, {""field"": ""horsepower_hp"", ""op"": ""<="", ""val"": 300}]`

See /api/vehicle-attributes for a complete list of vehicle attributes.

Allowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.

Allowed json search fields are: year, make, model, trim, fuel_type, engine_type, transmission, drive_type, cam_type, valve_timing, valves, horsepower_hp, size, cylinders, make_id, make_model_id, and make_model_trim_id.",https://rapidapi.com/carapi/api/car-api2/playground/apiendpoint_adca4095-aff3-4010-9641-62205fc11e71,"{""make"": ""String - ...(optional)"", ""make_model_id"": ""String - ...(optional)"", ""trim"": ""String - ...(optional)"", ""cam_type"": ""String - ...(optional)"", ""engine_type"": ""String - ...(optional)"", ""make_model_trim_id"": ""String - ...(optional)"", ""model"": ""String - ...(optional)"", ""json"": ""String - ...(optional)"", ""fuel_type"": ""String - ...(optional)"", ""limit"": ""Number - ...(optional)"", ""drive_type"": ""String - ...(optional)"", ""verbose"": ""String - Includes make, model and trim(optional)"", ""make_id"": ""String - ...(optional)"", ""year"": ""String - ...(optional)"", ""cylinders"": ""String - ...(optional)"", ""page"": ""Number - ...(optional)"", ""direction"": ""String - ...(optional)"", ""sort"": ""String - ...(optional)"", ""valve_timing"": ""String - ...(optional)"", ""valves"": ""String - ...(optional)"", ""size"": ""String - ...(optional)"", ""horsepower_hp"": ""String - ...(optional)"", ""transmission"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://car-api2.p.rapidapi.com/api/engines""

querystring = {""verbose"":""yes"",""direction"":""asc"",""sort"":""id""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""car-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Flight Radar,airports/list,List all airports around the world,https://rapidapi.com/apidojo/api/flight-radar1/playground/apiendpoint_951a6157-92d1-4106-99ee-dc90806140f7,No additional params,,,,,,,"import requests

url = ""https://flight-radar1.p.rapidapi.com/airports/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flight-radar1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Flight Radar,airlines/list,List all airlines around the world,https://rapidapi.com/apidojo/api/flight-radar1/playground/apiendpoint_ca5bf393-4953-450b-9c8e-9eccf5705eca,No additional params,,,,,,,"import requests

url = ""https://flight-radar1.p.rapidapi.com/airlines/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flight-radar1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Flight Radar,airlines/get-logos,Get logos of airlines,https://rapidapi.com/apidojo/api/flight-radar1/playground/apiendpoint_307f4d82-2a7f-456c-99ae-6ccdd167e287,No additional params,,,,,,,"import requests

url = ""https://flight-radar1.p.rapidapi.com/airlines/get-logos""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flight-radar1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Flight Radar,aircrafts/list,List available aircrafts,https://rapidapi.com/apidojo/api/flight-radar1/playground/apiendpoint_1d7a2a71-8f0e-4e7e-8317-6bd532268490,No additional params,,,,,,,"import requests

url = ""https://flight-radar1.p.rapidapi.com/aircrafts/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flight-radar1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Flightradar24 com,v2/airports/list,v2/airports/list,https://rapidapi.com/ntd119/api/flightradar24-com/playground/apiendpoint_6241cd8a-2c35-4680-85e2-446904086c61,No additional params,,,,,,,"import requests

url = ""https://flightradar24-com.p.rapidapi.com/v2/airports/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flightradar24-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Flightradar24 com,v2/airlines/list (include gogo),v2/airlines/list,https://rapidapi.com/ntd119/api/flightradar24-com/playground/apiendpoint_1b001f30-69c0-4543-8fa8-249c59a99834,No additional params,,,,,,,"import requests

url = ""https://flightradar24-com.p.rapidapi.com/v2/airlines/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flightradar24-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Flightradar24 com,v2/aircrafts/list,v2/aircrafts/list,https://rapidapi.com/ntd119/api/flightradar24-com/playground/apiendpoint_dab78338-abd9-4df9-9589-cdd87d9119c8,No additional params,,,,,,,"import requests

url = ""https://flightradar24-com.p.rapidapi.com/v2/aircrafts/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flightradar24-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Flightradar24 com,v2/flights/search,v2/flights/search,https://rapidapi.com/ntd119/api/flightradar24-com/playground/apiendpoint_e6ada662-9be3-4f58-960d-af47aad10ef3,"{""query"": ""String - Required: trueAircraft number, flight code, airline code, etc...Ex:FD3210(required)"", ""limit"": ""Number - The number of items per response (max 25)Default:25Ex:20(optional)""}",,,,,,,"import requests

url = ""https://flightradar24-com.p.rapidapi.com/v2/flights/search""

querystring = {""query"":""FD3210""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flightradar24-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Flightradar24 com,v2/flights/list-most-tracked,v2/flights/list-most-tracked,https://rapidapi.com/ntd119/api/flightradar24-com/playground/apiendpoint_d415f301-5176-4147-be5f-736ada9d341c,No additional params,,,,,,,"import requests

url = ""https://flightradar24-com.p.rapidapi.com/v2/flights/list-most-tracked""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flightradar24-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Flightradar24 com,v2/flights/detail,v2/flights/detail,https://rapidapi.com/ntd119/api/flightradar24-com/playground/apiendpoint_8b72cc3c-597c-4262-90e7-e6e4799428df,"{""flight"": ""String - Required: trueflightcan be retrieved from/v2/flights/list-most-tracked endpoint (data->flight_id)Ex:35cc7a02(required)""}",,,,,,,"import requests

url = ""https://flightradar24-com.p.rapidapi.com/v2/flights/detail""

querystring = {""flight"":""35cc7a02""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flightradar24-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Flightradar24 com,v2/flights/get-more-info,v2/flights/get-more-info,https://rapidapi.com/ntd119/api/flightradar24-com/playground/apiendpoint_012b32d2-e734-442a-ac9e-394bc1c7f4d1,"{""query"": ""String - Required: trueThe value of registration (if fetchBy is 'reg') or default (if fetchBy is 'flight') field returned\nin /v2/flights/detailEx:FD3210(required)"", ""fetchBy"": ""String - One of the following : reg|flightreg is used to get specific aircraft info, flight is used to get specific flight or airline infoDefault:flight(optional)"", ""page"": ""Number - PageThe page index, for paging purposeDefault:1(optional)"", ""limit"": ""Number - The number of items per response (max 100)Default:100(optional)""}",,,,,,,"import requests

url = ""https://flightradar24-com.p.rapidapi.com/v2/flights/get-more-info""

querystring = {""query"":""FD3210""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flightradar24-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Flightradar24 com,v2/flights/get-playback,v2/flights/get-playback,https://rapidapi.com/ntd119/api/flightradar24-com/playground/apiendpoint_23b1c024-a3cc-42b5-aed2-299fd463abbe,"{""flightId"": ""String - Required: trueflightIdcan be retrieved from/v2/flights/detail endpoint (..->identification->id)/v2/flights/get-more-info endpoint (..->identification->id)Ex:35cc7a02(required)"", ""timestamp"": ""String - TimestampRequired: truetimestampcan be retrieved from/v2/flights/detail endpoint (..->departure)/v2/flights/get-more-info endpoint (..->departure)Ex:1719059208(required)""}",,,,,,,"import requests

url = ""https://flightradar24-com.p.rapidapi.com/v2/flights/get-playback""

querystring = {""flightId"":""35cc7a02"",""timestamp"":""1719059208""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""flightradar24-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Shazam,shazam-events/list,List future events,https://rapidapi.com/apidojo/api/shazam/playground/apiendpoint_b352afa9-8150-4b05-9d27-adbdc78ed275,"{""artistId"": ""String - The value of 'artist->adamid' field returned in \u2026/search OR \u2026/songs/v2/detect OR \u2026/songs/get-details endpoint\nThe value of 'artists->id' field returned in \u2026/shazam-songs/get-details OR \u2026/albums/get-details OR \u2026/albums/get-related-artist(required)"", ""l"": ""String - The language code(optional)"", ""from"": ""String - The date to list events from(optional)"", ""to"": ""String - The date to list events to. Ex : 2023-01-15(optional)"", ""limit"": ""Number - The number of items per page, for paging purpose(optional)"", ""offset"": ""Number - The page index, for paging purpose(optional)""}",,,,,,,"import requests

url = ""https://shazam.p.rapidapi.com/shazam-events/list""

querystring = {""artistId"":""73406786"",""l"":""en-US"",""from"":""2022-12-31"",""limit"":""50"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Shazam,search,"Search for songs, artists that match input term",https://rapidapi.com/apidojo/api/shazam/playground/apiendpoint_e5620280-234d-409b-a0cf-eb618f1f687d,"{""term"": ""String - Full name of songs or artists(required)"", ""locale"": ""String - The language code(optional)"", ""offset"": ""Number - For paging purpose(optional)"", ""limit"": ""Number - For paging purpose, maximum is fixed at 5 items per response(optional)""}",,,,,,,"import requests

url = ""https://shazam.p.rapidapi.com/search""

querystring = {""term"":""kiss the rain"",""locale"":""en-US"",""offset"":""0"",""limit"":""5""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Shazam,auto-complete,Get suggestions by word or phrase,https://rapidapi.com/apidojo/api/shazam/playground/apiendpoint_c450641d-e7e9-43c0-aa74-8a9eefb7532c,"{""term"": ""String - Any word or phrase of song, artist, etc... that you are familiar with(required)"", ""locale"": ""String - The language code(optional)""}",,,,,,,"import requests

url = ""https://shazam.p.rapidapi.com/auto-complete""

querystring = {""term"":""kiss the"",""locale"":""en-US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Spotify,Search,Search,https://rapidapi.com/Glavier/api/spotify23/playground/apiendpoint_1dc51f1b-a2c6-4f9a-9c6c-32019c7301b2,"{""q"": ""String - Search query(required)"", ""type"": ""String - multior one of these:albumsartistsepisodesgenresplaylistspodcaststracksusers(required)"", ""offset"": ""Number - ...(optional)"", ""limit"": ""Number - ...(optional)"", ""numberOfTopResults"": ""Number - ...(optional)"", ""gl"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://spotify23.p.rapidapi.com/search/""

querystring = {""type"":""multi"",""offset"":""0"",""limit"":""10"",""numberOfTopResults"":""5""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""spotify23.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Spotify,Explore,Explore (Browse All),https://rapidapi.com/Glavier/api/spotify23/playground/apiendpoint_908750ee-2b16-424c-b7c0-7d26919fe067,No additional params,,,,,,,"import requests

url = ""https://spotify23.p.rapidapi.com/browse_all/""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""spotify23.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Spotify,Get albums,Get one or more albums,https://rapidapi.com/Glavier/api/spotify23/playground/apiendpoint_6b8e28c7-80b1-46dd-9481-d0c5935a8440,"{""ids"": ""String - Album IDs (you can use commas)(required)""}",,,,,,,"import requests

url = ""https://spotify23.p.rapidapi.com/albums/""

querystring = {""ids"":""3IBcauSj5M2A6lTeffJzdv""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""spotify23.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Spotify,Album tracks,Get album tracks,https://rapidapi.com/Glavier/api/spotify23/playground/apiendpoint_ebc30b7b-9ba2-473f-b0f1-251097efbc91,"{""id"": ""String - Album ID(required)"", ""offset"": ""Number - ...(optional)"", ""limit"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://spotify23.p.rapidapi.com/album_tracks/""

querystring = {""id"":""3IBcauSj5M2A6lTeffJzdv"",""offset"":""0"",""limit"":""300""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""spotify23.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Spotify,Album metadata,Get album metadata,https://rapidapi.com/Glavier/api/spotify23/playground/apiendpoint_924e05c4-f260-465b-b38e-35a0d416461f,"{""id"": ""String - Album ID(required)""}",,,,,,,"import requests

url = ""https://spotify23.p.rapidapi.com/album_metadata/""

querystring = {""id"":""3IBcauSj5M2A6lTeffJzdv""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""spotify23.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Spotify,Get playlist,Get playlist,https://rapidapi.com/Glavier/api/spotify23/playground/apiendpoint_4bcd631b-4d0b-45b0-9e09-22304dce2fa8,"{""id"": ""String - Playlist ID(required)""}",,,,,,,"import requests

url = ""https://spotify23.p.rapidapi.com/playlist/""

querystring = {""id"":""37i9dQZF1DX4Wsb4d7NKfP""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""spotify23.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Shazam API

",/search,"Search for songs, artists that match input term",https://rapidapi.com/yourdevmail/api/shazam-api7/playground/apiendpoint_9d70384b-9ef6-4e30-8435-a8d3cb1d00e4,"{""term"": ""String - Full name of songs or artists(required)"", ""limit"": ""Number - number of result you want to get(optional)""}",,,,,,,"import requests

url = ""https://shazam-api7.p.rapidapi.com/search""

querystring = {""term"":""calm down"",""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam-api7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Shazam API

",songs/list-recommendations,Similar songs based on song id,https://rapidapi.com/yourdevmail/api/shazam-api7/playground/apiendpoint_8b8ae30c-b24b-4a6a-aa39-0680766d064a,"{""id"": ""String - The value of 'key' field returned in \u2026/search endpoint(required)"", ""limit"": ""Number - number of result you want to get(optional)""}",,,,,,,"import requests

url = ""https://shazam-api7.p.rapidapi.com/songs/list-recommendations""

querystring = {""id"":""628712770"",""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam-api7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Shazam API

",songs/get-track-listening-count,Returns the number of times a particular song has been played,https://rapidapi.com/yourdevmail/api/shazam-api7/playground/apiendpoint_de2d6b57-4252-4860-a3b5-5b34e812edca,"{""id"": ""String - The value of 'key' field returned in \u2026/search endpoint(required)""}",,,,,,,"import requests

url = ""https://shazam-api7.p.rapidapi.com/songs/get-track-listening-count""

querystring = {""id"":""628712770""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam-api7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Shazam API

",songs/get_details,get details about song,https://rapidapi.com/yourdevmail/api/shazam-api7/playground/apiendpoint_03d1e759-0b5e-4577-9064-9dc48f40779f,"{""id"": ""String - The value of 'key' field returned in \u2026/search endpoint(required)""}",,,,,,,"import requests

url = ""https://shazam-api7.p.rapidapi.com/songs/get_details""

querystring = {""id"":""628712770""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam-api7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Shazam API

",artist/get-top-songs,Get the top songs by artist according to Shazam,https://rapidapi.com/yourdevmail/api/shazam-api7/playground/apiendpoint_7103bac3-a433-4933-88e9-85ed92fe04fd,"{""id"": ""String - The value of 'artist -> adam_id' field returned in \u2026/search endpoint(required)"", ""offset"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://shazam-api7.p.rapidapi.com/artist/get-top-songs""

querystring = {""id"":""1304716885"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam-api7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Shazam API

",artist/get-details,Retrieving information from an artist profile,https://rapidapi.com/yourdevmail/api/shazam-api7/playground/apiendpoint_55c63d85-9ae8-4d7a-854b-d6ae948103eb,"{""id"": ""String - The value of 'artist -> adam_id' field returned in \u2026/search endpoint(required)""}",,,,,,,"import requests

url = ""https://shazam-api7.p.rapidapi.com/artist/get-details""

querystring = {""id"":""1304716885""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""shazam-api7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Piano Chords,All chords (v2),"The response is an object with a 'result' property, holding an array of all available chord objects.",https://rapidapi.com/jsdisco/api/piano-chords/playground/apiendpoint_98c893b9-3b78-4454-b399-030c7b87e9c8,No additional params,,,,,,,"import requests

url = ""https://piano-chords.p.rapidapi.com/v2/chords""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""piano-chords.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Piano Chords,All chords for a certain root (v2),"The response is an object, with a 'result' property, holding an array of all chord objects for the specified root note.",https://rapidapi.com/jsdisco/api/piano-chords/playground/apiendpoint_1bc90910-dabf-4a09-b784-c4de3063ba85,"{""root"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://piano-chords.p.rapidapi.com/v2/chords/%7Broot%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""piano-chords.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Piano Chords,All chords for a certain name (v2),"The response is an object with a 'result' property, holding an array of all chords with the specified name.",https://rapidapi.com/jsdisco/api/piano-chords/playground/apiendpoint_ea35e923-cea2-41da-83c1-2c2250c97a83,"{""name"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://piano-chords.p.rapidapi.com/v2/chords/%7Bname%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""piano-chords.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Piano Chords,Chord defined by root and name (v2),"The response is an object with a 'result' property, holding an array with one chord object.",https://rapidapi.com/jsdisco/api/piano-chords/playground/apiendpoint_f73f0748-f7dc-458e-bba7-b53d284d45db,"{""root"": ""String - ...(required)"", ""name"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://piano-chords.p.rapidapi.com/v2/chords/%7Broot%7D/%7Bname%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""piano-chords.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Piano Chords,Search for a chord by entering notes or midi keys (v2),"The response is an object with a 'result' property, holding an array of chord object(s), or an empty array when no match was found. Only exact matches are returned.",https://rapidapi.com/jsdisco/api/piano-chords/playground/apiendpoint_d4d783d7-0f0f-4c82-94f6-f3cd3a9c3c1c,"{""n1"": ""String - ...(required)"", ""n2"": ""String - ...(required)"", ""n3"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://piano-chords.p.rapidapi.com/v2/chords/""

querystring = {""n1"":""60"",""n2"":""64"",""n3"":""68""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""piano-chords.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
geniURL,Search only for the top match,"This endpoint searches only for the top match.

It can be provided with either of these:
- a `?q` parameter, which contains a query to search for
- the parameters `?artist` and `&song` to get better results",https://rapidapi.com/Sv443/api/geniurl/playground/apiendpoint_25d1f2cd-92d1-4d0a-b7ef-a792e3fe02aa,"{""q"": ""String - ...(optional)"", ""artist"": ""String - ...(optional)"", ""song"": ""String - ...(optional)"", ""format"": ""Enum - ...(optional)""}",,,,,,,"import requests

url = ""https://geniurl.p.rapidapi.com/search/top""

querystring = {""q"":""Lady Gaga - Born This Way"",""artist"":""Lady Gaga"",""song"":""Born This Way"",""format"":""json""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""geniurl.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
geniURL,Search for best matches,"This endpoint searches for the 10 best matches.

It can be provided with either of these:
- a `?q` parameter, which contains a query to search for
- the parameters `?artist` and `&song` to get better results",https://rapidapi.com/Sv443/api/geniurl/playground/apiendpoint_c27644f4-e8c3-4695-b785-6c99162f9375,"{""q"": ""String - ...(optional)"", ""artist"": ""String - ...(optional)"", ""song"": ""String - ...(optional)"", ""format"": ""Enum - ...(optional)""}",,,,,,,"import requests

url = ""https://geniurl.p.rapidapi.com/search""

querystring = {""q"":""Lady Gaga - Bad Romance"",""artist"":""Lady Gaga"",""song"":""Bad Romance"",""format"":""json""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""geniurl.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Bayut,auto-complete,Get suggestions of locations by term or phrase,https://rapidapi.com/apidojo/api/bayut/playground/apiendpoint_876d2979-ec41-499c-bb55-a412a2b71ac9,"{""query"": ""String - Any term or phrase that you are familiar with(required)"", ""hitsPerPage"": ""Number - For paging purpose(optional)"", ""page"": ""Number - For paging purpose(optional)"", ""lang"": ""String - One of the following : en|ar(optional)""}",,,,,,,"import requests

url = ""https://bayut.p.rapidapi.com/auto-complete""

querystring = {""query"":""abu dhabi"",""hitsPerPage"":""25"",""page"":""0"",""lang"":""en""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bayut.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Bayut,properties/list,List properties with options and filters,https://rapidapi.com/apidojo/api/bayut/playground/apiendpoint_fcd6b13f-69a3-4bd2-a65c-45f232e47efe,"{""locationExternalIDs"": ""String - The location/externalID fields returned in .../auto-complete endpoint. Separated by comma for multiple locations. Ex : 5002,6020(required)"", ""purpose"": ""String - One of the following : for-rent|for-sale(optional)"", ""hitsPerPage"": ""Number - For paging purpose(optional)"", ""page"": ""Number - For paging purpose(optional)"", ""lang"": ""String - One of the following : en|ar(optional)"", ""sort"": ""String - One of the following : price-desc|price-asc|city-level-score|date-desc|verified-score(optional)"", ""rentFrequency"": ""String - One of the following : monthly|yearly|weekly|daily(optional)"", ""categoryExternalID"": ""Number - Apartment -> 4|Townhouses -> 16|Villas -> 3|Penthouses -> 18|Hotel Apartments -> 21|Villa Compound -> 19|Residential Plot -> 14|Residential Floor -> 12|Residential Building -> 17|Office -> 5|Shop -> 6|Warehouse -> 7|Labour camp -> 9|Commercial Villa -> 25|Bulk Units -> 20|Commercial Plot -> 15|Commercial Floor -> 13|Commercial Building -> 10|Factory -> 8|Industrial Land -> 22|Mixed Use Land -> 23|Showroom -> 24|Other Commercial -> 11(optional)"", ""agencyExternalIDs"": ""String - The externalID fields returned in .../agencies/list endpoint. Separated by comma for multiple agencies. Ex : 7737,5002(optional)"", ""priceMin"": ""Number - ...(optional)"", ""priceMax"": ""Number - ...(optional)"", ""areaMin"": ""Number - ...(optional)"", ""areaMax"": ""Number - ...(optional)"", ""roomsMin"": ""Number - ...(optional)"", ""roomsMax"": ""Number - ...(optional)"", ""bathsMin"": ""Number - ...(optional)"", ""bathsMax"": ""Number - ...(optional)"", ""furnishingStatus"": ""String - One of the following : unfurnished|furnished(optional)"", ""hasVideo"": ""Boolean - ...(optional)"", ""hasFloorPlan"": ""Boolean - ...(optional)"", ""hasPanorama"": ""Boolean - ...(optional)""}",,,,,,,"import requests

url = ""https://bayut.p.rapidapi.com/properties/list""

querystring = {""locationExternalIDs"":""5002,6020"",""purpose"":""for-rent"",""hitsPerPage"":""25"",""page"":""0"",""lang"":""en"",""sort"":""city-level-score"",""rentFrequency"":""monthly"",""categoryExternalID"":""4""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bayut.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Bayut,properties/detail,Get detail information of a property,https://rapidapi.com/apidojo/api/bayut/playground/apiendpoint_70bbc8e9-918c-430e-ad12-0c71d815b3d3,"{""externalID"": ""String - The value of externalID returned in ..../properties/list endpoint(required)""}",,,,,,,"import requests

url = ""https://bayut.p.rapidapi.com/properties/detail""

querystring = {""externalID"":""4937770""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bayut.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Bayut,agencies/list,List agencies or search for agencies by name,https://rapidapi.com/apidojo/api/bayut/playground/apiendpoint_f5bfd315-abb0-4add-a2cc-b3578b01f29d,"{""query"": ""String - Any term or phrase that you are familiar with(optional)"", ""hitsPerPage"": ""Number - For paging purpose(optional)"", ""page"": ""Number - For paging purpose(optional)"", ""lang"": ""String - One of the following : en|ar(optional)""}",,,,,,,"import requests

url = ""https://bayut.p.rapidapi.com/agencies/list""

querystring = {""query"":""patriot"",""hitsPerPage"":""25"",""page"":""0"",""lang"":""en""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bayut.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Bayut,agencies/get-listings,Get listing belonging to an agency,https://rapidapi.com/apidojo/api/bayut/playground/apiendpoint_38878002-64dd-4bdc-916c-5f6138ed59ee,"{""hitsPerPage"": ""Number - For paging purpose(optional)"", ""page"": ""Number - For paging purpose(optional)"", ""purpose"": ""String - One of the following : for-rent|for-sale(optional)"", ""lang"": ""String - One of the following : en|ar(optional)"", ""rentFrequency"": ""String - One of the following : monthly|yearly|weekly|daily\nThe parameter only takes effect if purpose is for-rent(optional)"", ""agencySlug"": ""String - The value of hits -> slug field returned in .../agencies/list endpoint(required)"", ""completionStatus"": ""String - One of the following : completed|under-construction\nThis parameter only takes effect if purpose is for-sale(optional)"", ""sort"": ""String - One of the following : price-desc|price-asc|city-level-score|date-desc|date-asc|verified-score(optional)"", ""categorySlug"": ""String - One of the following : commerical-properties|mixed-use-land|factories|commercial-floors|bulk-units|labour-camps|shops|showrooms|industrial-land|commercial-buildings|commercial-plots|commercial-villas|warehouses|offices|residential-floors|hotel-apartments|penthouse|villas|residential-building|residential-plots|villa-compound|townhouses|apartments(optional)""}",,,,,,,"import requests

url = ""https://bayut.p.rapidapi.com/agencies/get-listings""

querystring = {""hitsPerPage"":""25"",""page"":""0"",""lang"":""en"",""agencySlug"":""patriot-real-estate-7737"",""sort"":""price-asc"",""categorySlug"":""commerical-properties""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bayut.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",Get Suggestions,Get location suggestions (autocomplete),https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_1c6db49a-0793-4aa7-840b-6b8fc8868c3a,"{""prefix"": ""String - ...(required)"", ""location"": ""Enum - One of the following values: es|pt|it(required)"", ""propertyType"": ""String - ...(required)"", ""operation"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/getsuggestions""

querystring = {""prefix"":""madrid"",""location"":""es"",""propertyType"":""homes"",""operation"":""sale""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",Get Locations,Get sublocations inside another location.,https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_2794082c-5f3f-4e9d-b87c-d84600767d53,"{""locationId"": ""String - ...(required)"", ""location"": ""Enum - One of the following values: es|pt|it(required)"", ""propertyType"": ""String - ...(required)"", ""operation"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/getlocations""

querystring = {""locationId"":""0-EU-ES-28"",""location"":""es"",""propertyType"":""homes"",""operation"":""sale""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",Get Microsite Locations,Get the locations where the microsite/profile has properties.,https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_9a930d09-f42e-4528-8dc3-f80930e5d916,"{""micrositeShortName"": ""String - ...(required)"", ""location"": ""Enum - One of the following values: es|pt|it(required)"", ""locale"": ""String - Language: es|it|pt|en|ca|de|fr|nl|nb(required)"", ""operation"": ""String - ...(required)"", ""locationId"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/getmicrositelocations""

querystring = {""micrositeShortName"":""sumainmobiliaria"",""location"":""es"",""locale"":""es"",""operation"":""sale"",""locationId"":""0-EU-ES-28""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",Property Details,Get more details about a property.,https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_d31c1c8a-9646-4a6f-b922-631aa19f6512,"{""propertyId"": ""String - Property Id.(required)"", ""location"": ""String - One of the following values: es|pt|it(required)"", ""language"": ""String - The language of the ad. Pick between: es|it|pt|en|ca|de|fr|nl|nb(required)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/propertydetails""

querystring = {""propertyId"":""101535118"",""location"":""es"",""language"":""en""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",List New Homes,"List new home properties with the requested parameters. Buy/Rent > New home. Filters are optional parameters, please make sure the request follows the rules in each parameter.",https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_c89cce94-3d2b-4929-9847-25177bff6c6e,"{""order"": ""String - Order by one of the followings: relevance|lowestprice|highestprice|mostrecent|leastrecent|highestpricereduction|lowestpricem2|highestpricem2|biggest|smallest|highestfloors|lowestfloorsDefault is relevance.(required)"", ""operation"": ""String - Search sales or rentals. Pick between: sale|rent(required)"", ""locationId"": ""String - ...(required)"", ""maxItems"": ""String - ...(required)"", ""locationName"": ""String - ...(required)"", ""numPage"": ""String - ...(required)"", ""location"": ""String - ...(required)"", ""locale"": ""String - ...(required)"", ""minPrice"": ""String - ...(optional)"", ""maxPrice"": ""String - ...(optional)"", ""housesOrChalets"": ""Boolean - ...(optional)"", ""flats"": ""Boolean - ...(optional)"", ""bedrooms0"": ""Boolean - ...(optional)"", ""bedrooms1"": ""Boolean - ...(optional)"", ""bedrooms2"": ""Boolean - ...(optional)"", ""bedrooms3"": ""Boolean - ...(optional)"", ""bedrooms4"": ""Boolean - Set true if you want to filter by 4 or more bedrooms.(optional)"", ""rentToOwn"": ""Boolean - Set true if you want to filter by: For rent with buying option(optional)"", ""finished"": ""Boolean - Set true if you want to filter by: Finished new home(optional)"", ""stateSubsidized"": ""Boolean - Set true if you want to filter by: Subsidized housing(optional)"", ""bankOffer"": ""Boolean - ...(optional)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/listnewhomes""

querystring = {""order"":""relevance"",""operation"":""sale"",""locationId"":""0-EU-ES-28-07-001-079"",""maxItems"":""40"",""locationName"":""Madrid"",""numPage"":""1"",""location"":""es"",""locale"":""en""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",List Home Properties,"List home properties with the requested parameters. Buy/Rent > Homes. Filters are optional parameters, please make sure the request follows the rules in each parameter.

Boolean parameters should be true always if you want to use them. To make them false, don't include them in the requests (leave blank).",https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_049292dd-e4d3-4873-97f6-87c73d4edd2f,"{""order"": ""Enum - Order by one of the followings: relevance|lowestprice|highestprice|mostrecent|leastrecent|highestpricereduction|lowestpricem2|highestpricem2|biggest|smallest|highestfloors|lowestfloorsDefault is relevance.(required)"", ""operation"": ""Enum - Search sales or rentals. Pick between: sale|rent(required)"", ""locationId"": ""String - ...(required)"", ""locationName"": ""String - ...(required)"", ""numPage"": ""Number - ...(required)"", ""maxItems"": ""Number - Number of items to return. Set 0 to return the item's count, fast response. Max Value is 40, anything above will be ignored.(required)"", ""location"": ""String - One of the following values: es|pt|it(required)"", ""locale"": ""Enum - The language of the ads. Pick between: es|it|pt|en|ca|de|fr|nl|nb(required)"", ""micrositeShortName"": ""String - Get ads from a specific real estate. For example if the URL from the real estate is:https://www.idealista.com/pro/cajal-gestion-inmobiliaria/The parameter micrositeShortName should be cajal-gestion-inmobiliaria(optional)"", ""minPrice"": ""Number - Minimum price to search.(optional)"", ""maxPrice"": ""Number - Maximum price to search.(optional)"", ""minSize"": ""Number - Minimum size to search in m2.(optional)"", ""maxSize"": ""Number - Maximum size to search in m2.(optional)"", ""flat"": ""Boolean - Set true if you want to get flats, penthouses and duplex. (All of them)(optional)"", ""onlyFlats"": ""Boolean - Set true if you want to find flats.(optional)"", ""penthouse"": ""Boolean - ...(optional)"", ""duplex"": ""Boolean - Set true if you want to find duplex.(optional)"", ""chalet"": ""Boolean - Set true if you want to get independantHouses, semidetachedHouses, terracedHouses and countryHouse (all of them).(optional)"", ""independantHouse"": ""Boolean - ...(optional)"", ""semidetachedHouse"": ""Boolean - ...(optional)"", ""terracedHouse"": ""Boolean - ...(optional)"", ""countryHouse"": ""Boolean - ...(optional)"", ""apartamentoType"": ""Boolean - ...(optional)"", ""villaType"": ""Boolean - ...(optional)"", ""loftType"": ""Boolean - ...(optional)"", ""cortijoType"": ""Boolean - ...(optional)"", ""atticStudioType"": ""Boolean - ...(optional)"", ""casaBajaType"": ""Boolean - ...(optional)"", ""bedrooms0"": ""Boolean - ...(optional)"", ""bedrooms1"": ""Boolean - ...(optional)"", ""bedrooms2"": ""Boolean - ...(optional)"", ""bedrooms3"": ""Boolean - ...(optional)"", ""bedrooms4"": ""Boolean - ...(optional)"", ""bathrooms1"": ""Boolean - ...(optional)"", ""bathrooms2"": ""Boolean - ...(optional)"", ""bathroom3"": ""Boolean - ...(optional)"", ""newDevelopment"": ""Boolean - ...(optional)"", ""good"": ""Boolean - ...(optional)"", ""renew"": ""Boolean - ...(optional)"", ""furnished"": ""String - Furnishings parameter. ONLY valid when operation=rent. Pick between:Indifferent: leave blank (default)\nFurnished: furnished\nOnly furnished kitchens: furnishedKitchen(optional)"", ""petsAllowed"": ""Boolean - ONLY works with operation=rent.(optional)"", ""airConditioning"": ""Boolean - ...(optional)"", ""builtinWardrobes"": ""Boolean - ...(optional)"", ""elevator"": ""Boolean - ...(optional)"", ""exterior"": ""Boolean - ...(optional)"", ""garage"": ""Boolean - ...(optional)"", ""garden"": ""Boolean - ...(optional)"", ""swimmingPool"": ""Boolean - ...(optional)"", ""terrance"": ""Boolean - ...(optional)"", ""storeRoom"": ""Boolean - ...(optional)"", ""accessible"": ""Boolean - ...(optional)"", ""luxury"": ""Boolean - ...(optional)"", ""hasPlan"": ""Boolean - ...(optional)"", ""virtualTour"": ""Boolean - ...(optional)"", ""bankOffer"": ""Boolean - ...(optional)"", ""topFloor"": ""Boolean - ...(optional)"", ""intermediateFloor"": ""Boolean - ...(optional)"", ""sinceDate"": ""String - Publication Date Parameter. One of the following values:Indifferent: leave blank (by default)\nLast 48h: Y\nLast week: W\nLast month: M(optional)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/listhomes""

querystring = {""order"":""relevance"",""operation"":""sale"",""locationId"":""0-EU-ES-28-07-001-079"",""locationName"":""Madrid"",""numPage"":""1"",""maxItems"":""40"",""location"":""es"",""locale"":""es""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",List Rooms,"List renting rooms with the requested parameters. Buy, Rent > Rooms or Share > Homes.",https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_0470d448-281c-472a-be89-60d830596b01,"{""order"": ""String - Order by one of the followings: relevance|lowestprice|highestprice|mostrecent|leastrecent|highestpricereduction|lowestpricem2|highestpricem2|biggest|smallest|highestfloors|lowestfloorsDefault is relevance.(required)"", ""locationId"": ""String - ...(required)"", ""locationName"": ""String - ...(required)"", ""numPage"": ""Number - ...(required)"", ""maxItems"": ""Number - ...(required)"", ""location"": ""String - ...(required)"", ""locale"": ""String - ...(required)"", ""minPrice"": ""Number - ...(optional)"", ""maxPrice"": ""Number - ...(optional)"", ""newGender"": ""String - 'You are' parameter (your gender). Pick between: male|female(optional)"", ""smokingPolicy"": ""String - Smokers. Pick between:Indiferent: leave blank (default)\nSmoking allowed: allowed\nSmoking is not allowed: disallowed(optional)"", ""petsPolicy"": ""String - Pets. Pick between:Indifferent: leave blank (default)\nPets allowed: allowed\nPets not allowed: disallowed(optional)"", ""availableFrom"": ""String - Date the room is available. Pick between:Any date: leave blank (default)\nAvailable now: now\n+1 month since now: 1m\n+2 months since now: 2m\n+3 months since now: 3m\n+4 months since now: 4m\n+5 months since now: 5m(optional)"", ""housemates1"": ""Boolean - Flat share with 1 person.(optional)"", ""housemates2"": ""Boolean - Flat share with 2 people.(optional)"", ""housemates3"": ""Boolean - Flat share with 3 or more people.(optional)"", ""couplesAllowed"": ""Boolean - ...(optional)"", ""childrenAllowed"": ""Boolean - ...(optional)"", ""streetViewWindow"": ""Boolean - Street facing window.(optional)"", ""privateToilet"": ""Boolean - ...(optional)"", ""airConditioning"": ""Boolean - ...(optional)"", ""elevator"": ""Boolean - Lift parameter.(optional)"", ""terrace"": ""Boolean - ...(optional)"", ""exterior"": ""Boolean - ...(optional)"", ""accessible"": ""Boolean - Accessible property.(optional)"", ""hasHouseKeeper"": ""Boolean - Cleaning services included.(optional)"", ""garden"": ""Boolean - ...(optional)"", ""swimmingPool"": ""Boolean - ...(optional)"", ""topFloor"": ""Boolean - ...(optional)"", ""intermediateFloor"": ""Boolean - ...(optional)"", ""groundFloor"": ""Boolean - ...(optional)"", ""occupation"": ""String - Flat sharing with... Pick one of these:Indifferent: leave blank (default)\nWith workers: workers\nWith students: students(optional)"", ""gayPartners"": ""Boolean - LGTB Friendly(optional)"", ""ownerNotLiving"": ""Boolean - Owner doesn't live in the property.(optional)"", ""privateOwner"": ""Boolean - Search ads from private owners (set to true) or professional profiles (set to false).(optional)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/listrooms""

querystring = {""order"":""relevance"",""locationId"":""0-EU-ES-28-07-001-079"",""locationName"":""Madrid"",""numPage"":""1"",""maxItems"":""40"",""location"":""es"",""locale"":""en""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",List Offices,"List office properties with the requested parameters. Buy/Rent > Offices. Filters are optional parameters, please make sure the request follows the rules in each parameter.",https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_037e8fd9-a392-4667-b1e5-39c09c379f0d,"{""order"": ""String - ...(required)"", ""operation"": ""String - Search sales or rentals. Pick between: sale|rent(required)"", ""locationId"": ""String - ...(required)"", ""maxItems"": ""String - ...(required)"", ""locationName"": ""String - ...(required)"", ""numPage"": ""String - ...(required)"", ""location"": ""String - ...(required)"", ""locale"": ""String - ...(required)"", ""minPrice"": ""String - ...(optional)"", ""maxPrice"": ""String - ...(optional)"", ""minSize"": ""String - ...(optional)"", ""maxSize"": ""String - ...(optional)"", ""layout"": ""String - Distribution parameter. Pick between:Indifferent: leave blank (default)\nOpen plan: openPlan\nDivided by walls: withWalls(optional)"", ""buildingType"": ""String - Type of building parameter. Pick between:Indifferent: leave blank (default)\nExclusively for offices: exclusive\nMixted use: mixed(optional)"", ""hotWater"": ""Boolean - ...(optional)"", ""airConditioning"": ""Boolean - ...(optional)"", ""elevator"": ""Boolean - Lift parameter.(optional)"", ""heating"": ""Boolean - ...(optional)"", ""accessible"": ""Boolean - Accessible building(optional)"", ""exterior"": ""Boolean - ...(optional)"", ""garage"": ""Boolean - ...(optional)"", ""security"": ""Boolean - Surveillance and security.(optional)"", ""hasPlan"": ""Boolean - With floor plan(optional)"", ""bankOffer"": ""String - Bank-owned(optional)"", ""sinceDate"": ""String - Publication Date Parameter. One of the following values:Indifferent: leave blank (by default)\nLast 48h: Y\nLast week: W\nLast month: M(optional)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/listoffices""

querystring = {""order"":""relevance"",""operation"":""sale"",""locationId"":""0-EU-ES-28-07-001-079"",""maxItems"":""40"",""locationName"":""Madrid"",""numPage"":""1"",""location"":""es"",""locale"":""en""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
"Idealista

",List Commercial Properties,List Commercial Properties.,https://rapidapi.com/scraperium/api/idealista7/playground/apiendpoint_7c3d6142-ba47-48ac-9125-98cd92414804,"{""order"": ""String - ...(required)"", ""operation"": ""String - ...(required)"", ""locationId"": ""String - ...(required)"", ""maxItems"": ""String - ...(required)"", ""locationName"": ""String - ...(required)"", ""numPage"": ""String - ...(required)"", ""location"": ""String - ...(required)"", ""locale"": ""String - ...(required)"", ""minPrice"": ""String - ...(optional)"", ""maxPrice"": ""String - ...(optional)"", ""minSize"": ""String - ...(optional)"", ""maxSize"": ""String - ...(optional)"", ""buildingTypes"": ""String - Pick between: premises|industrialBuilding. To use both, join with comma (String should be premises,industrialBuilding).(optional)""}",,,,,,,"import requests

url = ""https://idealista7.p.rapidapi.com/listcommercialproperties""

querystring = {""order"":""relevance"",""operation"":""sale"",""locationId"":""0-EU-ES-28-07-001-079"",""maxItems"":""40"",""locationName"":""Madrid"",""numPage"":""1"",""location"":""es"",""locale"":""en""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""idealista7.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Zoopla,v2/auto-complete,Get auto complete suggestion by term or phrase,https://rapidapi.com/apidojo/api/zoopla/playground/apiendpoint_647947a9-1b44-4452-9314-6b23198a460b,"{""locationPrefix"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://zoopla.p.rapidapi.com/v2/auto-complete""

querystring = {""locationPrefix"":""greenwich""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""zoopla.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Zoopla,properties/v2/list,List properties for sale or rent with options and filters,https://rapidapi.com/apidojo/api/zoopla/playground/apiendpoint_cab27d0c-9adc-434f-9b67-64835dbd3728,"{""locationValue"": ""String - The value of geoLabel field returned in .../v2/auto-complete endpoint with listings as search_type. Or the value of name field returned in .../house-prices/v2/get-area (If you are searching by postal code). You must use EXACTLY the value  returned by the endpoint.\n*'listing_id'  OR 'area' parameter must be provided to get this endpoint working.(required)"", ""locationIdentifier"": ""String - The value of geoIdentifier field returned in .../v2/auto-complete endpoint with listings as search_type. Or the value of id field returned in ..../house-prices/v2/get-area endpoint (If you are searching by postal code). You must use EXACTLY the value returned by the endpoint.(required)"", ""furnishedState"": ""String - One of the following : Any|furnished|part_furnished|unfurnished(optional)"", ""includeRented"": ""Boolean - Ignore OR true(optional)"", ""includeRetirementHomes"": ""Boolean - Ignore OR true(optional)"", ""includeSharedAccommodation"": ""Boolean - Ignore OR true(optional)"", ""includeSharedOwnership"": ""Boolean - Ignore OR true(optional)"", ""includeSold"": ""Boolean - Ignore OR true(optional)"", ""isAuction"": ""Boolean - Ignore OR true(optional)"", ""petsAllowed"": ""Boolean - Ignore OR true(optional)"", ""billsIncluded"": ""Boolean - Ignore OR true(optional)"", ""keywords"": ""String - Any word or term, ex : garden,wooden floors(optional)"", ""section"": ""String - One of the following : for-sale|to-rent(optional)"", ""bedsMax"": ""Number - Max number of bed rooms (1 - 10)(optional)"", ""bedsMin"": ""Number - Min number of bed rooms (1 - 10)(optional)"", ""priceMax"": ""Number - Maximum sale or rent price(optional)"", ""priceMin"": ""Number - Minimum sale or rent price(optional)"", ""sortOrder"": ""String - One of the following : newest_listings|highest_price|lowest_price|most_reduced(optional)"", ""page"": ""Number - The page index for paging purpose(optional)"", ""radius"": ""Number - The radius (miles) to look for properties (0.25 - 40)(optional)"", ""priceFrequency"": ""String - One of the following per_month|per_year(optional)"", ""newHomes"": ""String - One of the following : only|exclude(optional)"", ""added"": ""String - Recently added. One of the following : 24_hours|3_days|7_days|14_days|30_days(optional)"", ""propertySubType"": ""String - Filter properties by category. Ignore OR one of the followings (Separated by comma for multiple options) : park_home,bungalow,farms_land,terraced,flats,semi_detached,detached(optional)""}",,,,,,,"import requests

url = ""https://zoopla.p.rapidapi.com/properties/v2/list""

querystring = {""locationValue"":""Oxford, Oxfordshire"",""locationIdentifier"":""oxford"",""furnishedState"":""Any"",""sortOrder"":""newest_listings"",""page"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""zoopla.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Zoopla,properties/v2/detail,Get property detail,https://rapidapi.com/apidojo/api/zoopla/playground/apiendpoint_de92684d-f561-423a-a2a4-2a039ce6a60a,"{""listingId"": ""Number - The value of listingId field returned in .../properties/v2/list endpoint(required)""}",,,,,,,"import requests

url = ""https://zoopla.p.rapidapi.com/properties/v2/detail""

querystring = {""listingId"":""64576476""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""zoopla.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Zoopla,agents/list,List agents with filters and options,https://rapidapi.com/apidojo/api/zoopla/playground/apiendpoint_5f7be322-46dd-4564-834a-dc66b113f80d,"{""location"": ""String - The value of geoIdentifier field returned in .../v2/auto-complete endpoint with listings as search_type. Or the value of id field returned in ..../house-prices/v2/get-area endpoint (If you are searching by postal code). You must use EXACTLY the value returned by the endpoint.(required)"", ""search_type"": ""String - One of the followings : estate-agents|letting-agents|commercial-agents(optional)"", ""company_name"": ""String - Search by agent name. Either 'location' or 'company_name' is required. You can ignore 'location' parameter when passing value into 'company_name' parameter.(optional)"", ""agents_sort"": ""String - One of the following : a_z|lowest_avg_price|highest_avg_price|shortest_avg_age|longest_avg_age(optional)"", ""pn"": ""Number - The page index for paging purpose(optional)"", ""radius"": ""Number - The radius (miles) to look for agents (0.25 - 40)(optional)""}",,,,,,,"import requests

url = ""https://zoopla.p.rapidapi.com/agents/list""

querystring = {""location"":""oxford"",""search_type"":""estate-agents"",""agents_sort"":""a_z"",""pn"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""zoopla.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Zoopla,agents/detail,Get detailed information of an agent by id,https://rapidapi.com/apidojo/api/zoopla/playground/apiendpoint_27fe207a-152d-4a66-b788-fdd54928974e,"{""id"": ""Number - The value of id field returned in .../agents/list endpoint(required)""}",,,,,,,"import requests

url = ""https://zoopla.p.rapidapi.com/agents/detail""

querystring = {""id"":""55447""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""zoopla.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Realty in AU,auto-complete,Get suggestions by term or phrase. The returned data will be used with .../properties/list endpoint,https://rapidapi.com/apidojo/api/realty-in-au/playground/apiendpoint_4eff226c-6c4a-4a0d-8769-aaeb16d5ea39,"{""query"": ""String - Any term or phrase you are familiar with. It can be an address to get the property id directly to use with .../properties/detail endpoint.(required)""}",,,,,,,"import requests

url = ""https://realty-in-au.p.rapidapi.com/auto-complete""

querystring = {""query"":""sydney""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""realty-in-au.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Realty in AU,properties/list,List properties with options and filters,https://rapidapi.com/apidojo/api/realty-in-au/playground/apiendpoint_8624508b-72fa-4eed-a937-731644cc2abd,"{""page"": ""Number - For paging purpose(optional)"", ""pageSize"": ""Number - The number of items returned per response. For paging purpose (max is 30)(optional)"", ""sortType"": ""String - One of the following relevance|new-asc|new-desc|price-asc|price-desc|sold-relevance|sold-date-desc|sold-price-desc|sold-price-asc(optional)"", ""channel"": ""String - One of the following : buy|rent|sold(required)"", ""propertyTypes"": ""String - Ignore or one of the following : townhouse|unit apartment|retire|acreage|land|unitblock|house|villa|rural. Separated by comma for multiple options. Ex : townhouse,house,villa(optional)"", ""surroundingSuburbs"": ""Boolean - ...(optional)"", ""searchLocation"": ""String - The value of text field returned in .../auto-complete endpoint(required)"", ""searchLocationSubtext"": ""String - The value of subtext field returned in .../auto-complete endpoint(required)"", ""type"": ""String - The value of region field returned in .../auto-complete endpoint(required)"", ""minimumBedrooms"": ""Number - ...(optional)"", ""maximumBedrooms"": ""Number - ...(optional)"", ""minimumLandSize"": ""Number - In m2(optional)"", ""minimumBathroom"": ""Number - ...(optional)"", ""minimumCars"": ""Number - ...(optional)"", ""minimumPrice"": ""Number - ...(optional)"", ""maximumPrice"": ""Number - ...(optional)"", ""ex-under-contract"": ""Boolean - ...(optional)"", ""constructionStatus"": ""String - Ignore or one of the following : established|new(optional)"", ""keywords"": ""String - Facilities you are looking for. Separated by comma for multiple options. Ex : pool,garage,etc...(optional)"", ""maxSoldAge"": ""Number - Houses sold in the last x months(optional)""}",,,,,,,"import requests

url = ""https://realty-in-au.p.rapidapi.com/properties/list""

querystring = {""page"":""1"",""pageSize"":""30"",""sortType"":""relevance"",""channel"":""buy"",""surroundingSuburbs"":""true"",""searchLocation"":""Melbourne City - Greater Region, VIC"",""searchLocationSubtext"":""Region"",""type"":""region"",""ex-under-contract"":""false""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""realty-in-au.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Realty in AU,properties/detail,Get detailed information of a property,https://rapidapi.com/apidojo/api/realty-in-au/playground/apiendpoint_bfdfbdd4-1754-4d32-9db5-4f54f8db191f,"{""id"": ""Number - The value of 'listingId' field returned in .../properties/list endpoint or 'id' field returned in .../auto-complete endpoint with type as listing(required)""}",,,,,,,"import requests

url = ""https://realty-in-au.p.rapidapi.com/properties/detail""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""realty-in-au.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Realty in AU,schools/list,List schools around a GEO location,https://rapidapi.com/apidojo/api/realty-in-au/playground/apiendpoint_8a708adb-4e6e-472a-8fc3-daf964ea9747,"{""lat"": ""Number - The latitude of GEO location(required)"", ""lon"": ""String - The longitude of GEO location(required)""}",,,,,,,"import requests

url = ""https://realty-in-au.p.rapidapi.com/schools/list""

querystring = {""lat"":""-37.79870933"",""lon"":""144.95324086""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""realty-in-au.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Florida Realty API,getListings,Use this endpoint to retrieve a list of condominiums and townhouses in Southwest Florida and on the East Coast.,https://rapidapi.com/XPLOR/api/florida-realty-api1/playground/apiendpoint_3dd8a79a-a25a-4d55-9dc5-106f35aa35ba,"{""city"": ""String - Name of the city to search for condos and townhouses. Supported cities are Cape Coral, Fort Myers, West Palm Beach, Lake Worth, Lantana, Boynton Beach, Delray Beach, Boca Raton, Pompano Beach, Fort Lauderdale. New supported cities are Naples, Tampa and Saint Petersburg. By default Cape Coral is used.(optional)"", ""price_max"": ""Number - The maximum price of the condos and townhouses you search for in US Dollar. By default 250000 for $250,000 is used.(optional)"", ""limit"": ""Number - The maximum number of items to return in the result list. By default 50 is used.(optional)"", ""offset"": ""Number - If you want to implement a paging use offset. The maximum items are defined by the parameter limit starting at offset For example, to return for the frist 10 items set offset to 0 and limit to 10. To return the next 10 items set offset to 10 and limit to 10 and so on. By default offset ist 0.(optional)"", ""sort"": ""String - Supported values are RELEVANCE (best match), NEWEST (newest first), PRICE_LOW (cheapest first), PRICE_HIGH (cheapest last). By default RELEVANCE is used.(optional)""}",,,,,,,"import requests

url = ""https://florida-realty-api1.p.rapidapi.com/realty/listings""

querystring = {""city"":""Cape Coral"",""price_max"":""250000"",""limit"":""50"",""offset"":""0"",""sort"":""RELEVANCE""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""florida-realty-api1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Florida Realty API,getListing,Use this endpoint to get detailed information about a single condominium or townhouse.,https://rapidapi.com/XPLOR/api/florida-realty-api1/playground/apiendpoint_f1269195-f5df-4a3a-9dce-119cc275b8bc,"{""identifier"": ""String - The unique identifier of a listing you'll got before from getListings.  Each OfferForPurchase has got an attribute named Identifier that is used  on this endpoint to get the details of the property.(required)""}",,,,,,,"import requests

url = ""https://florida-realty-api1.p.rapidapi.com/realty/listings/M5215311859""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""florida-realty-api1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Florida Realty API,getCities,"Get a list of supported cities with some data about those cities like the number of residents, the latitude, longitude, altitude  and a description and image of the city.",https://rapidapi.com/XPLOR/api/florida-realty-api1/playground/apiendpoint_57d5d3b9-ea97-45e6-bf38-aa93a59e97cd,No additional params,,,,,,,"import requests

url = ""https://florida-realty-api1.p.rapidapi.com/realty/cities""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""florida-realty-api1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Florida Realty API,getImage,Load images of cities you retrieve by calling getCities().,https://rapidapi.com/XPLOR/api/florida-realty-api1/playground/apiendpoint_793147f1-92c1-43e0-af86-1370ca0db818,"{""filename"": ""String - The name of the image to load.(required)""}",,,,,,,"import requests

url = ""https://florida-realty-api1.p.rapidapi.com/realty/cities/images/capecoral.jpg""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""florida-realty-api1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Powerful GSTIN Tool,Search GST by Company Name,Retrieve GST numbers and corresponding company names that match your search term,https://rapidapi.com/velocityhub/api/powerful-gstin-tool/playground/apiendpoint_958839d0-a12e-4c81-9de1-756441fefdf4,"{""name"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://powerful-gstin-tool.p.rapidapi.com/v1/search""

querystring = {""name"":""Reliance""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""powerful-gstin-tool.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Powerful GSTIN Tool,Retrieve GST Details,Retrieves GST details for a given entity based on their GSTIN (Goods and Services Tax Identification Number),https://rapidapi.com/velocityhub/api/powerful-gstin-tool/playground/apiendpoint_8484b86f-2b37-41ac-be31-cfe2d46ccdf2,"{""GSTIN"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://powerful-gstin-tool.p.rapidapi.com/v1/gstin/18AAACR5055K1Z6/details""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""powerful-gstin-tool.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Powerful GSTIN Tool,Retrieve GST Details - Mini,Retrieves basic GST details for a given entity based on their GSTIN (Goods and Services Tax Identification Number). This endpoint provides a subset of GST information.,https://rapidapi.com/velocityhub/api/powerful-gstin-tool/playground/apiendpoint_98659574-efd3-4f46-b001-8f3d3871b70f,"{""GSTIN"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://powerful-gstin-tool.p.rapidapi.com/v1/gstin/18AAACR5055K1Z6/basic""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""powerful-gstin-tool.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Powerful GSTIN Tool,Verify GSTIN Status,This endpoint allows you to verify the status of a GSTIN (Goods and Services Tax Identification Number). It provides information on whether the specified GSTIN is currently active or not.,https://rapidapi.com/velocityhub/api/powerful-gstin-tool/playground/apiendpoint_4307f334-e1dd-491c-86e7-47001f51234d,"{""GSTIN"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://powerful-gstin-tool.p.rapidapi.com/v1/gstin/18AAACR5055K1Z6/status""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""powerful-gstin-tool.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Powerful GSTIN Tool,Validate GSTIN Format,This endpoint allows you to verify whether a provided GSTIN (Goods and Services Tax Identification Number) is in a valid format. It checks whether the format of the GSTIN conforms to the established standards and regulations.,https://rapidapi.com/velocityhub/api/powerful-gstin-tool/playground/apiendpoint_32e2d262-bcd3-4310-b47b-a55e6eac8913,"{""GSTIN"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://powerful-gstin-tool.p.rapidapi.com/v1/gstin/18AAACR5055K1Z6/is-valid""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""powerful-gstin-tool.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Powerful GSTIN Tool,Retrieve PAN Information from GSTIN,"Retrieve PAN (Permanent Account Number) information associated with a given GSTIN (Goods and Services Tax Identification Number). 

PAN is a unique identifier issued by the Indian Income Tax Department for tax purposes. By providing a valid GSTIN, you can obtain the PAN details linked to the entity, which can be useful for verifying tax-related information or conducting financial transactions.",https://rapidapi.com/velocityhub/api/powerful-gstin-tool/playground/apiendpoint_8ab40068-a6ef-4435-b173-5c0c22f78a0b,"{""GSTIN"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://powerful-gstin-tool.p.rapidapi.com/v1/gstin/18AAACR5055K1Z6/pan-info""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""powerful-gstin-tool.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Powerful GSTIN Tool,Retrieve Address Information from GSTIN,"Retrieve address information associated with a given GSTIN (Goods and Services Tax Identification Number). GSTINs often have multiple associated addresses, including a principal place of business and additional addresses. 

This endpoint provides access to both the principal and additional addresses for the specified GSTIN.",https://rapidapi.com/velocityhub/api/powerful-gstin-tool/playground/apiendpoint_7500f9fe-8287-450e-9306-bee94e0cf6bd,"{""GSTIN"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://powerful-gstin-tool.p.rapidapi.com/v1/gstin/18AAACR5055K1Z6/address""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""powerful-gstin-tool.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Riesgo Pais,Jornada actual,,https://rapidapi.com/lizardopablo/api/riesgo-pais/playground/endpoint_9e898755-4878-4e7f-91be-a3cadce683d1,No additional params,,,,,,,"import requests

url = ""https://riesgo-pais.p.rapidapi.com/api/riesgopais""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""riesgo-pais.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Riesgo Pais,Semanal,Riesgo pais Semanal,https://rapidapi.com/lizardopablo/api/riesgo-pais/playground/apiendpoint_5f5b2a55-ae2b-4325-9579-33236c1aa4e0,No additional params,,,,,,,"import requests

url = ""https://riesgo-pais.p.rapidapi.com/api/riesgopais/semanal""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""riesgo-pais.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Riesgo Pais,Mensual,Riesgo pais Mensual,https://rapidapi.com/lizardopablo/api/riesgo-pais/playground/apiendpoint_e342bdd6-125a-4402-8184-1651385882ce,No additional params,,,,,,,"import requests

url = ""https://riesgo-pais.p.rapidapi.com/api/riesgopais/mensual""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""riesgo-pais.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Riesgo Pais,Anual,Riesgo pais Anual,https://rapidapi.com/lizardopablo/api/riesgo-pais/playground/apiendpoint_34fa0c74-09af-4c94-860a-b46f925fe271,No additional params,,,,,,,"import requests

url = ""https://riesgo-pais.p.rapidapi.com/api/riesgopais/anual""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""riesgo-pais.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Real Estate,v1/properties/rent,U.S properties for rent,https://rapidapi.com/sparior/api/real-estate12/playground/apiendpoint_5b7f149a-811a-45c8-a25d-8fe250ce9dfb,"{""state"": ""String - ...(required)"", ""city"": ""String - ...(required)"", ""page"": ""String - Enter the starting page number, default (1)(required)"", ""sort"": ""String - Choose one:new_listing|newest|affordable|luxury(optional)"", ""beds"": ""String - Minimum number of beds(optional)"", ""baths"": ""String - Minimum number of baths(optional)"", ""price_l"": ""String - Filter by the minimum price of the property(optional)"", ""price_h"": ""String - Filter by the maximum price of the property(optional)"", ""status"": ""String - Choose one:foreclosure|hide-new-constuction|show-new-constuction|show-55-plus(optional)"", ""type"": ""String - Choose from the following:single-family,multi-family,mobile,farm,condo,townhome,land(optional)""}",,,,,,,"import requests

url = ""https://real-estate12.p.rapidapi.com/v1/real-estate/rent""

querystring = {""state"":""CA"",""city"":""Los Angeles"",""page"":""1"",""sort"":""newest"",""price_h"":""2000""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""real-estate12.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Real Estate,v1/property/details,Get detailed information on U.S properties,https://rapidapi.com/sparior/api/real-estate12/playground/apiendpoint_fe00df8e-e6fc-40f0-8d3d-ce956c612131,"{""property_id"": ""String - Enter property ID. (This information can be found on sales and rent endpoints results)(required)""}",,,,,,,"import requests

url = ""https://real-estate12.p.rapidapi.com/v1/real-estate/property""

querystring = {""property_id"":""9541627036""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""real-estate12.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Real Estate,v1/properties/sale,U.S properties for sale,https://rapidapi.com/sparior/api/real-estate12/playground/apiendpoint_caf75f06-2b51-4afa-b303-5cc08fc5cd32,"{""state"": ""String - ...(required)"", ""city"": ""String - ...(required)"", ""page"": ""String - Enter the starting page number, default (1)(required)"", ""sort"": ""String - Choose one:relevant|newest|price_low|price_high|open_house_date|price_reduce|largest_sqft|lot_size(optional)"", ""beds"": ""String - Minimum number of beds(optional)"", ""baths"": ""String - Minimum number of baths(optional)"", ""price_l"": ""String - Filter by the minimum price of the property(optional)"", ""price_h"": ""String - Filter by the maximum price of the property(optional)"", ""status"": ""String - Choose one:foreclosure|hide-new-constuction|show-new-constuction|show-55-plus(optional)"", ""type"": ""String - Choose from the following:single-family,multi-family,mobile,farm,condo,townhome,land(optional)""}",,,,,,,"import requests

url = ""https://real-estate12.p.rapidapi.com/v1/real-estate/sale""

querystring = {""state"":""CA"",""city"":""Los Angeles"",""page"":""1"",""sort"":""relevant""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""real-estate12.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
WeatherAPI com,Realtime Weather API,Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.,https://rapidapi.com/weatherapi/api/weatherapi-com/playground/apiendpoint_bef542ef-a177-4633-aacc-ee9703945037,"{""q"": ""String - Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar: e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1(required)""}",,,,,,,"import requests

url = ""https://weatherapi-com.p.rapidapi.com/current.json""

querystring = {""q"":""53.1,-0.13""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weatherapi-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
WeatherAPI com,Forecast Weather API,"Forecast weather API method returns upto next 14 day weather forecast and weather alert as json. It contains astronomy data, day weather forecast and hourly interval weather information for a given city.",https://rapidapi.com/weatherapi/api/weatherapi-com/playground/apiendpoint_02481648-7c41-48cc-9b9f-e53596d38bab,"{""q"": ""String - Query parameter based on which data is sent back. It could be following:Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar: e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1(required)"", ""days"": ""Number - Number of days of forecast required.(optional)"", ""lang"": ""String - Returns 'condition:text' field in API in the desired language(optional)"", ""dt"": ""Date (yyyy-mm-dd) - If passing 'dt', it should be between today and next 10 day in yyyy-MM-dd format.(optional)""}",,,,,,,"import requests

url = ""https://weatherapi-com.p.rapidapi.com/forecast.json""

querystring = {""q"":""London"",""days"":""3""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weatherapi-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
WeatherAPI com,IP Lookup API,IP Lookup API method allows a user to get up to date information for an IP address in json.,https://rapidapi.com/weatherapi/api/weatherapi-com/playground/apiendpoint_d1dfa1c6-d1da-4d8c-8d72-72f33839a403,"{""q"": ""String - e.g: q=auto:ipIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1(required)""}",,,,,,,"import requests

url = ""https://weatherapi-com.p.rapidapi.com/ip.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weatherapi-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
WeatherAPI com,Time Zone API,Time Zone API method allows a user to get up to date time zone and local time information in json.,https://rapidapi.com/weatherapi/api/weatherapi-com/playground/apiendpoint_e163d1c6-f2e1-4809-b433-4438da245f5e,"{""q"": ""String - Query parameter based on which data is sent back. It could be following:Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar: e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1(required)""}",,,,,,,"import requests

url = ""https://weatherapi-com.p.rapidapi.com/timezone.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weatherapi-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
WeatherAPI com,Astronomy API,"Astronomy API method allows a user to get up to date information for sunrise, sunset, moonrise, moonset, moon phase and illumination in json.",https://rapidapi.com/weatherapi/api/weatherapi-com/playground/apiendpoint_35a8ac86-72b2-4a0b-a5f5-0959ddf5fb7d,"{""q"": ""String - Query parameter based on which data is sent back. It could be following:Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar: e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1(required)"", ""dt"": ""Date (yyyy-mm-dd) - Date(optional)""}",,,,,,,"import requests

url = ""https://weatherapi-com.p.rapidapi.com/astronomy.json""

querystring = {""q"":""London""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weatherapi-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
WeatherAPI com,History Weather API,"History weather API method returns historical weather for a date on or after 1st Jan, 2010 (depending upon subscription level) as json.",https://rapidapi.com/weatherapi/api/weatherapi-com/playground/apiendpoint_02b3d475-87b4-41dc-a6a0-4afa71708e9a,"{""q"": ""String - Query parameter based on which data is sent back. It could be following:Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar: e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1(required)"", ""lang"": ""String - Returns 'condition:text' field in API in the desired language(optional)"", ""hour"": ""Number - Restricting history output to a specific hour in a given day.(optional)"", ""dt"": ""Date (yyyy-mm-dd) - For history API 'dt' should be on or after 1st Jan, 2010 in yyyy-MM-dd format(required)"", ""end_dt"": ""Date (yyyy-mm-dd) - Restrict date output for History API method. Should be on or after 1st Jan, 2010. Make sure end_dt is equal to or greater than 'dt'.(optional)""}",,,,,,,"import requests

url = ""https://weatherapi-com.p.rapidapi.com/history.json""

querystring = {""q"":""London"",""lang"":""en""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weatherapi-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
WeatherAPI com,Search/Autocomplete API,Search or Autocomplete API returns matching cities and towns.,https://rapidapi.com/weatherapi/api/weatherapi-com/playground/apiendpoint_d85e9c6f-fa09-410e-9068-763abecae008,"{""q"": ""String - Query parameter based on which data is sent back. It could be following:Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar: e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1(required)""}",,,,,,,"import requests

url = ""https://weatherapi-com.p.rapidapi.com/search.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weatherapi-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
WeatherAPI com,Sports API,"Sports API method allows a user to get listing of all upcoming sports events for football, cricket and golf in json.",https://rapidapi.com/weatherapi/api/weatherapi-com/playground/apiendpoint_14ff4acf-9ff1-49aa-8d61-63a70facafb7,"{""q"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://weatherapi-com.p.rapidapi.com/sports.json""

querystring = {""q"":""London""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weatherapi-com.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Hourly Station Data,This endpoint provides historical hourly observations for a particular weather station. The data provided through this endpoint is aggregated from multiple governmental interfaces.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_5db9ec45-3df4-417b-a481-a037efc8cd9d,"{""station"": ""String - The Meteostat weather station identifier.(required)"", ""start"": ""Date (yyyy-mm-dd) - The start date of the period (YYYY-MM-DD).(required)"", ""end"": ""Date (yyyy-mm-dd) - The end date of the period (YYYY-MM-DD).(required)"", ""tz"": ""String - The time zone according to the tz database. Default is UTC.(optional)"", ""model"": ""Boolean - A boolean parameter which specifies whether missing observations should be substituted with statistically optimized model data. Default istrue.(optional)"", ""freq"": ""String - The time frequency of the records. Can be used for custom aggregation. Default isnull.(optional)"", ""units"": ""String - The unit system of the meteorological parameters. Default is metric.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/stations/hourly""

querystring = {""station"":""10637"",""start"":""2020-01-01"",""end"":""2020-01-01"",""tz"":""Europe/Berlin""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Daily Station Data,This endpoint provides historical daily statistics for a particular weather station. The data provided through this endpoint is aggregated from multiple governmental interfaces.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_a5f43bba-981c-437f-9dd0-d0c7923ecf4c,"{""station"": ""String - The Meteostat weather station identifier.(required)"", ""start"": ""Date (yyyy-mm-dd) - The start date of the period (YYYY-MM-DD).(required)"", ""end"": ""Date (yyyy-mm-dd) - The end date of the period (YYYY-MM-DD).(required)"", ""model"": ""Boolean - A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default istrue.(optional)"", ""freq"": ""String - The time frequency of the records. Can be used for custom aggregation. Default isnull.(optional)"", ""units"": ""String - The unit system of the meteorological parameters. Default is metric.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/stations/daily""

querystring = {""station"":""10637"",""start"":""2020-01-01"",""end"":""2020-01-31""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Monthly Station Data,This endpoint provides historical monthly statistics for a particular weather station. The data provided through this endpoint is aggregated from multiple governmental interfaces.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_09f1ada3-0810-4ae3-8528-0023581fb203,"{""station"": ""String - The Meteostat weather station identifier.(required)"", ""start"": ""Date (yyyy-mm-dd) - The start date of the period (YYYY-MM-DD).(required)"", ""end"": ""Date (yyyy-mm-dd) - The end date of the period (YYYY-MM-DD).(required)"", ""model"": ""Boolean - A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default istrue.(optional)"", ""freq"": ""String - The time frequency of the records. Can be used for custom aggregation. Default isnull.(optional)"", ""units"": ""String - The unit system of the meteorological parameters. Default is metric.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/stations/monthly""

querystring = {""station"":""10637"",""start"":""2020-01-01"",""end"":""2020-12-31""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Station Climate Data,This endpoint provides climate normals for a particular weather station.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_ae45cfce-f532-4443-a50d-625a7341a43c,"{""station"": ""String - The Meteostat weather station identifier.(required)"", ""start"": ""Number - The start year of the reference period.(optional)"", ""end"": ""Number - The end year of the reference period.(optional)"", ""units"": ""String - The unit system of the meteorological parameters. Default is metric.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/stations/normals""

querystring = {""station"":""10637"",""start"":""1961"",""end"":""1990""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Station Meta Data,This endpoint provides meta data for a particular weather station.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_a335cd2a-d7dd-4b1d-8ae9-7e58eb564f83,"{""id"": ""String - The Meteostat identifier of a weather station.(optional)"", ""wmo"": ""String - The WMO identifier of a weather station.(optional)"", ""icao"": ""String - The ICAO identifier of a weather station.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/stations/meta""

querystring = {""id"":""10637""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Nearby Stations,This endpoint provides a list of nearby weather stations for a given geographical location.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_4462f80e-0e34-4073-b910-25aaad1ff7a9,"{""lat"": ""Number - The location's latitude.(required)"", ""lon"": ""Number - The location's longitude.(required)"", ""limit"": ""Number - The maximum number of weather stations. Default is 10.(optional)"", ""radius"": ""Number - The meter radius to search in. Default is 100000.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/stations/nearby""

querystring = {""lat"":""51.5085"",""lon"":""-0.1257""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Hourly Point Data,This endpoint provides historical hourly observations for a geographic location. The data provided through this endpoint is aggregated from multiple governmental interfaces.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_8462b86c-02cc-4e76-8dfb-bb833869a72a,"{""lat"": ""Number - The point's latitude.(required)"", ""lon"": ""Number - The point's longitude.(required)"", ""alt"": ""Number - The point's elevation.(optional)"", ""start"": ""Date (yyyy-mm-dd) - The start date of the period (YYYY-MM-DD).(required)"", ""end"": ""Date (yyyy-mm-dd) - The end date of the period (YYYY-MM-DD).(required)"", ""tz"": ""String - The time zone according to the tz database. Default is UTC.(optional)"", ""model"": ""Boolean - A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default istrue.(optional)"", ""freq"": ""String - The time frequency of the records. Can be used for custom aggregation. Default isnull.(optional)"", ""units"": ""String - The unit system of the meteorological parameters. Default is metric.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/point/hourly""

querystring = {""lat"":""43.6667"",""lon"":""-79.4"",""alt"":""113"",""start"":""2020-01-01"",""end"":""2020-01-01"",""tz"":""America/Toronto""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Daily Point Data,This endpoint provides historical daily statistics for a geographic location. The data provided through this endpoint is aggregated from multiple governmental interfaces.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_7c90365e-52d1-4ba0-80ac-1e906ecc2c4d,"{""lat"": ""Number - The point's latitude.(required)"", ""lon"": ""Number - The point's longitude.(required)"", ""alt"": ""Number - The point's elevation.(optional)"", ""start"": ""Date (yyyy-mm-dd) - The start date of the period (YYYY-MM-DD).(required)"", ""end"": ""Date (yyyy-mm-dd) - The end date of the period (YYYY-MM-DD).(required)"", ""model"": ""Boolean - A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default istrue.(optional)"", ""freq"": ""String - The time frequency of the records. Can be used for custom aggregation. Default isnull.(optional)"", ""units"": ""String - The unit system of the meteorological parameters. Default is metric.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/point/daily""

querystring = {""lat"":""43.6667"",""lon"":""-79.4"",""alt"":""184"",""start"":""2020-01-01"",""end"":""2020-01-31""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Monthly Point Data,This endpoint provides historical monthly statistics for a geographic location. The data provided through this endpoint is aggregated from multiple governmental interfaces.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_8d39939d-4661-41fb-a498-1e76b9930d96,"{""lat"": ""Number - The point's latitude.(required)"", ""lon"": ""Number - The point's longitude.(required)"", ""alt"": ""Number - The point's elevation.(optional)"", ""start"": ""Date (yyyy-mm-dd) - The start date of the period (YYYY-MM-DD).(required)"", ""end"": ""Date (yyyy-mm-dd) - The end date of the period (YYYY-MM-DD).(required)"", ""model"": ""Boolean - A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default istrue.(optional)"", ""freq"": ""String - The time frequency of the records. Can be used for custom aggregation. Default isnull.(optional)"", ""units"": ""String - The unit system of the meteorological parameters. Default is metric.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/point/monthly""

querystring = {""lat"":""52.5244"",""lon"":""13.4105"",""alt"":""43"",""start"":""2020-01-01"",""end"":""2020-12-31""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
meteostat,Point Climate Data,This endpoint provides climate normals for any geo location.,https://rapidapi.com/meteostat/api/meteostat/playground/apiendpoint_f39d99e8-0020-4b73-9cb0-8f67e0bb79d9,"{""lat"": ""Number - The point's latitude.(required)"", ""lon"": ""Number - The point's longitude.(required)"", ""alt"": ""Number - The point's elevation.(optional)"", ""start"": ""Number - The start year of the reference period.(optional)"", ""end"": ""Number - The end year of the reference period.(optional)"", ""units"": ""String - The unit system of the meteorological parameters. Default is metric.(optional)""}",,,,,,,"import requests

url = ""https://meteostat.p.rapidapi.com/point/normals""

querystring = {""lat"":""59.9127"",""lon"":""10.7461"",""alt"":""26"",""start"":""1961"",""end"":""1990""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""meteostat.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Weather,locations/search,Search City or Zipcode,https://rapidapi.com/apidojo/api/weather338/playground/apiendpoint_d46cf324-db37-4810-83b1-519b71d25b51,"{""query"": ""String - City name or Postal code(required)"", ""language"": ""String - The language code(optional)""}",,,,,,,"import requests

url = ""https://weather338.p.rapidapi.com/locations/search""

querystring = {""query"":""san fran"",""language"":""en-US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weather338.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Weather,locations/get-details,Get detail information of specific location,https://rapidapi.com/apidojo/api/weather338/playground/apiendpoint_10e9fccc-0c14-45ea-842b-5ed9dd67d2a6,"{""placeid"": ""String - The value of placeid field returned in .../locations/search endpoint(required)"", ""language"": ""String - The language code(optional)""}",,,,,,,"import requests

url = ""https://weather338.p.rapidapi.com/locations/get-details""

querystring = {""placeid"":""69bedc6a5b6e977993fb3e5344e3c06d8bc36a1fb6754c3ddfb5310a3c6d6c87"",""language"":""en-US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weather338.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Weather,weather/forecast,Get weather forecast information to specific GEO location,https://rapidapi.com/apidojo/api/weather338/playground/apiendpoint_abe7f53e-caa7-46cd-9c6a-ef9d0e8681ca,"{""date"": ""String - Date to get weather forecast, format as yyyyMMdd(required)"", ""language"": ""String - The language code(optional)"", ""latitude"": ""Number - The latitude of GEO location to get weather forecast(required)"", ""longitude"": ""Number - The longitude of GEO location to get weather forecast(required)"", ""units"": ""String - One of the followings : e - English | m - Metric | h - Hybrid(optional)""}",,,,,,,"import requests

url = ""https://weather338.p.rapidapi.com/weather/forecast""

querystring = {""date"":""20200622"",""language"":""en-US"",""latitude"":""37.765"",""longitude"":""-122.463"",""units"":""m""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weather338.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Weather,news/list,List latest weather forecast news,https://rapidapi.com/apidojo/api/weather338/playground/apiendpoint_b46fe43d-ab66-41dd-b742-c5f987c22a32,"{""offset"": ""Number - Use for paging purpose(optional)"", ""limit"": ""Number - Use for paging purpose(optional)""}",,,,,,,"import requests

url = ""https://weather338.p.rapidapi.com/news/list""

querystring = {""offset"":""0"",""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weather338.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
weather data api,find location,find location to get latitude and longtitude,https://rapidapi.com/nusantaracodedotcom/api/weather-data-api1/playground/apiendpoint_4a900797-1d4c-4e0b-81fa-8e54ad701cca,"{""q"": ""String - ...(optional)"", ""limit"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://weather-data-api1.p.rapidapi.com/find-location""

querystring = {""q"":""manila"",""limit"":""5""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weather-data-api1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
weather data api,check forecast,check forecast fom latitude and longtidute,https://rapidapi.com/nusantaracodedotcom/api/weather-data-api1/playground/apiendpoint_51261c05-406c-405a-81b5-7eb5cb973773,"{""lat"": ""String - ...(required)"", ""lon"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://weather-data-api1.p.rapidapi.com/check-forecast""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weather-data-api1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
weather data api,check air pollution,check air pollution by latitude and longitude,https://rapidapi.com/nusantaracodedotcom/api/weather-data-api1/playground/apiendpoint_99c10766-935e-48a5-943d-deef07a24354,"{""lat"": ""String - ...(required)"", ""lon"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://weather-data-api1.p.rapidapi.com/air_pollution""

querystring = {""lat"":""-6.269488060299007"",""lon"":""106.91110302613714""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""weather-data-api1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Chess Puzzles,Puzzles,The main access point for the API,https://rapidapi.com/KeeghanM/api/chess-puzzles/playground/apiendpoint_177d3683-dcc4-4a7b-812a-884e259e1304,"{""themes"": ""String - ...(optional)"", ""rating"": ""Number - ...(optional)"", ""themesType"": ""String - ...(optional)"", ""playerMoves"": ""Number - ...(optional)"", ""count"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://chess-puzzles.p.rapidapi.com/""

querystring = {""themes"":""[\""middlegame\"",\""advantage\""]"",""rating"":""1500"",""themesType"":""ALL"",""playerMoves"":""4"",""count"":""25""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""chess-puzzles.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Chess Puzzles,Puzzle by Id,Gets a single puzzle by Id,https://rapidapi.com/KeeghanM/api/chess-puzzles/playground/apiendpoint_8aa67ff4-7d0d-45bc-bfd7-9f8f66768879,"{""id"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://chess-puzzles.p.rapidapi.com/""

querystring = {""id"":""HxxIU""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""chess-puzzles.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Free to Play Games Database,Filter games by multiple tags,"Filter Games by multiple tags and platform for personalized results. Optionally you can also use the ""platform"" and ""sort"" parameters.",https://rapidapi.com/digiwalls/api/free-to-play-games-database/playground/apiendpoint_051b14c8-084e-4daa-8c86-8d54bfc148c1,"{""tag"": ""String - ...(required)"", ""platform"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://free-to-play-games-database.p.rapidapi.com/api/filter""

querystring = {""tag"":""3d.mmorpg.fantasy.pvp"",""platform"":""pc""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""free-to-play-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Free to Play Games Database,Games by platform,"Insert platform, eg: pc, browser.",https://rapidapi.com/digiwalls/api/free-to-play-games-database/playground/apiendpoint_73843478-099f-4895-8b03-3185af92f031,"{""platform"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://free-to-play-games-database.p.rapidapi.com/api/games""

querystring = {""platform"":""pc""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""free-to-play-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Free to Play Games Database,Games by category or tag,"Insert game category or tag, eg: mmorpg, shooter, pvp, mmofps and more.",https://rapidapi.com/digiwalls/api/free-to-play-games-database/playground/apiendpoint_b7975935-6d31-4d5b-abf9-63aac8d0fd1a,"{""category"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://free-to-play-games-database.p.rapidapi.com/api/games""

querystring = {""category"":""shooter""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""free-to-play-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Free to Play Games Database,Games by platform & category & sorted,Get games list using multiple parameters,https://rapidapi.com/digiwalls/api/free-to-play-games-database/playground/apiendpoint_d80d38b5-1dc0-4d0d-961b-2458b7025213,"{""platform"": ""String - ...(optional)"", ""category"": ""String - ...(optional)"", ""sort-by"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://free-to-play-games-database.p.rapidapi.com/api/games""

querystring = {""platform"":""browser"",""category"":""mmorpg"",""sort-by"":""release-date""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""free-to-play-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Free to Play Games Database,Return details from a specific game,Insert game id,https://rapidapi.com/digiwalls/api/free-to-play-games-database/playground/apiendpoint_b31645e6-6ccc-499f-a0c0-6f2923958982,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://free-to-play-games-database.p.rapidapi.com/api/game""

querystring = {""id"":""452""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""free-to-play-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Free to Play Games Database,Sort games,"Insert sort by, eg: release-date, alphabetical or relevance",https://rapidapi.com/digiwalls/api/free-to-play-games-database/playground/apiendpoint_69142e1c-0940-43a3-a4a5-349de345f0b9,"{""sort-by"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://free-to-play-games-database.p.rapidapi.com/api/games""

querystring = {""sort-by"":""alphabetical""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""free-to-play-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Free to Play Games Database,Games list,Get all games!,https://rapidapi.com/digiwalls/api/free-to-play-games-database/playground/apiendpoint_a8770385-fce7-47cc-82b6-6d1ce4b13fe2,No additional params,,,,,,,"import requests

url = ""https://free-to-play-games-database.p.rapidapi.com/api/games""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""free-to-play-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
RAWG Video Games Database,Get a list of games,Get a list of games,https://rapidapi.com/accujazz/api/rawg-video-games-database/playground/apiendpoint_e4e2766f-1422-4b88-bd10-22acdb7c9a16,No additional params,,,,,,,"import requests

url = ""https://rawg-video-games-database.p.rapidapi.com/games""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rawg-video-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
RAWG Video Games Database,Get game details,Get game details,https://rapidapi.com/accujazz/api/rawg-video-games-database/playground/apiendpoint_fe5db4c5-dce0-4b37-b851-5194eedf0c17,"{""game_pk"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://rawg-video-games-database.p.rapidapi.com/games/%7Bgame_pk%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rawg-video-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
RAWG Video Games Database,Get genre details,Get genre details,https://rapidapi.com/accujazz/api/rawg-video-games-database/playground/apiendpoint_0122147f-0f81-4111-babb-94c0c9d70ac0,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://rawg-video-games-database.p.rapidapi.com/genres/%7Bid%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rawg-video-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
RAWG Video Games Database,Get a list of video game genres,Get a list of video game genres,https://rapidapi.com/accujazz/api/rawg-video-games-database/playground/apiendpoint_520227e6-54e3-49eb-9990-51e24a584016,No additional params,,,,,,,"import requests

url = ""https://rawg-video-games-database.p.rapidapi.com/platforms""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rawg-video-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
RAWG Video Games Database,Get platform details,Get platform details,https://rapidapi.com/accujazz/api/rawg-video-games-database/playground/apiendpoint_61d23b55-2de8-448e-94a2-c9e4c19b7a8d,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://rawg-video-games-database.p.rapidapi.com/platforms/%7Bid%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rawg-video-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
RAWG Video Games Database,Get a list of video game platforms,Get a list of video game platforms,https://rapidapi.com/accujazz/api/rawg-video-games-database/playground/apiendpoint_bc1d1b20-04a3-4539-9fe9-04efd37e874f,No additional params,,,,,,,"import requests

url = ""https://rawg-video-games-database.p.rapidapi.com/platforms""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rawg-video-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
RAWG Video Games Database,Get a list of video game publishers,Get a list of video game publishers,https://rapidapi.com/accujazz/api/rawg-video-games-database/playground/apiendpoint_f63d802e-b63c-406b-8628-72b02b059c4a,No additional params,,,,,,,"import requests

url = ""https://rawg-video-games-database.p.rapidapi.com/publishers""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rawg-video-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
RAWG Video Games Database,Get publisher details,Get publisher details,https://rapidapi.com/accujazz/api/rawg-video-games-database/playground/apiendpoint_5c0057d0-4144-4de5-82c3-024b7cb2a953,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://rawg-video-games-database.p.rapidapi.com/publishers/%7Bid%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""rawg-video-games-database.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Pokemon Go,Type Effectiveness,"When a Pokemon attacks, a multiplier is applied based on the attacker and defender types. This type effectiveness is very important to help deal the most damage as possible in raids and pvp. This API details how each type multiplier is applied.

Returns a JSON dict where each key is the attacking type and the value is a dict of defender types and the damage multiplier.",https://rapidapi.com/Chewett/api/pokemon-go1/playground/apiendpoint_1b35bf4e-f05c-4b20-ad2f-bfdf68f82696,No additional params,,,,,,,"import requests

url = ""https://pokemon-go1.p.rapidapi.com/type_effectiveness.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""pokemon-go1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Pokemon Go,Pokemon Rarity,"Pokemon are split up into 3 rarity types. These are Standard, Legendary, and Mythic. Typically Legendary and Mythic Pokemon have different trading rules along with a much higher buddy walking distance. This API details how what rarity ranking Pokemon Go places each Pokemon in.

Returns a JSON dict where each key is the rarity type and the value is a list of dicts containing the details of Pokemon in that rarity group. Each Pokemon dict has the pokemon_id, pokemon_name and rarity inside it for ease of processing.",https://rapidapi.com/Chewett/api/pokemon-go1/playground/apiendpoint_60f7c1a7-8f6f-43c4-823f-9065a0ceda39,No additional params,,,,,,,"import requests

url = ""https://pokemon-go1.p.rapidapi.com/pokemon_rarity.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""pokemon-go1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Pokemon Go,Pokemon Power Up Requirements,"To power up a pokemon you need to pay some stardust and candy. Pokemon can be powered up to two levels higher than your level, to a max level of 40. This API details how much it will cost to power up a Pokemon each level.

Returns a JSON dict where each key is the current level and the value is a dictionary containing the cost of powering up a Pokemon at that level. Each powerup dict contains the candy to upgrade, the stardust to upgrade, the current level and the next level.",https://rapidapi.com/Chewett/api/pokemon-go1/playground/apiendpoint_f8043210-2779-4aa7-aa6b-cdc6fea86ce8,No additional params,,,,,,,"import requests

url = ""https://pokemon-go1.p.rapidapi.com/pokemon_powerup_requirements.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""pokemon-go1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Pokemon Go,Pokemon Genders,"Each Pokemon either has a gender of male or female, or is classified as genderless. This is important for some Pokemon who have gender specific evolutions. For example only a female Combee will evolve.

For each Pokemon there is percentage chance of any gender. For example some Pokemon are exclusively male or female and some are skewed towards one gender. This API details the gender breakdown for each Pokemon.

Returns a JSON dict where each key is the name of the gender ratio and the value is a list of Pokemon and their gender percentages. This dictionary holds the Pokemon ID, Pokemon name, and their gender percentages under the gender key.

The gender key is a dictionary which has three possible keys, female_percent, male_percent, genderless_percent. These values are a value from 0 to 1 and are not percentages but are kept named as such as this is what the game master calls it. 1 represents the Pokemon is entirely of one gender. The actual percentage may be obtained by multiplying the value by 100.",https://rapidapi.com/Chewett/api/pokemon-go1/playground/apiendpoint_7933745d-9579-4165-8685-cf4a11d8d1da,No additional params,,,,,,,"import requests

url = ""https://pokemon-go1.p.rapidapi.com/pokemon_genders.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""pokemon-go1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Pokemon Go,Current Pokemon Moves,$119,https://rapidapi.com/Chewett/api/pokemon-go1/playground/apiendpoint_19a6e37f-3299-49af-b753-ebb5f691c6c2,No additional params,,,,,,,"import requests

url = ""https://pokemon-go1.p.rapidapi.com/current_pokemon_moves.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""pokemon-go1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Pokemon Go,Raid Exclusive Pokemon,"Returns a JSON dict with the keys being the Pokemon ID, the values are an array containing the Pokemon name, ID, and and level raid they can be found in.  Currently all raid exclusive pokemon are tied to a specific raid level. In the future the API might need to change if this changes.",https://rapidapi.com/Chewett/api/pokemon-go1/playground/apiendpoint_49a9d1e4-7b7c-4b56-9f62-325a8743b129,No additional params,,,,,,,"import requests

url = ""https://pokemon-go1.p.rapidapi.com/raid_exclusive_pokemon.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""pokemon-go1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Pokemon Go,Pokemon Buddy Distances,"When you make a Pokemon your buddy after a certain distance walked with them you will get 1 candy from them. This distance depends on the specific Pokemon. The current buddy distances are 1, 3, 5, and 20 kilometres distance.  Returns a JSON object where each key is the distance needed to gain a candy and the value is a list containing multiple objects holding distance, Pokemon ID, Pokemon name and optionally the form.",https://rapidapi.com/Chewett/api/pokemon-go1/playground/apiendpoint_48fff99e-883f-413a-bf67-139b8a431578,No additional params,,,,,,,"import requests

url = ""https://pokemon-go1.p.rapidapi.com/pokemon_buddy_distances.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""pokemon-go1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Working days,/1.3/analyse,"Analyse a period (you provide a start_date and an end_date over a given calendar, we respond with the period analysis)",https://rapidapi.com/joursouvres-api/api/working-days/playground/apiendpoint_b9b4dde9-896f-4929-962e-0dc47f81fe93,"{""start_date"": ""String - The start date (YYYY-MM-DD)(required)"", ""end_date"": ""String - The end date (YYYY-MM-DD)(required)"", ""country_code"": ""String - The ISO country code (2 letters).See(required)"", ""end_time"": ""String - The end date's time (24 hours format, like 09:00 or 15:00, but not 3pm).If omitted, default value is 23:59.(optional)"", ""start_time"": ""String - The start date's time (24 hours format, like 09:00 or 15:00, but not 3pm).If omitted, default value is 00:00(optional)"", ""profile_id"": ""String - If you want to query a customized calendar, provide its profile_id (6 caracters)(optional)"", ""configuration"": ""String - The name or code of the preestablished configuration to use, typically, a regional calendar.\nSee(optional)"", ""holiday_language"": ""String - Specifies the language in which the names of public holidays are presented (ISO 639-1, 2 letters code).\nThis optional parameter is beneficial when querying a country with multiple official languages.\nIf this parameter is not specified, the default language used will be the primary official language of the queried country.See(optional)""}",,,,,,,"import requests

url = ""https://working-days.p.rapidapi.com/1.3/analyse""

querystring = {""start_date"":""2013-01-01"",""end_date"":""2013-12-31"",""country_code"":""US"",""end_time"":""18:15"",""start_time"":""09:14""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""working-days.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Working days,/1.3/add_working_days,Add (or remove) any number of working days to a date.,https://rapidapi.com/joursouvres-api/api/working-days/playground/apiendpoint_4bfde80e-e68f-4055-9ae8-8395558471f8,"{""country_code"": ""String - The ISO country code (2 letters).(required)"", ""start_date"": ""String - The start date (YYYY-MM-DD)(required)"", ""increment"": ""Number - The number of working days you want to add to your start date (positive or negative integer but not zero)(required)"", ""include_start"": ""Boolean - Should the count include the start_date? Default value is true. If you set include_start to false, the count will start at the next working day (or previous working day, if increment is negative)(optional)"", ""configuration"": ""String - The name or code of the preestablished configuration to use, typically, a regional calendar.\nSee(optional)"", ""profile_id"": ""String - If you want to query a customized calendar, provide its profile_id (6 caracters)(optional)"", ""holiday_language"": ""String - Specifies the language in which the names of public holidays are presented (ISO 639-1, 2 letters code).\nThis optional parameter is beneficial when querying a country with multiple official languages.\nIf this parameter is not specified, the default language used will be the primary official language of the queried country.(optional)""}",,,,,,,"import requests

url = ""https://working-days.p.rapidapi.com/1.3/add_working_days""

querystring = {""country_code"":""CA"",""start_date"":""2013-12-31"",""increment"":""10"",""include_start"":""true"",""configuration"":""Quebec""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""working-days.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Working days,/1.3/list_non_working_days,"List the non working days (weekend days, public holidays and custom dates) between two dates in chronlogical order.",https://rapidapi.com/joursouvres-api/api/working-days/playground/apiendpoint_8fc40b71-4d93-41f0-a21d-669c614c99d5,"{""country_code"": ""String - The ISO country code (2 letters).See(required)"", ""configuration"": ""String - The name or code of the preestablished configuration to use, typically, a regional calendar.\nSee(optional)"", ""start_date"": ""String - The start date (YYYY-MM-DD)(required)"", ""end_date"": ""String - The end date (YYYY-MM-DD)(required)"", ""profile_id"": ""String - ...(optional)"", ""holiday_language"": ""String - Specifies the language in which the names of public holidays are presented (ISO 639-1, 2 letters code).\nThis optional parameter is beneficial when querying a country with multiple official languages.\nIf this parameter is not specified, the default language used will be the primary official language of the queried country.(optional)""}",,,,,,,"import requests

url = ""https://working-days.p.rapidapi.com/1.3/list_non_working_days""

querystring = {""country_code"":""AU"",""configuration"":""AU-VIC"",""start_date"":""2013-01-01"",""end_date"":""2013-12-31""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""working-days.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Working days,/1.3/add_working_hours,Add an amount of working time to a given start date/time,https://rapidapi.com/joursouvres-api/api/working-days/playground/apiendpoint_4cf57721-56ed-4ad0-a019-e1d0cac9778d,"{""start_date"": ""String - The start date (YYYY-MM-DD)(required)"", ""country_code"": ""String - The ISO country code (2 letters).  See(required)"", ""start_time"": ""String - The start time in a 24 hours format with leading zeros.(required)"", ""increment_time"": ""String - The amount of working time to be added (or removed) to the start date time. Format H:i. This amount cannot exceed 5000 hours. For example, to add one hour: 1:00. To add 30 hours and 15 minutes: 30:15.  To remove 45 minutes: -0:45(required)"", ""configuration"": ""String - The name or code of the preestablished configuration to use, typically, a regional calendar.\nSee(optional)"", ""profile_id"": ""String - If you want to query a customized calendar, provide its profile_id (6 caracters)(optional)""}",,,,,,,"import requests

url = ""https://working-days.p.rapidapi.com/1.3/add_working_hours""

querystring = {""start_date"":""2013-12-31"",""country_code"":""US"",""start_time"":""08:15"",""increment_time"":""30:00"",""configuration"":""California""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""working-days.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Working days,/1.3/define_custom_period,"Defining a custom period (typically days of vacations of an employee or days of annual closure of a company) can be done from the working days websites user interface but can also be done programmatically from the API. A typical use case would be to retrieve the vacations of the workers out of the human ressources software and insert them into a custom calendar, then being able to query available working days.",https://rapidapi.com/joursouvres-api/api/working-days/playground/apiendpoint_6f07886f-38ab-4602-afe4-1dfbc0f824a2,"{""profile_id"": ""String - The ID of the calendar we are customizing.(required)"", ""description"": ""String - A textual description of the custom period (up to 30 caracters)(required)"", ""start_date"": ""String - The start date of the custom period (YYYY-MM-DD)(required)"", ""end_date"": ""String - The end date of the custom period (YYYY-MM-DD) If omitted, end date will be equal to start date (one day custom period)(optional)"", ""color"": ""String - The color of custom period when displayed on the calendar. Colors can be useful in order to classify custom periods. Default value is orange.(optional)"", ""start_morning"": ""Boolean - Does the custom period starts in the morning of the start_date? Default value is true. (This parameter can be used if you want to create half day custom periods.)(optional)"", ""end_afternoon"": ""Boolean - Does the custom period ends in the afternoon of the end_date? Default value is true. (This parameter can be used if you want to create half day custom periods.)(optional)""}",,,,,,,"import requests

url = ""https://working-days.p.rapidapi.com/1.3/define_custom_period""

querystring = {""profile_id"":""CB7EF3"",""description"":""Vacations to Bahamas"",""start_date"":""2013-01-01"",""end_date"":""2013-01-07"",""color"":""orange"",""start_morning"":""true"",""end_afternoon"":""true""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""working-days.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Working days,/1.3/delete_custom_period,Removing a previously defined custom period,https://rapidapi.com/joursouvres-api/api/working-days/playground/apiendpoint_3c142c5d-f106-4668-80fb-97e25b78d43e,"{""start_date"": ""String - The start date of the custom period (YYYY-MM-DD)(required)"", ""profile_id"": ""String - The ID of the calendar we are customizing.(required)"", ""end_date"": ""String - The end date of the custom period (YYYY-MM-DD) If omitted, end date will be equal to start date (one day custom period)(optional)""}",,,,,,,"import requests

url = ""https://working-days.p.rapidapi.com/1.3/delete_custom_period""

querystring = {""start_date"":""2013-01-01"",""profile_id"":""CB7EF3"",""end_date"":""2013-01-07""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""working-days.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Working days,/1.3/get_info_day,Get detailed information about a specific day.,https://rapidapi.com/joursouvres-api/api/working-days/playground/apiendpoint_31f74529-45e0-4c80-b7e9-e2bf6c74b902,"{""country_code"": ""String - The ISO country code (2 letters).See(required)"", ""date"": ""String - The date to analyze (YYYY-MM-DD)(required)"", ""configuration"": ""String - The name of the preset configuration to be used.\nSee(optional)"", ""profile_id"": ""String - If you want to query a customized calendar, provide its profile_id (6 caracters)(optional)"", ""holiday_language"": ""String - Specifies the language in which the names of public holidays are presented (ISO 639-1, 2 letters code).\nThis optional parameter is beneficial when querying a country with multiple official languages.\nIf this parameter is not specified, the default language used will be the primary official language of the queried country.(optional)""}",,,,,,,"import requests

url = ""https://working-days.p.rapidapi.com/1.3/get_info_day""

querystring = {""country_code"":""US"",""date"":""2013-12-31"",""configuration"":""Federal holidays""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""working-days.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Working days,/1.3/get_array_info_day,Get detailed period information as an array of days,https://rapidapi.com/joursouvres-api/api/working-days/playground/apiendpoint_0a0a9ed8-648d-4bfa-8b2d-5d06f09e0b80,"{""start_date"": ""Date (yyyy-mm-dd) - ...(required)"", ""end_date"": ""Date (yyyy-mm-dd) - ...(required)"", ""country_code"": ""String - ...(required)"", ""profile_id"": ""String - If you want to query a customized calendar, provide its profile_id (6 caracters)(optional)"", ""configuration"": ""String - The name or code of the preestablished configuration to use, typically, a regional calendar. See <a href=https://api.workingdays.org/api-countries>available countries & configurations(optional)"", ""holiday_language"": ""String - Specifies the language in which the names of public holidays are presented (ISO 639-1, 2 letters code).\nThis optional parameter is beneficial when querying a country with multiple official languages.\nRefer to the <a href=\\\\\\\""https://api.workingdays.org/api-countries\\\\\\\\\\\\\\\"">listof supported languages for more details.\nIf this parameter is not specified, the default language used will be the primary official language of the queried country.(optional)""}",,,,,,,"import requests

url = ""https://working-days.p.rapidapi.com/1.3/get_array_info_day""

querystring = {""start_date"":""2013-01-01"",""end_date"":""2013-01-31"",""country_code"":""US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""working-days.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
ExerciseDB,/exercises/bodyPart/{bodyPart},Return list of exercises based on body part,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_8ae18d70-75aa-4164-b4ef-0afde01402c2,"{""limit"": ""Number - ...(optional)"", ""offset"": ""Number - ...(optional)"", ""bodyPart"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises/bodyPart/back""

querystring = {""limit"":""10"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
ExerciseDB,/exercises/bodyPartList,Return list body parts,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_e2873f78-665e-4c93-aa58-0ff031db6261,No additional params,,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises/bodyPartList""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
ExerciseDB,/exercises/equipmentList,Return list of equipment,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_befba9c1-4917-4963-b04a-ac7c0f13baa2,No additional params,,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises/equipmentList""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
ExerciseDB,/exercises/targetList,Return list of target muscles,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_ee0b2470-f271-4a12-8a88-d50f7ecbd2cc,No additional params,,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises/targetList""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
ExerciseDB,/exercises/equipment/{type},Return list of exercises based on equipment type,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_9165f1c8-3066-40ed-8ca1-c66c9118db89,"{""limit"": ""Number - ...(optional)"", ""offset"": ""Number - ...(optional)"", ""type"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises/equipment/assisted""

querystring = {""limit"":""10"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
ExerciseDB,/exercises/target/{target},Return list of exercises by target muscle,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_05d7a0a9-d8db-43fc-9258-c6e9d5e102c4,"{""limit"": ""Number - ...(optional)"", ""offset"": ""Number - ...(optional)"", ""target"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises/target/abductors""

querystring = {""limit"":""10"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
ExerciseDB,/exercises/exercise/{id},Return an exercise by it's id,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_a4034d70-d2c1-4c90-afbe-b3c1abf70c28,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises/exercise/%7Bid%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
ExerciseDB,/exercises,Return list of all exercises,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_469311fa-a2c7-4541-9e6d-c7432e546f19,"{""limit"": ""Number - ...(optional)"", ""offset"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises""

querystring = {""limit"":""10"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
AirVisual,v2/auto-complete,"Find countries, cities, places by name",https://rapidapi.com/apidojo/api/airvisual1/playground/apiendpoint_34b3e248-8196-4331-804e-3dfebfe9bc31,"{""q"": ""String - Name of countries, cities, districts, places, etc...(required)"", ""x-user-lang"": ""String - ...(optional)"", ""x-user-timezone"": ""String - ...(optional)"", ""x-aqi-index"": ""String - One of the following : us|cn(optional)"", ""x-units-pressure"": ""String - One of the following : hg|mbar(optional)"", ""x-units-distance"": ""String - One of the following : miles|kilometer(optional)"", ""x-units-temperature"": ""String - One of the following : fahrenheit|celsius(optional)""}",,,,,,,"import requests

url = ""https://airvisual1.p.rapidapi.com/v2/auto-complete""

querystring = {""q"":""singapore"",""x-user-lang"":""en-US"",""x-user-timezone"":""Asia/Singapore"",""x-aqi-index"":""us"",""x-units-pressure"":""mbar"",""x-units-distance"":""kilometer"",""x-units-temperature"":""celsius""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""airvisual1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
AirVisual,cities/v2/get-information,Get information in specific city by its id,https://rapidapi.com/apidojo/api/airvisual1/playground/apiendpoint_22390c8c-e513-424c-a166-f6b9d6452a55,"{""id"": ""String - The value of id field (type is city) that returned in \u2026/v2/auto-complete endpoint(required)"", ""x-user-lang"": ""String - ...(optional)"", ""x-user-timezone"": ""String - ...(optional)"", ""x-aqi-index"": ""String - One of the following : us|cn(optional)"", ""x-units-pressure"": ""String - One of the following : hg|mbar(optional)"", ""x-units-distance"": ""String - One of the following : miles|kilometer(optional)"", ""x-units-temperature"": ""String - One of the following : fahrenheit|celsius(optional)""}",,,,,,,"import requests

url = ""https://airvisual1.p.rapidapi.com/cities/v2/get-information""

querystring = {""id"":""hW7vArorRd8cT9h6v"",""x-user-lang"":""en-US"",""x-user-timezone"":""Asia/Singapore"",""x-aqi-index"":""us"",""x-units-pressure"":""mbar"",""x-units-distance"":""kilometer"",""x-units-temperature"":""celsius""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""airvisual1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
AirVisual,cities/v2/get-measurements,Get measurements in specific city by its id,https://rapidapi.com/apidojo/api/airvisual1/playground/apiendpoint_2975d5fe-498a-4d21-a478-2fd819f586c3,"{""id"": ""String - The value of id field (type is city) that returned in \u2026/v2/auto-complete endpoint(required)"", ""x-user-lang"": ""String - ...(optional)"", ""x-user-timezone"": ""String - ...(optional)"", ""x-aqi-index"": ""String - One of the following : us|cn(optional)"", ""x-units-pressure"": ""String - One of the following : hg|mbar(optional)"", ""x-units-distance"": ""String - One of the following : miles|kilometer(optional)"", ""x-units-temperature"": ""String - One of the following : fahrenheit|celsius(optional)""}",,,,,,,"import requests

url = ""https://airvisual1.p.rapidapi.com/cities/v2/get-measurements""

querystring = {""id"":""hW7vArorRd8cT9h6v"",""x-user-lang"":""en-US"",""x-user-timezone"":""Asia/Singapore"",""x-aqi-index"":""us"",""x-units-pressure"":""mbar"",""x-units-distance"":""kilometer"",""x-units-temperature"":""celsius""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""airvisual1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
AirVisual,stations/v2/get-information,Get information at specific station by its id,https://rapidapi.com/apidojo/api/airvisual1/playground/apiendpoint_b4bf3616-e892-4725-bb0c-d0de995ecf59,"{""x-user-lang"": ""String - ...(optional)"", ""x-aqi-index"": ""String - One of the following : us|cn(optional)"", ""x-units-pressure"": ""String - One of the following : hg|mbar(optional)"", ""x-units-distance"": ""String - One of the following : miles|kilometer(optional)"", ""id"": ""String - The value of id field (type is station) that returned in \u2026/v2/auto-complete endpoint(required)"", ""x-user-timezone"": ""String - ...(optional)"", ""x-units-temperature"": ""String - One of the following : fahrenheit|celsius(optional)""}",,,,,,,"import requests

url = ""https://airvisual1.p.rapidapi.com/stations/v2/get-information""

querystring = {""x-user-lang"":""en-US"",""x-aqi-index"":""us"",""x-units-pressure"":""mbar"",""x-units-distance"":""kilometer"",""id"":""Jmy9oL75KSZnsqi6L"",""x-user-timezone"":""Asia/Singapore"",""x-units-temperature"":""celsius""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""airvisual1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
AirVisual,stations/v2/get-measurements,Get measurements at specific station by its id,https://rapidapi.com/apidojo/api/airvisual1/playground/apiendpoint_48681b36-e123-4c12-a4b2-8ca08db65fb9,"{""x-user-lang"": ""String - ...(optional)"", ""x-aqi-index"": ""String - One of the following : us|cn(optional)"", ""x-units-pressure"": ""String - One of the following : hg|mbar(optional)"", ""id"": ""String - The value of id field (type is station) that returned in \u2026/v2/auto-complete endpoint(required)"", ""x-units-distance"": ""String - One of the following : miles|kilometer(optional)"", ""x-user-timezone"": ""String - ...(optional)"", ""x-units-temperature"": ""String - One of the following : fahrenheit|celsius(optional)""}",,,,,,,"import requests

url = ""https://airvisual1.p.rapidapi.com/stations/v2/get-measurements""

querystring = {""x-user-lang"":""en-US"",""x-aqi-index"":""us"",""x-units-pressure"":""mbar"",""id"":""Jmy9oL75KSZnsqi6L"",""x-units-distance"":""kilometer"",""x-user-timezone"":""Asia/Singapore"",""x-units-temperature"":""celsius""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""airvisual1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
gym fit,searchExercises,Search exercises,https://rapidapi.com/BastienCarcat/api/gym-fit/playground/apiendpoint_13dc2e24-e0f1-4319-9f6d-beb322a4e9ae,"{""bodyPart"": ""String - Body part targeted by exercises(optional)"", ""number"": ""Number - Number of expected results (between 1 and 50)(optional)"", ""offset"": ""Number - Number of results to skip (between 0 and 300)(optional)"", ""query"": ""String - The partial or full exercise name(optional)""}",,,,,,,"import requests

url = ""https://gym-fit.p.rapidapi.com/v1/exercises/search""

querystring = {""number"":""50"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""gym-fit.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
gym fit,getExerciseById,Get exercise by id,https://rapidapi.com/BastienCarcat/api/gym-fit/playground/apiendpoint_707ee9ea-69f3-4394-9975-d0e33165414b,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://gym-fit.p.rapidapi.com/v1/exercises/c2b6fccf-2c2c-43e1-aca3-a3cb73caa78b""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""gym-fit.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
gym fit,getMuscleById,Get muscle by id,https://rapidapi.com/BastienCarcat/api/gym-fit/playground/apiendpoint_f137dc97-8df8-427d-9989-a49e6648fe5e,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://gym-fit.p.rapidapi.com/v1/muscles/%7Bid%7D""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""gym-fit.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
gym fit,searchMuscles,Search muscles,https://rapidapi.com/BastienCarcat/api/gym-fit/playground/apiendpoint_813ae7d1-2d55-46fd-8be4-6f84f4fcef8f,"{""bodyPart"": ""String - Body part containing the muscles(optional)"", ""number"": ""Number - Number of expected results (between 1 and 50)(optional)"", ""query"": ""String - The partial or full muscle name(optional)"", ""offset"": ""Number - Number of results to skip (between 0 and 30)(optional)""}",,,,,,,"import requests

url = ""https://gym-fit.p.rapidapi.com/v1/muscles/search""

querystring = {""number"":""50"",""offset"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""gym-fit.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
gym fit,getTdee,Calculate Total Daily Energy Expenditure (TDEE),https://rapidapi.com/BastienCarcat/api/gym-fit/playground/apiendpoint_cbd0f852-08d5-459e-9c85-b86339413b35,"{""activityLevel"": ""String - Activity level(required)"", ""gender"": ""String - Gender(required)"", ""age"": ""Number - Age(required)"", ""weight"": ""Number - Weight in kilograms(required)"", ""height"": ""Number - Height in centimeters(required)""}",,,,,,,"import requests

url = ""https://gym-fit.p.rapidapi.com/v1/calculator/tdee""

querystring = {""activityLevel"":""active"",""gender"":""male"",""age"":""25"",""weight"":""78"",""height"":""180""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""gym-fit.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
gym fit,getIbw,Calculate Ideal Body Weight (IBW),https://rapidapi.com/BastienCarcat/api/gym-fit/playground/apiendpoint_111e5215-95c0-48f8-9360-ec28480454a4,"{""height"": ""Number - Height in centimeters(required)""}",,,,,,,"import requests

url = ""https://gym-fit.p.rapidapi.com/v1/calculator/ibw""

querystring = {""height"":""180""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""gym-fit.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
gym fit,getBmi,Calculate Body Mass Index (BMI),https://rapidapi.com/BastienCarcat/api/gym-fit/playground/apiendpoint_041490df-05b3-4e10-8aab-93aa88c6617d,"{""weight"": ""Number - Weight in kilograms(required)"", ""height"": ""Number - Height in centimeters(required)""}",,,,,,,"import requests

url = ""https://gym-fit.p.rapidapi.com/v1/calculator/bmi""

querystring = {""weight"":""78"",""height"":""180""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""gym-fit.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
gym fit,getBmr,Calculate Basal Metabolic Rate (BMR),https://rapidapi.com/BastienCarcat/api/gym-fit/playground/apiendpoint_64ea0d0e-8e0d-4f1d-8625-844b2dc097a6,"{""weight"": ""Number - Weight in kilograms(required)"", ""height"": ""Number - Height in centimeters(required)"", ""gender"": ""String - Gender(required)"", ""age"": ""Number - Age(required)""}",,,,,,,"import requests

url = ""https://gym-fit.p.rapidapi.com/v1/calculator/bmr""

querystring = {""weight"":""78"",""height"":""180"",""gender"":""male"",""age"":""25""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""gym-fit.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Exercise DB Fitness Workout Gym,List all option for types,List all options,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_d3234a33-23cf-45cd-8aff-9034856d2e7d,"{""type"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/list/equipment""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Exercise DB Fitness Workout Gym,Mechanic Filter,Get all exercises by mechanic filter,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_42195490-b4ce-4a9c-8a8c-a94b4f0105b6,"{""filter"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/exercises/mechanic/isolation""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Exercise DB Fitness Workout Gym,Equipment Filter,Get all exercises by equipment filter,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_4aa817f1-a9a2-42e9-8928-7c9697638b0a,"{""filter"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/exercises/equipment/barbell""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Exercise DB Fitness Workout Gym,Muscle Filter,Get all exercises by muscle filter,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_33bd5489-bb8d-43f8-a465-e9a238d2b94d,"{""filter"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/exercises/muscle/chest""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Exercise DB Fitness Workout Gym,Level Filter,Get all exercises by level filter,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_7c4ba046-43d0-4d17-bd23-0d25f56c24d1,"{""filter"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/exercises/level/expert""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Exercise DB Fitness Workout Gym,Force Filter,Get all exercises by force filter,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_2f47384e-2155-418b-9f19-9784ef4ccd9b,"{""filter"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/exercises/force/push""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Exercise DB Fitness Workout Gym,Multiple Filter,Retrieve exercises using multiple filters,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_042cb911-16ef-4506-8990-8bd8c6c89f36,"{""mechanic"": ""String - ...(optional)"", ""muscle"": ""String - ...(optional)"", ""equipment"": ""String - ...(optional)"", ""level"": ""String - ...(optional)"", ""force"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/exercises/filter""

querystring = {""mechanic"":""isolation"",""muscle"":""abdominals"",""equipment"":""barbell"",""level"":""expert"",""force"":""pull""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Exercise DB Fitness Workout Gym,Exercise by ID,Get all the info about an exercise based on its ID.,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_cdc0e70c-998f-4a82-b43e-09951a74ef82,"{""id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/exercise/90_90_Hamstring""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Exercise DB Fitness Workout Gym,Exercises,This endpoint provides a list of exercise IDs for all available exercises.,https://rapidapi.com/Alejandro99aru/api/exercise-db-fitness-workout-gym/playground/apiendpoint_ac7cd7c1-f2e6-4c32-9298-809f1f9937db,No additional params,,,,,,,"import requests

url = ""https://exercise-db-fitness-workout-gym.p.rapidapi.com/exercises""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercise-db-fitness-workout-gym.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Currency Converter,Supported Currencies,get a list of currencies we support,https://rapidapi.com/solutionsbynotnull/api/currency-converter18/playground/apiendpoint_6660be9f-ceaf-49da-9557-4708c5a2ab62,No additional params,,,,,,,"import requests

url = ""https://currency-converter18.p.rapidapi.com/api/v1/supportedCurrencies""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""currency-converter18.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Currency Converter,Convert,Convert from one currency toanother,https://rapidapi.com/solutionsbynotnull/api/currency-converter18/playground/apiendpoint_7eed9827-4502-4dd5-8adc-16fa3a543711,"{""from"": ""Enum - ...(required)"", ""to"": ""Enum - ...(required)"", ""amount"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://currency-converter18.p.rapidapi.com/api/v1/convert""

querystring = {""from"":""EUR"",""to"":""KWD"",""amount"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""currency-converter18.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Forex APISED,/available, ,https://rapidapi.com/apised-apised-default/api/forex-apised1/playground/apiendpoint_659d405b-887b-4b71-9013-bf7312cd3500,"{""search"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://forex-apised1.p.rapidapi.com/available""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""forex-apised1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Forex APISED,/convert, ,https://rapidapi.com/apised-apised-default/api/forex-apised1/playground/apiendpoint_bf72b563-49e7-4d12-b4d6-7162f5b69c98,"{""amount"": ""Number - Amount to convert input(required)"", ""from"": ""String - From currency input  - Should be one of the following values: USD,ALL,DZD,AOA,ARS,AMD,AWG,AUD,AZN,BSD,BHD,BDT,BBD,BYN,BZD,BMD,BTN,BOB,BAM,BWP,BRL,BND,BGN,BIF,KHR,CAD,CVE,KYD,CLP,CNY,COP,XOF,XAF,KMF,XPF,CDF,CRC,HRK,CUP,CZK,DKK,DJF,DOP,XCD,EGP,SVC,ETB,EUR,FJD,GMD,GEL,GHS,GTQ,GNF,GYD,HTG,HNL,HKD,HUF,ISK,INR,IDR,IRR,IQD,ILS,JMD,JPY,JOD,KZT,KES,KRW,KWD,KGS,LAK,LBP,LSL,LRD,LYD,MOP,MKD,MGA,MWK,MYR,MVR,MUR,MXN,MDL,MAD,MZN,MMK,NAD,NPR,ANG,NZD,NIO,NGN,NOK,OMR,PKR,PAB,PGK,PYG,PEN,PHP,PLN,QAR,RON,RUB,RWF,SAR,RSD,SCR,SLL,SGD,SBD,SOS,ZAR,LKR,SDG,SRD,SZL,SEK,CHF,TWD,TJS,TZS,THB,TOP,TTD,TND,TRY,TMT,UGX,UAH,AED,GBP,UYU,UZS,VND,YER,ZMW,AFN,BCH,BTC,CLF,CNH,ETH,LTC,BYR,CUC,EEK,ERN,FKP,GGP,GIP,IMP,JEP,LTL,MTL,SHP,STD,XCD(required)"", ""to"": ""String - To currency input  - Should be one of the following values: USD,ALL,DZD,AOA,ARS,AMD,AWG,AUD,AZN,BSD,BHD,BDT,BBD,BYN,BZD,BMD,BTN,BOB,BAM,BWP,BRL,BND,BGN,BIF,KHR,CAD,CVE,KYD,CLP,CNY,COP,XOF,XAF,KMF,XPF,CDF,CRC,HRK,CUP,CZK,DKK,DJF,DOP,XCD,EGP,SVC,ETB,EUR,FJD,GMD,GEL,GHS,GTQ,GNF,GYD,HTG,HNL,HKD,HUF,ISK,INR,IDR,IRR,IQD,ILS,JMD,JPY,JOD,KZT,KES,KRW,KWD,KGS,LAK,LBP,LSL,LRD,LYD,MOP,MKD,MGA,MWK,MYR,MVR,MUR,MXN,MDL,MAD,MZN,MMK,NAD,NPR,ANG,NZD,NIO,NGN,NOK,OMR,PKR,PAB,PGK,PYG,PEN,PHP,PLN,QAR,RON,RUB,RWF,SAR,RSD,SCR,SLL,SGD,SBD,SOS,ZAR,LKR,SDG,SRD,SZL,SEK,CHF,TWD,TJS,TZS,THB,TOP,TTD,TND,TRY,TMT,UGX,UAH,AED,GBP,UYU,UZS,VND,YER,ZMW,AFN,BCH,BTC,CLF,CNH,ETH,LTC,BYR,CUC,EEK,ERN,FKP,GGP,GIP,IMP,JEP,LTL,MTL,SHP,STD,XCD(required)""}",,,,,,,"import requests

url = ""https://forex-apised1.p.rapidapi.com/convert""

querystring = {""amount"":""2"",""from"":""EUR"",""to"":""USD""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""forex-apised1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Forex APISED,/multi-convert, ,https://rapidapi.com/apised-apised-default/api/forex-apised1/playground/apiendpoint_9601807b-447d-486f-a6c0-f0a233b0507a,"{""from"": ""String - From currency input  - Should be one of the following values: USD,ALL,DZD,AOA,ARS,AMD,AWG,AUD,AZN,BSD,BHD,BDT,BBD,BYN,BZD,BMD,BTN,BOB,BAM,BWP,BRL,BND,BGN,BIF,KHR,CAD,CVE,KYD,CLP,CNY,COP,XOF,XAF,KMF,XPF,CDF,CRC,HRK,CUP,CZK,DKK,DJF,DOP,XCD,EGP,SVC,ETB,EUR,FJD,GMD,GEL,GHS,GTQ,GNF,GYD,HTG,HNL,HKD,HUF,ISK,INR,IDR,IRR,IQD,ILS,JMD,JPY,JOD,KZT,KES,KRW,KWD,KGS,LAK,LBP,LSL,LRD,LYD,MOP,MKD,MGA,MWK,MYR,MVR,MUR,MXN,MDL,MAD,MZN,MMK,NAD,NPR,ANG,NZD,NIO,NGN,NOK,OMR,PKR,PAB,PGK,PYG,PEN,PHP,PLN,QAR,RON,RUB,RWF,SAR,RSD,SCR,SLL,SGD,SBD,SOS,ZAR,LKR,SDG,SRD,SZL,SEK,CHF,TWD,TJS,TZS,THB,TOP,TTD,TND,TRY,TMT,UGX,UAH,AED,GBP,UYU,UZS,VND,YER,ZMW,AFN,BCH,BTC,CLF,CNH,ETH,LTC,BYR,CUC,EEK,ERN,FKP,GGP,GIP,IMP,JEP,LTL,MTL,SHP,STD,XCD(required)"", ""amount"": ""Number - Amount to convert input(required)"", ""to"": ""String - To currency input  - Should be a comma seperated list using the following values: ALL_CURRENCIES,USD,ALL,DZD,AOA,ARS,AMD,AWG,AUD,AZN,BSD,BHD,BDT,BBD,BYN,BZD,BMD,BTN,BOB,BAM,BWP,BRL,BND,BGN,BIF,KHR,CAD,CVE,KYD,CLP,CNY,COP,XOF,XAF,KMF,XPF,CDF,CRC,HRK,CUP,CZK,DKK,DJF,DOP,XCD,EGP,SVC,ETB,EUR,FJD,GMD,GEL,GHS,GTQ,GNF,GYD,HTG,HNL,HKD,HUF,ISK,INR,IDR,IRR,IQD,ILS,JMD,JPY,JOD,KZT,KES,KRW,KWD,KGS,LAK,LBP,LSL,LRD,LYD,MOP,MKD,MGA,MWK,MYR,MVR,MUR,MXN,MDL,MAD,MZN,MMK,NAD,NPR,ANG,NZD,NIO,NGN,NOK,OMR,PKR,PAB,PGK,PYG,PEN,PHP,PLN,QAR,RON,RUB,RWF,SAR,RSD,SCR,SLL,SGD,SBD,SOS,ZAR,LKR,SDG,SRD,SZL,SEK,CHF,TWD,TJS,TZS,THB,TOP,TTD,TND,TRY,TMT,UGX,UAH,AED,GBP,UYU,UZS,VND,YER,ZMW,AFN,BCH,BTC,CLF,CNH,ETH,LTC,BYR,CUC,EEK,ERN,FKP,GGP,GIP,IMP,JEP,LTL,MTL,SHP,STD,XCD(required)""}",,,,,,,"import requests

url = ""https://forex-apised1.p.rapidapi.com/multi-convert""

querystring = {""from"":""EUR"",""amount"":""2"",""to"":""GBP,USD,EUR""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""forex-apised1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Forex APISED,/live-rates, ,https://rapidapi.com/apised-apised-default/api/forex-apised1/playground/apiendpoint_bf77b6d6-410e-45dd-9149-7c8917422964,"{""base_currency_code"": ""String - From currency input  - Should be one of the following values: USD,ALL,DZD,AOA,ARS,AMD,AWG,AUD,AZN,BSD,BHD,BDT,BBD,BYN,BZD,BMD,BTN,BOB,BAM,BWP,BRL,BND,BGN,BIF,KHR,CAD,CVE,KYD,CLP,CNY,COP,XOF,XAF,KMF,XPF,CDF,CRC,HRK,CUP,CZK,DKK,DJF,DOP,XCD,EGP,SVC,ETB,EUR,FJD,GMD,GEL,GHS,GTQ,GNF,GYD,HTG,HNL,HKD,HUF,ISK,INR,IDR,IRR,IQD,ILS,JMD,JPY,JOD,KZT,KES,KRW,KWD,KGS,LAK,LBP,LSL,LRD,LYD,MOP,MKD,MGA,MWK,MYR,MVR,MUR,MXN,MDL,MAD,MZN,MMK,NAD,NPR,ANG,NZD,NIO,NGN,NOK,OMR,PKR,PAB,PGK,PYG,PEN,PHP,PLN,QAR,RON,RUB,RWF,SAR,RSD,SCR,SLL,SGD,SBD,SOS,ZAR,LKR,SDG,SRD,SZL,SEK,CHF,TWD,TJS,TZS,THB,TOP,TTD,TND,TRY,TMT,UGX,UAH,AED,GBP,UYU,UZS,VND,YER,ZMW,AFN,BCH,BTC,CLF,CNH,ETH,LTC,BYR,CUC,EEK,ERN,FKP,GGP,GIP,IMP,JEP,LTL,MTL,SHP,STD,XCD(required)"", ""currency_codes"": ""String - To currency input  - Should be a comma seperated list using the following values: ALL_CURRENCIES,USD,ALL,DZD,AOA,ARS,AMD,AWG,AUD,AZN,BSD,BHD,BDT,BBD,BYN,BZD,BMD,BTN,BOB,BAM,BWP,BRL,BND,BGN,BIF,KHR,CAD,CVE,KYD,CLP,CNY,COP,XOF,XAF,KMF,XPF,CDF,CRC,HRK,CUP,CZK,DKK,DJF,DOP,XCD,EGP,SVC,ETB,EUR,FJD,GMD,GEL,GHS,GTQ,GNF,GYD,HTG,HNL,HKD,HUF,ISK,INR,IDR,IRR,IQD,ILS,JMD,JPY,JOD,KZT,KES,KRW,KWD,KGS,LAK,LBP,LSL,LRD,LYD,MOP,MKD,MGA,MWK,MYR,MVR,MUR,MXN,MDL,MAD,MZN,MMK,NAD,NPR,ANG,NZD,NIO,NGN,NOK,OMR,PKR,PAB,PGK,PYG,PEN,PHP,PLN,QAR,RON,RUB,RWF,SAR,RSD,SCR,SLL,SGD,SBD,SOS,ZAR,LKR,SDG,SRD,SZL,SEK,CHF,TWD,TJS,TZS,THB,TOP,TTD,TND,TRY,TMT,UGX,UAH,AED,GBP,UYU,UZS,VND,YER,ZMW,AFN,BCH,BTC,CLF,CNH,ETH,LTC,BYR,CUC,EEK,ERN,FKP,GGP,GIP,IMP,JEP,LTL,MTL,SHP,STD,XCD(required)""}",,,,,,,"import requests

url = ""https://forex-apised1.p.rapidapi.com/live-rates""

querystring = {""base_currency_code"":""USD"",""currency_codes"":""GBP,USD,EUR""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""forex-apised1.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Commodities APISED,/v1/supported,Get Supported Commodities and Currencies,https://rapidapi.com/apised-apised-default/api/commodities-apised/playground/apiendpoint_840153c6-2433-44db-b849-31d7a406f67c,No additional params,,,,,,,"import requests

url = ""https://commodities-apised.p.rapidapi.com/v1/supported""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""commodities-apised.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Commodities APISED,/v1/latest,"This endpoint makes an HTTP GET request to retrieve the latest commodity rates for various symbols in the specified currency. The request includes the symbols of the commodities and the base currency. The response contains the success status, any errors, the base currency, and the rates for each commodity symbol in the specified base currency.",https://rapidapi.com/apised-apised-default/api/commodities-apised/playground/apiendpoint_6c5f9572-101c-46ab-a296-e65cc0e6632e,"{""base"": ""String - desired currency for pricing information(optional)"", ""symbols"": ""String - Comma seperate values from supported symbols list.(optional)""}",,,,,,,"import requests

url = ""https://commodities-apised.p.rapidapi.com/v1/latest""

querystring = {""base"":""USD"",""symbols"":""COCOA,COFFEE,CORN,COTTON,GASOLINE,LUMBER,NATURALGAS,OATS,OIL,ORANGEJUICE,SOYBEAN,SUGAR,WHEAT""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""commodities-apised.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Commodities APISED,/v1/market-data,"This endpoint makes an HTTP GET request to retrieve market data for various commodities. The request includes a list of symbols and the base currency. The response contains the success status, any errors, the base currency, and the market data for each symbol including open, high, low, previous, and current values.",https://rapidapi.com/apised-apised-default/api/commodities-apised/playground/apiendpoint_c7e1a178-1ff0-4265-89fb-58fc6e866874,"{""symbols"": ""String - Comma seperate values from supported symbols list.(optional)"", ""base"": ""String - desired currency for pricing information(optional)""}",,,,,,,"import requests

url = ""https://commodities-apised.p.rapidapi.com/v1/market-data""

querystring = {""symbols"":""COCOA,COFFEE,CORN,COTTON,GASOLINE,LUMBER,NATURALGAS,OATS,OIL,ORANGEJUICE,SOYBEAN,SUGAR,WHEAT"",""base"":""USD""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""commodities-apised.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
CurrencyAPI net,Convert,Convert a custom amount value from one currency to another,https://rapidapi.com/currencyapinet/api/currencyapi-net/playground/apiendpoint_a8f3d445-a65e-41b7-acf3-65f5484f07d3,"{""from"": ""String - Currency code of the currency you want to convert from. Eg, GBP if you want to convert GBP to USD(required)"", ""to"": ""String - Currency code of the currency you want to convert to. Eg, USD if you want to convert GBP to USD(required)"", ""output"": ""String - The output of the response. Either JSON or XML(optional)"", ""amount"": ""String - The value you want to convert. Eg 10.99 or 15(required)""}",,,,,,,"import requests

url = ""https://currencyapi-net.p.rapidapi.com/convert""

querystring = {""output"":""JSON""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""currencyapi-net.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
CurrencyAPI net,Currencies,Gets list of currencies we support,https://rapidapi.com/currencyapinet/api/currencyapi-net/playground/apiendpoint_d96585b0-f5ec-4930-9731-42417576d3ea,"{""output"": ""String - The output of the response. Either JSON or XML(optional)""}",,,,,,,"import requests

url = ""https://currencyapi-net.p.rapidapi.com/currencies""

querystring = {""output"":""JSON""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""currencyapi-net.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
CurrencyAPI net,Timeframe,Display a currency conversion's historical rates within a given timeframe,https://rapidapi.com/currencyapinet/api/currencyapi-net/playground/apiendpoint_ad93b17a-ff1f-407a-98bf-5ec2aacf51cd,"{""end_date"": ""Date (yyyy-mm-dd) - Display the start date you wish to get the historical data from. Eg 2010-12-29(required)"", ""start_date"": ""Date (yyyy-mm-dd) - Display the start date you wish to get the historical data from. Eg 2010-12-25(required)"", ""output"": ""String - The output of the response. Either JSON or XML(optional)"", ""base"": ""String - The currency code you want to get the historical data of. Eg, USD(required)""}",,,,,,,"import requests

url = ""https://currencyapi-net.p.rapidapi.com/timeframe""

querystring = {""output"":""JSON"",""base"":""USD""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""currencyapi-net.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
CurrencyAPI net,Rates,Get live currency conversion rates of a given currency,https://rapidapi.com/currencyapinet/api/currencyapi-net/playground/apiendpoint_3de59f0d-25ea-4b50-bc3c-a282a0bc980b,"{""output"": ""String - The output of the response. Either JSON or XML(optional)"", ""base"": ""String - Change the base currency. Eg GBP or BTC(optional)""}",,,,,,,"import requests

url = ""https://currencyapi-net.p.rapidapi.com/rates""

querystring = {""output"":""JSON"",""base"":""USD""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""currencyapi-net.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
CurrencyAPI net,History,Display the currency conversions historical rates for a particular day,https://rapidapi.com/currencyapinet/api/currencyapi-net/playground/apiendpoint_52703c56-3ffc-42eb-858d-b95e2748c62c,"{""date"": ""Date (yyyy-mm-dd) - Display the single date you wish to get the historical data from. Eg 2010-12-25(required)"", ""output"": ""String - The output of the response. Either JSON or XML(optional)"", ""base"": ""String - The currency code you wish to get the historical rates of. Eg, USD(required)""}",,,,,,,"import requests

url = ""https://currencyapi-net.p.rapidapi.com/history""

querystring = {""output"":""JSON"",""base"":""USD""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""currencyapi-net.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Auto Parts Catalog,Get all Languages,"#Get all languages
app_api_language_list",https://rapidapi.com/makingdatameaningful/api/auto-parts-catalog/playground/apiendpoint_25f977e9-1fc4-47cc-9656-47f40081ce48,No additional params,,,,,,,"import requests

url = ""https://auto-parts-catalog.p.rapidapi.com/languages/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""auto-parts-catalog.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Auto Parts Catalog,Get All Countries,"#Get All Countries
api_list_countries",https://rapidapi.com/makingdatameaningful/api/auto-parts-catalog/playground/apiendpoint_cca715ee-5f8e-4c21-8715-e313c56c3443,No additional params,,,,,,,"import requests

url = ""https://auto-parts-catalog.p.rapidapi.com/countries/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""auto-parts-catalog.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Auto Parts Catalog,Get all Countries by Language ID,"#Get all Countries by language id
api_list_countries_by_lang_id",https://rapidapi.com/makingdatameaningful/api/auto-parts-catalog/playground/apiendpoint_f5ca80fe-4dd4-496b-809f-1ec7a27bc54c,"{""langId"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://auto-parts-catalog.p.rapidapi.com/countries/list-countries-by-lang-id/4""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""auto-parts-catalog.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Auto Parts Catalog,Get Language details by Language ID,"#Get language details by lang Id
app_api_language_getlanguagebyid",https://rapidapi.com/makingdatameaningful/api/auto-parts-catalog/playground/apiendpoint_dde31598-49fa-436d-a217-383702189f1c,"{""langId"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://auto-parts-catalog.p.rapidapi.com/languages/get-language/lang-id/4""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""auto-parts-catalog.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Auto Parts Catalog,Get Country Details by Language ID and Country ID,"Get Country Details by langId and countryFilterId
app_api_countries_findcountrybyidandlangid",https://rapidapi.com/makingdatameaningful/api/auto-parts-catalog/playground/apiendpoint_fb6512f3-8393-47f4-b477-55b6fe93332e,"{""langId"": ""String - ...(required)"", ""countryFilterId"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://auto-parts-catalog.p.rapidapi.com/countries/get-country/lang-id/4/country-filter-id/62""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""auto-parts-catalog.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Auto Parts Catalog,List Vehicles Types,"#List Vehicles Types
app_api_types_listvehiclestype",https://rapidapi.com/makingdatameaningful/api/auto-parts-catalog/playground/apiendpoint_dca8a602-4b11-452a-b283-e19af5a9431f,No additional params,,,,,,,"import requests

url = ""https://auto-parts-catalog.p.rapidapi.com/types/list-vehicles-type""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""auto-parts-catalog.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Auto Parts Catalog,Get Vehicle Type Detailed information,"Get Vehicle Type details

vehicleId = 19942 = KIA CEE'D Hatchback (ED)
manufacturerId = 184 = Kia
langId = 4 = English
countryFilterId =62 = Germany
typeId = 1 = Automobile

app_api_types_vehicletypedetails",https://rapidapi.com/makingdatameaningful/api/auto-parts-catalog/playground/apiendpoint_e369ecf2-2b09-4025-8ddc-a1e8b59bbab8,"{""vehicleId"": ""String - ...(required)"", ""manufacturerId"": ""String - ...(required)"", ""langId"": ""String - ...(required)"", ""countryFilterId"": ""String - ...(required)"", ""typeId"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://auto-parts-catalog.p.rapidapi.com/types/vehicle-type-details/19942/manufacturer-id/184/lang-id/4/country-filter-id/62/type-id/1""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""auto-parts-catalog.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Auto Parts Catalog,Get all Vehicle Engine Types,"#Get all types

modelSeriesId = 5626 = KIA CEE'D Hatchback (ED)
manufacturerId = 184 = Kia
langId = 4 = English
countryFilterId =62 = Germany
typeId = 1 = Automobile

app_api_types_listvehiclemodeltypes",https://rapidapi.com/makingdatameaningful/api/auto-parts-catalog/playground/apiendpoint_79119f80-c293-477c-a7fe-546218e47cca,"{""modelSeriesId"": ""String - ...(required)"", ""manufacturerId"": ""String - ...(required)"", ""langId"": ""String - ...(required)"", ""countryFilterId"": ""String - ...(required)"", ""typeId"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://auto-parts-catalog.p.rapidapi.com/types/list-vehicles-types/5626/manufacturer-id/184/lang-id/4/country-filter-id/62/type-id/1""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""auto-parts-catalog.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Yarn Colorways,Find Yarn by Color,Get best-matching yarn colorways for a specified color.,https://rapidapi.com/temperature-blanket-temperature-blanket-default/api/yarn-colorways/playground/apiendpoint_af65dda6-cf32-4dd9-a3d6-3ed7ce4a9dd5,"{""brand"": ""String - The brand Id or brand Name to filter the results by. Text case is ignored.(optional)"", ""yarn"": ""String - The yarn Id or yarn Name to filter the results by. Text case is ignored.(optional)"", ""weight"": ""String - ...(optional)"", ""limit"": ""Number - The maximum number of yarn colorways to include in the results. Default is 50. Maximum is 500.(optional)"", ""offset"": ""Number - Specify the starting index of the data to return. Default is 0.(optional)"", ""threshold"": ""Number - The minimum percentage amount the yarn colorway must match the supplied color. Default is 75.(optional)"", ""color"": ""String - Any string that can be correctly parsed as a color bychroma.js.(required)""}",,,,,,,"import requests

url = ""https://yarn-colorways.p.rapidapi.com/v1/match/665e3f""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yarn-colorways.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Yarn Colorways,Colorways,Get yarn colorways.,https://rapidapi.com/temperature-blanket-temperature-blanket-default/api/yarn-colorways/playground/apiendpoint_ed996bda-8050-49bd-a6b2-12bc4956f71e,"{""brand"": ""String - The brand Name or Id to filter the results by. Text case is ignored.(optional)"", ""yarn"": ""String - The yarn Name or Id to filter the results by. Text case is ignored.(optional)"", ""weight"": ""String - ...(optional)"", ""color"": ""String - Any string that can be correctly parsed as a color bychroma.js(optional)"", ""name"": ""String - The Name of the yarn colorway to filter the results by. Text case is ignored.(optional)"", ""limit"": ""Number - The maximum number of yarn colorways to include in the results. Default is 50. Maximum is 500.(optional)"", ""offset"": ""Number - Specify the starting index of the data to return. Default is 0.(optional)"", ""sortBy"": ""String - Default isdefault. Accepted values arename,lightness, anddefault.(optional)"", ""direction"": ""String - Default isASC(ascending). Accepted values areASCandDESC(descending).(optional)""}",,,,,,,"import requests

url = ""https://yarn-colorways.p.rapidapi.com/v1/colorways""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yarn-colorways.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Yarn Colorways,Brands,"Get all brand IDs and names, useful to filter /match or /colorway results.",https://rapidapi.com/temperature-blanket-temperature-blanket-default/api/yarn-colorways/playground/apiendpoint_b6928a28-6e9f-446d-8d7f-f6456b4704ff,No additional params,,,,,,,"import requests

url = ""https://yarn-colorways.p.rapidapi.com/v1/brands""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yarn-colorways.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Yarn Colorways,Yarns,"Get all yarn IDs and names, useful to filter /match or /colorway results.",https://rapidapi.com/temperature-blanket-temperature-blanket-default/api/yarn-colorways/playground/apiendpoint_e52134dc-599d-492e-a243-1997afc9fbd9,"{""brand"": ""String - The brand ID or name, or a comma-sepparated list of brand IDs or brand names to filter the results by.(optional)""}",,,,,,,"import requests

url = ""https://yarn-colorways.p.rapidapi.com/v1/yarns""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yarn-colorways.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Yarn Colorways,Yarn Weights,"Get all yarn weight IDs and names, useful to filter /match or /colorway results.",https://rapidapi.com/temperature-blanket-temperature-blanket-default/api/yarn-colorways/playground/apiendpoint_ae4d80e6-0a5d-4866-99a2-85e3f6118c7f,No additional params,,,,,,,"import requests

url = ""https://yarn-colorways.p.rapidapi.com/v1/weights""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""yarn-colorways.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
World History Timeline,Historic Event By year,Give an year in the query and it returns all the available events from that year,https://rapidapi.com/raajreact/api/world-history-timeline/playground/apiendpoint_a3f26ef0-4717-440e-8938-35d4421454e4,"{""year"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://world-history-timeline.p.rapidapi.com/History-By-Year""

querystring = {""year"":""400""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""world-history-timeline.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
World History Timeline,Random Historic Event,Returns a Random World Historic Event with the year and the event,https://rapidapi.com/raajreact/api/world-history-timeline/playground/apiendpoint_217c96e7-7ef1-4f47-b158-26a4695f0042,No additional params,,,,,,,"import requests

url = ""https://world-history-timeline.p.rapidapi.com/History""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""world-history-timeline.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Google Search,Web Search,This endpoint is used for web searches,https://rapidapi.com/neoscrap-net/api/google-search72/playground/apiendpoint_e7582fc8-c87f-4b32-9134-79bc0e570dd9,"{""q"": ""String - Search query(required)"", ""lr"": ""String - Parameters are used to display search results for a specific language and region.\nexample: en-US, en-GB, id-ID, and many more(optional)"", ""num"": ""Number - Number of search results to return.\nValid values are integers between 1 and 100, inclusive(optional)""}",,,,,,,"import requests

url = ""https://google-search72.p.rapidapi.com/search""

querystring = {""q"":""word cup"",""lr"":""en-US"",""num"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""google-search72.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Google Search,Image Search,This endpoint is used for image searches,https://rapidapi.com/neoscrap-net/api/google-search72/playground/apiendpoint_dfeba922-7c02-4378-b3a8-8ede2bf1c4c8,No additional params,,,,,,,"import requests

url = ""https://google-search72.p.rapidapi.com/imagesearch""

querystring = {""q"":""Word Cup"",""gl"":""us"",""lr"":""lang_en"",""num"":""10"",""start"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""google-search72.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Tripadvisor Scraper,Search Hotels,Search Hotels,https://rapidapi.com/Chetan11dev/api/tripadvisor-scraper/playground/apiendpoint_1b4d2f93-d9c6-4614-adff-bd751d17ff59,No additional params,,,,,,,"import requests

url = ""https://tripadvisor-scraper.p.rapidapi.com/hotels/search""

querystring = {""query"":""new york""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tripadvisor-scraper.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Tripadvisor Scraper,List Hotels by Search Query,List Hotels by Search Query,https://rapidapi.com/Chetan11dev/api/tripadvisor-scraper/playground/apiendpoint_664af9e6-9a74-4cef-bcc0-06597ab4b1c4,"{""query"": ""String - ...(required)"", ""page"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://tripadvisor-scraper.p.rapidapi.com/hotels/list""

querystring = {""query"":""new york"",""page"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tripadvisor-scraper.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Tripadvisor Scraper,List Hotels by ID,List Hotels by ID,https://rapidapi.com/Chetan11dev/api/tripadvisor-scraper/playground/apiendpoint_8ae48df9-99ca-4253-8a94-f7ea184ece70,"{""query"": ""Number - ...(required)"", ""page"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://tripadvisor-scraper.p.rapidapi.com/hotels/list""

querystring = {""query"":""60763"",""page"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tripadvisor-scraper.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Tripadvisor Scraper,Get Hotel Detail,Get Hotel Detail,https://rapidapi.com/Chetan11dev/api/tripadvisor-scraper/playground/apiendpoint_e747b692-f705-424d-96b3-f9bc5d42434d,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://tripadvisor-scraper.p.rapidapi.com/hotels/detail""

querystring = {""id"":""10131859""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tripadvisor-scraper.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Tripadvisor Scraper,Search Restaurants,Search Restaurants,https://rapidapi.com/Chetan11dev/api/tripadvisor-scraper/playground/apiendpoint_878e2ec5-95e7-4701-93e8-ef765f61afe5,"{""query"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://tripadvisor-scraper.p.rapidapi.com/restaurants/search""

querystring = {""query"":""new york""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tripadvisor-scraper.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Tripadvisor Scraper,List Restaurants by Search Query,List Restaurants by Search Query,https://rapidapi.com/Chetan11dev/api/tripadvisor-scraper/playground/apiendpoint_8ac0cf42-a58e-428e-b6a7-95ece58f3645,"{""query"": ""String - ...(required)"", ""page"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://tripadvisor-scraper.p.rapidapi.com/restaurants/list""

querystring = {""query"":""new york"",""page"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tripadvisor-scraper.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Tripadvisor Scraper,List Restaurants by ID,List Restaurants by ID,https://rapidapi.com/Chetan11dev/api/tripadvisor-scraper/playground/apiendpoint_915ed1d1-66b8-4c82-8df4-6f5f7856bebb,"{""query"": ""Number - ...(required)"", ""page"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://tripadvisor-scraper.p.rapidapi.com/restaurants/list""

querystring = {""query"":""60763"",""page"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tripadvisor-scraper.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Tripadvisor Scraper,Get Restaurant Detail,Get Restaurant Detail,https://rapidapi.com/Chetan11dev/api/tripadvisor-scraper/playground/apiendpoint_ab982d45-622d-46d2-a6e0-63f29529f7dc,"{""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://tripadvisor-scraper.p.rapidapi.com/restaurants/detail""

querystring = {""id"":""12425739""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""tripadvisor-scraper.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Forward and Reverse Geocoding,ForwardGeocoding,Turn an address into latitude and longitude (e.g. to display on a map) by schematic input.,https://rapidapi.com/GeocodeSupport/api/forward-reverse-geocoding/playground/apiendpoint_75751c3c-7f39-4403-ac0b-d56c5a77da9b,"{""format"": ""Enum - ...(optional)"", ""street"": ""String - ...(optional)"", ""city"": ""String - ...(optional)"", ""county"": ""String - ...(optional)"", ""state"": ""String - ...(optional)"", ""postalcode"": ""String - ...(optional)"", ""country"": ""String - ...(optional)"", ""addressdetails"": ""Enum - ...(optional)"", ""accept-language"": ""String - Set the query and response language. Accepts two letter language codes (e.g. 'en' or 'es') or a combination of language and region code, e.g. 'en-GB' or 'es-AR'. Default: 'en'.(optional)"", ""namedetails"": ""Enum - namedetails = [0,1]Set this to 1 to receive different spellings in different languages of a returned place.\nDefault is 0.(optional)"", ""countrycodes"": ""String - Two letter country code to restrict area to search in. Use the country code as defined in ISO 3166-1 alpha2.(optional)"", ""limit"": ""Enum - ...(optional)"", ""viewbox"": ""String - Format: x1,y1,x2,y2 - restrict search area to a bounded box defined by two coordinates (x is longitude, y is latitude). The two coordinates have to span a box to work.(optional)"", ""bounded"": ""Enum - Used in conjunction with viewbox to search only in an area.(optional)"", ""json_callback"": ""String - Use this with format=json to define a callback function for jsonp.(optional)"", ""polygon_text"": ""Enum - ...(optional)"", ""polygon_kml"": ""Enum - ...(optional)"", ""polygon_svg"": ""Enum - ...(optional)"", ""polygon_geojson"": ""Enum - ...(optional)"", ""polygon_threshold"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://forward-reverse-geocoding.p.rapidapi.com/v1/forward""

querystring = {""format"":""json"",""street"":""34 West 13th Street"",""city"":""New York City"",""state"":""NY"",""postalcode"":""10011"",""country"":""USA"",""addressdetails"":""1"",""accept-language"":""en"",""namedetails"":""0"",""limit"":""1"",""bounded"":""0"",""polygon_text"":""0"",""polygon_kml"":""0"",""polygon_svg"":""0"",""polygon_geojson"":""0"",""polygon_threshold"":""0.0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""forward-reverse-geocoding.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Forward and Reverse Geocoding,ReverseGeocoding,Find address or place by latitude and longitude,https://rapidapi.com/GeocodeSupport/api/forward-reverse-geocoding/playground/apiendpoint_c22931bd-187b-4a01-ad7d-42b9dea2d23f,"{""lat"": ""Number - ...(required)"", ""lon"": ""Number - ...(required)"", ""zoom"": ""Enum - ...(optional)"", ""addressdetails"": ""Enum - ...(optional)"", ""namedetails"": ""Enum - ...(optional)"", ""accept-language"": ""String - Set the response language. Accepts two letter language codes (e.g. 'en' or 'es') or a combination of language and region code, e.g. 'en-GB' or 'es-AR'. Default: 'en'.(optional)"", ""format"": ""Enum - ...(optional)"", ""polygon_text"": ""Enum - ...(optional)"", ""polygon_kml"": ""Enum - ...(optional)"", ""polygon_svg"": ""Enum - ...(optional)"", ""polygon_geojson"": ""Enum - ...(optional)"", ""polygon_threshold"": ""Number - ...(optional)"", ""limit"": ""Enum - ...(optional)"", ""json_callback"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://forward-reverse-geocoding.p.rapidapi.com/v1/reverse""

querystring = {""lat"":""41.8755616"",""lon"":""-87.6244212"",""zoom"":""10"",""addressdetails"":""1"",""namedetails"":""0"",""accept-language"":""en"",""format"":""json"",""polygon_text"":""0"",""polygon_kml"":""0"",""polygon_svg"":""0"",""polygon_geojson"":""0"",""polygon_threshold"":""0.0"",""limit"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""forward-reverse-geocoding.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Forward and Reverse Geocoding,GeocodingSearch,Free-form query forward geocoding.,https://rapidapi.com/GeocodeSupport/api/forward-reverse-geocoding/playground/apiendpoint_77841b8b-6b43-4f84-92c6-bf6f168cdec2,"{""q"": ""String - ...(required)"", ""format"": ""Enum - ...(optional)"", ""addressdetails"": ""Enum - ...(optional)"", ""namedetails"": ""Enum - ...(optional)"", ""accept-language"": ""String - Set the query and response language. Accepts two letter language codes (e.g. 'en' or 'es') or a combination of language and region code, e.g. 'en-GB' or 'es-AR'. Default: 'en'.(optional)"", ""countrycodes"": ""String - Two-letter country code as defined in ISO 3166-1 alpha2 to restrict search to a country.(optional)"", ""limit"": ""Enum - ...(optional)"", ""json_callback"": ""String - Name of json callback function for jsonp calls. Use format=json for this.(optional)"", ""viewbox"": ""String - Format: x1,y1,x2,y2 where is x is longitude and y latitude. The two coordinates have to span a box to let this work in conjunction with bounded=1 (see there).(optional)"", ""bounded"": ""Enum - Use bounded=1 in conjunction with viewbox to restrict search area. You can use this to search for amenities in a given area, e.g. post offices or police stations, etc. as q param.(optional)"", ""polygon_text"": ""Enum - ...(optional)"", ""polygon_svg"": ""Enum - ...(optional)"", ""polygon_kml"": ""Enum - ...(optional)"", ""polygon_geojson"": ""Enum - ...(optional)"", ""polygon_threshold"": ""Number - ...(optional)""}",,,,,,,"import requests

url = ""https://forward-reverse-geocoding.p.rapidapi.com/v1/search""

querystring = {""q"":""New York City NY USA"",""format"":""json"",""addressdetails"":""1"",""namedetails"":""0"",""accept-language"":""en"",""limit"":""5"",""bounded"":""0"",""polygon_text"":""0"",""polygon_svg"":""0"",""polygon_kml"":""0"",""polygon_geojson"":""0"",""polygon_threshold"":""0.0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""forward-reverse-geocoding.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TrueWay Directions,FindDrivingRoute,Find the best route and get multiple stops driving directions,https://rapidapi.com/trueway/api/trueway-directions2/playground/apiendpoint_4d20b929-44d3-415f-9b24-9ba6598002ce,"{""stops"": ""String - Specify two or more semicolon-delimited locations(Lat/Lng) between which the route is to be found. Max: 25(required)"", ""optimize"": ""Boolean - Instructs the API to reorder stops to find the optimized route. The route first stop and last stop order is not changed, their position is considered fixed.(optional)"", ""avoid_ferries"": ""Boolean - the route should avoid ferries(optional)"", ""avoid_highways"": ""Boolean - the route should avoid highways(optional)"", ""avoid_tolls"": ""Boolean - the route should avoid toll roads(optional)"", ""geometry_format"": ""String - geometry format: latlng, lnglat or geojson(optional)""}",,,,,,,"import requests

url = ""https://trueway-directions2.p.rapidapi.com/FindDrivingRoute""

querystring = {""stops"":""40.629041,-74.025606;40.630099,-73.993521;40.644895,-74.013818;40.627177,-73.980853""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""trueway-directions2.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
TrueWay Directions,FindDrivingPath,"Find the best route between an origin and a destination, passing through waypoints (if specified)",https://rapidapi.com/trueway/api/trueway-directions2/playground/apiendpoint_8e42a258-a716-4568-a09c-f5e4353b6d60,"{""origin"": ""String - The location from which you wish to calculate directions.(required)"", ""destination"": ""String - The location to which you wish to calculate directions.(required)"", ""waypoints"": ""String - Specifies an array of intermediate locations to include along the route between the origin and destination points as pass through locations. Max: 23(optional)"", ""geometry_format"": ""String - geometry format: latlng, lnglat or geojson(optional)"", ""avoid_highways"": ""Boolean - the route should avoid highways(optional)"", ""start_time"": ""String - Time when travel is expected to start. You can specify the time as an integer in seconds since midnight, January 1, 1970 UTC or you can use \\\""now\\\"" to specify the current time.(optional)"", ""avoid_tolls"": ""Boolean - the route should avoid toll roads(optional)"", ""avoid_ferries"": ""Boolean - the route should avoid ferries(optional)""}",,,,,,,"import requests

url = ""https://trueway-directions2.p.rapidapi.com/FindDrivingPath""

querystring = {""origin"":""40.629041,-74.025606"",""destination"":""40.627177,-73.980853""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""trueway-directions2.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Reverse Geocoding and Geolocation Service,GetNearestCities,,https://rapidapi.com/Noggle/api/reverse-geocoding-and-geolocation-service/playground/5b6b4b8ae4b0aa2f76d1ff84,"{""latitude"": ""Number - latitude in decimal degrees (wgs84)(required)"", ""longitude"": ""Number - longitude in decimal degrees (wgs84)(required)"", ""range"": ""Number - max radial range for lookup in meter (0=no range)(required)""}",,,,,,,"import requests

url = ""https://geocodeapi.p.rapidapi.com/GetNearestCities""

querystring = {""latitude"":""53.55196"",""longitude"":""9.98558"",""range"":""0""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""geocodeapi.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Reverse Geocoding and Geolocation Service,GetLargestCities,,https://rapidapi.com/Noggle/api/reverse-geocoding-and-geolocation-service/playground/5b6c91afe4b0aa2f76d203ad,"{""latitude"": ""Number - latitude in decimal degrees (wgs84)(required)"", ""longitude"": ""Number - longitude in decimal degrees (wgs84)(required)"", ""range"": ""Number - radial lookup range in meters (max 100.000)(required)""}",,,,,,,"import requests

url = ""https://geocodeapi.p.rapidapi.com/GetLargestCities""

querystring = {""latitude"":""53.55196"",""longitude"":""9.98558"",""range"":""50000""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""geocodeapi.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Reverse Geocoding and Geolocation Service,GetDistance,"Distance between two GPS latitude and longitude positions in meters, kilometers and miles. Retrieves compass direction and bearing. Information about start and destination country.",https://rapidapi.com/Noggle/api/reverse-geocoding-and-geolocation-service/playground/apiendpoint_372d2937-5e6f-48f7-a635-138bd4474ef4,"{""lat1"": ""Number - latitude in decimal degrees (wgs84)(required)"", ""lon1"": ""Number - longitude in decimal degrees (wgs84)(required)"", ""lat2"": ""Number - max radial range for lookup in meter (0=no range)(required)"", ""lon2"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://geocodeapi.p.rapidapi.com/GetDistance""

querystring = {""lat1"":""53.55196"",""lon1"":""9.98558"",""lat2"":""48.87443216181037"",""lon2"":""2.3304897319025466""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""geocodeapi.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Reverse Geocoding and Geolocation Service,GetTimezone,"Finds the local timezone for any given geo-location point by lat and long and returns timezone information with Timezone name, Timezone id and current local time.",https://rapidapi.com/Noggle/api/reverse-geocoding-and-geolocation-service/playground/apiendpoint_38dd3cf2-ba12-4673-bc89-100c5b45e576,"{""latitude"": ""Number - ...(required)"", ""longitude"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://geocodeapi.p.rapidapi.com/GetTimezone""

querystring = {""latitude"":""40.63380384389354"",""longitude"":""-74.40753570369408""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""geocodeapi.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Reverse Geocoding and Geolocation Service,IsOnWater,Checks whether a GPS coordinate is on water (sea or lake) or not.,https://rapidapi.com/Noggle/api/reverse-geocoding-and-geolocation-service/playground/apiendpoint_13d32d7f-b167-4024-b83c-5a5ef2affe2c,"{""lat"": ""Number - ...(required)"", ""lon"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://geocodeapi.p.rapidapi.com/isonwater""

querystring = {""lat"":""53.71381"",""lon"":""11.45935""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""geocodeapi.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
BizToc,Sources,Lists all currently available `{source_id}`s. Equivalent of news blocks on biztoc.com. Note that certain proprietary blocks like Twitter or Stock Tickers are not available.,https://rapidapi.com/thma/api/biztoc/playground/apiendpoint_5d54cb67-145c-4fbb-af66-c22f18356d50,No additional params,,,,,,,"import requests

url = ""https://biztoc.p.rapidapi.com/sources""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""biztoc.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
BizToc,News / Source,Get the latest news stories for the respective `{source_id}` in chronological order.,https://rapidapi.com/thma/api/biztoc/playground/apiendpoint_f404d9f7-dd7d-441e-b572-a84a8f9f76d2,"{""source_id"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://biztoc.p.rapidapi.com/news/source/bbc""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""biztoc.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
BizToc,News / Latest,"Get the latest news stories in chronological order, across all pages. Akin to the /wire view on biztoc.com.",https://rapidapi.com/thma/api/biztoc/playground/apiendpoint_6885a688-441d-4a46-a87c-e4ec56fdb106,No additional params,,,,,,,"import requests

url = ""https://biztoc.p.rapidapi.com/news/latest""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""biztoc.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
BizToc,News / Topics,"Get trending topic clusters and their respective stories, ordered by a proprietary popularity algorithm. Akin to the /topics view on biztoc.com. The topics and stories will change every hour.",https://rapidapi.com/thma/api/biztoc/playground/apiendpoint_a1f8156c-37a1-4d61-9c34-9be6d7721365,No additional params,,,,,,,"import requests

url = ""https://biztoc.p.rapidapi.com/news/topics""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""biztoc.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
BizToc,Search,Search across the entire news index from the last 14 days. Note that no search operators are supported via the API so all provided terms are considered required.,https://rapidapi.com/thma/api/biztoc/playground/apiendpoint_dcbc2a00-eec3-47b7-9cc6-eba87c231a06,"{""q"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://biztoc.p.rapidapi.com/search""

querystring = {""q"":""apple""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""biztoc.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Climate News Feed,Article page,Get articles in pages,https://rapidapi.com/TheTellusProject/api/climate-news-feed/playground/apiendpoint_41c8037f-3e48-428e-84aa-147086783331,"{""limit"": ""Number - ...(optional)"", ""id"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://climate-news-feed.p.rapidapi.com/page/1""

querystring = {""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""climate-news-feed.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Climate News Feed,Get all publications,Get the name of all publications this API delivers news from.,https://rapidapi.com/TheTellusProject/api/climate-news-feed/playground/apiendpoint_3ab45a71-9beb-4f3b-981e-4902921fd566,No additional params,,,,,,,"import requests

url = ""https://climate-news-feed.p.rapidapi.com/publications""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""climate-news-feed.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Climate News Feed,Get Articles,"Gets all articles.

query examples:
source = United Nations, Nasa Climate, The Guardian, Carbon Brief
Limit = 100 (default)
exclude=The Guardian",https://rapidapi.com/TheTellusProject/api/climate-news-feed/playground/apiendpoint_81439df0-e055-4922-9859-623c970929a1,"{""source"": ""String - ...(optional)"", ""limit"": ""Number - ...(optional)"", ""exclude"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://climate-news-feed.p.rapidapi.com/""

querystring = {""source"":""Nasa Climate"",""limit"":""50"",""exclude"":""The Guardian""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""climate-news-feed.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
BBC API,news,Endpoint for getting news for one of the 30 supported languages.,https://rapidapi.com/SayadUddinTahsin/api/bbc-api2/playground/apiendpoint_f52fb540-9285-41fd-ba79-c17ebcbdbe62,"{""lang"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://bbc-api2.p.rapidapi.com/news""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bbc-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
BBC API,latestNews,Endpoint for getting latest news for one of the 30 supported languages.,https://rapidapi.com/SayadUddinTahsin/api/bbc-api2/playground/apiendpoint_2b36a7ae-0b9d-4d1d-bb0d-3e107405a6b1,"{""lang"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://bbc-api2.p.rapidapi.com/latest""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""bbc-api2.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
OneLike,Social Media News in Greek,Get social media news in Greek,https://rapidapi.com/onelike-onelike-default/api/onelike1/playground/apiendpoint_fc489766-4b17-47d5-9755-6af64fe35872,No additional params,,,,,,,"import requests

url = ""https://onelike1.p.rapidapi.com/servicegr/news""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""onelike1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
OneLike,Social Media News in Chinese,Get social media news in Chinese,https://rapidapi.com/onelike-onelike-default/api/onelike1/playground/apiendpoint_eddebac9-f367-4b41-ba13-1e2883983747,No additional params,,,,,,,"import requests

url = ""https://onelike1.p.rapidapi.com/servicech/news""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""onelike1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
OneLike,Social Media News in Turkish,Get social media news in Turkish,https://rapidapi.com/onelike-onelike-default/api/onelike1/playground/apiendpoint_457a7934-7b9b-49c3-87ca-f9d164e616a5,No additional params,,,,,,,"import requests

url = ""https://onelike1.p.rapidapi.com/servicetr/news""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""onelike1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
OneLike,Social Media News in Japanese,Get social media news in Japanese,https://rapidapi.com/onelike-onelike-default/api/onelike1/playground/apiendpoint_2e40fa7b-4f35-48b8-a4b8-80d8915ad4c5,No additional params,,,,,,,"import requests

url = ""https://onelike1.p.rapidapi.com/servicejp/news""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""onelike1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
OneLike,Social Media News in Italian,Get social media news in Italian,https://rapidapi.com/onelike-onelike-default/api/onelike1/playground/apiendpoint_90a34102-b6ac-4ec3-b80a-338ee143c69d,No additional params,,,,,,,"import requests

url = ""https://onelike1.p.rapidapi.com/serviceit/news""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""onelike1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Rashifal API,Get Rashifal for all Rashis,It gets today rashifal for all twelve rashis.,https://rapidapi.com/sanyamjain007/api/daily-rashifal-api/playground/apiendpoint_946983b3-41f9-4751-b2ef-d0540b4d4781,No additional params,,,,,,,"import requests

url = ""https://daily-rashifal-api.p.rapidapi.com/all""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-rashifal-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Daily Rashifal API,Get Rashifal by Rashi,It gets today rashifal for the given rashi.,https://rapidapi.com/sanyamjain007/api/daily-rashifal-api/playground/apiendpoint_ea9b16bc-b37d-404d-a618-7c230fdb658c,"{""rashi"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://daily-rashifal-api.p.rapidapi.com/aries""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""daily-rashifal-api.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
US Presidential Election,osay,"Endpoint for One State, All Years (OSAY) results",https://rapidapi.com/vsilvia/api/us-presidential-election1/playground/apiendpoint_6e882c2c-a8ef-4b59-afe4-306c626aeafc,"{""state"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://us-presidential-election1.p.rapidapi.com/osay""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""us-presidential-election1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
US Presidential Election,osoy,"Endpoint for One State, One Year (OSOY) results",https://rapidapi.com/vsilvia/api/us-presidential-election1/playground/apiendpoint_981361e0-5ada-4aa4-a615-ca39cb4fc8b8,"{""state"": ""String - ...(required)"", ""year"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://us-presidential-election1.p.rapidapi.com/osoy""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""us-presidential-election1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
US Presidential Election,asoy,"Endpoint for All States, One Year (ASOY)",https://rapidapi.com/vsilvia/api/us-presidential-election1/playground/apiendpoint_5fb9eb7d-56f5-46f0-86ed-2e4c49f80b0c,"{""year"": ""Number - ...(required)""}",,,,,,,"import requests

url = ""https://us-presidential-election1.p.rapidapi.com/asoy""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""us-presidential-election1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Unofficial SHEIN,auto-complete,Get suggestions by term or phrase,https://rapidapi.com/apidojo/api/unofficial-shein/playground/apiendpoint_e01c13a6-ccbd-42d7-a18f-7219f8158288,"{""word"": ""String - Any term or phrase that you are familiar with(required)"", ""language"": ""String - The 2-letter language code(optional)"", ""country"": ""String - The 2-letter country code(optional)"", ""currency"": ""String - The 3-letter currency code(optional)""}",,,,,,,"import requests

url = ""https://unofficial-shein.p.rapidapi.com/auto-complete""

querystring = {""word"":""bikini top"",""language"":""en"",""country"":""US"",""currency"":""USD""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""unofficial-shein.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Unofficial SHEIN,reviews/list,List reviews related to a product,https://rapidapi.com/apidojo/api/unofficial-shein/playground/apiendpoint_e581ab18-63fa-4b32-9069-ac6c1d964340,"{""language"": ""String - The 2-letter language code(optional)"", ""country"": ""String - The 2-letter country code(optional)"", ""currency"": ""String - The 3-letter currency code(optional)"", ""goods_id"": ""String - The value of 'goods_id' field returned in .../products/list or .../products/search endpoint(optional)"", ""goods_spu"": ""String - The value of 'productRelationID' returned in .../products/list or .../products/search(optional)"", ""cat_id"": ""String - The value of cat_id returned in .../products/list or .../products/search(optional)"", ""sort"": ""String - One of the following : default|time_desc|time_asc(optional)"", ""comment_rank"": ""Number - Filter comments by rank, from 1 to 5(optional)"", ""color_id"": ""String - ...(optional)"", ""size"": ""String - One of the following : S|M|L|XL(optional)"", ""is_picture"": ""Number - Reviews must contain pictures, 0 or 1(optional)"", ""limit"": ""Number - The number of items per response, for paging purpose(optional)"", ""page"": ""Number - The page index, for paging purpose(optional)""}",,,,,,,"import requests

url = ""https://unofficial-shein.p.rapidapi.com/reviews/list""

querystring = {""language"":""en"",""country"":""US"",""currency"":""USD"",""goods_spu"":""m22022854841"",""cat_id"":""1980"",""sort"":""default"",""limit"":""20"",""page"":""1""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""unofficial-shein.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Unofficial SHEIN,countries/list,List all available and supported countries. This endpoint provides meta data for other endpoints.,https://rapidapi.com/apidojo/api/unofficial-shein/playground/apiendpoint_3f7b5501-e10b-4449-800c-ae0aff834343,No additional params,,,,,,,"import requests

url = ""https://unofficial-shein.p.rapidapi.com/countries/list""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""unofficial-shein.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Unofficial SHEIN,countries/detail,Get detailed information of a country,https://rapidapi.com/apidojo/api/unofficial-shein/playground/apiendpoint_749c2413-e19d-474c-9624-0f376524af03,"{""region"": ""String - The value of 'value' field returned in .../countries/list endpoint(optional)""}",,,,,,,"import requests

url = ""https://unofficial-shein.p.rapidapi.com/countries/detail""

querystring = {""region"":""US""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""unofficial-shein.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Unofficial SHEIN,navigations/get-tabs,Get tabs for navigation,https://rapidapi.com/apidojo/api/unofficial-shein/playground/apiendpoint_e027525b-b124-42c3-b519-70a23692acd8,"{""language"": ""String - The 2-letter language code(optional)"", ""country"": ""String - The 2-letter country code(optional)"", ""currency"": ""String - The 3-letter currency code(optional)""}",,,,,,,"import requests

url = ""https://unofficial-shein.p.rapidapi.com/navigations/get-tabs""

querystring = {""language"":""en"",""country"":""US"",""currency"":""USD""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""unofficial-shein.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Unofficial SHEIN,navigations/get-root,Get root categories related to a tab,https://rapidapi.com/apidojo/api/unofficial-shein/playground/apiendpoint_63a9431a-1490-49bd-a9da-965656f364e4,"{""language"": ""String - The 2-letter language code(optional)"", ""country"": ""String - The 2-letter country code(optional)"", ""channelType"": ""Number - The value of 'id' field returned in .../navigations/get-tabs endpoint(required)"", ""currency"": ""String - The 3-letter currency code(optional)""}",,,,,,,"import requests

url = ""https://unofficial-shein.p.rapidapi.com/navigations/get-root""

querystring = {""language"":""en"",""country"":""US"",""channelType"":""2"",""currency"":""USD""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""unofficial-shein.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
Unofficial SHEIN,navigations/get-node-content,Get children categories nested in a root category,https://rapidapi.com/apidojo/api/unofficial-shein/playground/apiendpoint_d6b2cb4b-3a87-4e4e-8721-5fc56d43f7f9,"{""language"": ""String - The 2-letter language code(optional)"", ""country"": ""String - The 2-letter country code(optional)"", ""currency"": ""String - The 3-letter currency code(optional)"", ""cat_id"": ""Number - The value of 'cat_id' field returned in .../navigations/get-tabs endpoint(required)"", ""id"": ""Number - The value of 'id' field returned in .../navigations/get-root endpoint(required)""}",,,,,,,"import requests

url = ""https://unofficial-shein.p.rapidapi.com/navigations/get-node-content""

querystring = {""language"":""en"",""country"":""US"",""currency"":""USD"",""cat_id"":""2026"",""id"":""26066300130""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""unofficial-shein.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
ExerciseDB,/exercises/name/{name},Return list of exercises by name,https://rapidapi.com/justin-WFnsXH_t6/api/exercisedb/playground/apiendpoint_e2b389b7-c39c-453b-8fbb-c141c74848fd,"{""offset"": ""Number - ...(optional)"", ""limit"": ""Number - ...(optional)"", ""name"": ""String - ...(required)""}",,,,,,,"import requests

url = ""https://exercisedb.p.rapidapi.com/exercises/name/%7Bname%7D""

querystring = {""offset"":""0"",""limit"":""10""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""exercisedb.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
OneLike,Social Media News in Russian,Get social media news in Russian,https://rapidapi.com/onelike-onelike-default/api/onelike1/playground/apiendpoint_bad56942-2edc-422b-8b06-0157dd79187b,No additional params,,,,,,,"import requests

url = ""https://onelike1.p.rapidapi.com/serviceru/news""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""onelike1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Pokemon Go,Pokemon Evolutions,$11a,https://rapidapi.com/Chewett/api/pokemon-go1/playground/apiendpoint_d5b92f58-0dd7-4b32-9e74-541107e3590c,No additional params,,,,,,,"import requests

url = ""https://pokemon-go1.p.rapidapi.com/pokemon_evolutions.json""

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""pokemon-go1.p.rapidapi.com""
}

response = requests.get(url, headers=headers)

print(response.json())"
Spotify,Playlist tracks,Get playlist tracks,https://rapidapi.com/Glavier/api/spotify23/playground/apiendpoint_79a2807d-a638-45de-93ce-7c4005497873,"{""id"": ""String - Playlist ID(required)"", ""offset"": ""Number - ...(optional)"", ""limit"": ""String - ...(optional)""}",,,,,,,"import requests

url = ""https://spotify23.p.rapidapi.com/playlist_tracks/""

querystring = {""id"":""37i9dQZF1DX4Wsb4d7NKfP"",""offset"":""0"",""limit"":""100""}

headers = {
	""x-rapidapi-key"": ""887d71b920mshd04c314a5ea867bp15a429jsn1949371722b4"",
	""x-rapidapi-host"": ""spotify23.p.rapidapi.com""
}

response = requests.get(url, headers=headers, params=querystring)

print(response.json())"
